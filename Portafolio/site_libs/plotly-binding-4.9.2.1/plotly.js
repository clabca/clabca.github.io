HTMLWidgets.widget({name:"plotly",type:"output",initialize:function(el,width,height){return{};},resize:function(el,width,height,instance){if(instance.autosize){var width=instance.width||width;var height=instance.height||height;Plotly.relayout(el.id,{width:width,height:height});}},renderValue:function(el,x,instance){var lay=x.layout||{};instance.width=lay.width;instance.height=lay.height;instance.autosize=lay.autosize||true;var ctConfig=crosstalk.var('plotlyCrosstalkOpts').set(x.highlight);if(typeof(window)!=="undefined"){window.PLOTLYENV=window.PLOTLYENV||{};window.PLOTLYENV.BASE_URL=x.base_url;var persistOnShift=function(e){if(!e)window.event;if(e.shiftKey){x.highlight.persistent=true;x.highlight.persistentShift=true;}else{x.highlight.persistent=false;x.highlight.persistentShift=false;}};if(!x.highlight.persistent){window.onmousemove=persistOnShift;}}
var graphDiv=document.getElementById(el.id);HTMLWidgets.addPostRenderHandler(function(){var modebars=document.querySelectorAll(".js-plotly-plot .plotly .modebar");for(var i=0;i<modebars.length;i++){modebars[i].style.zIndex=1;}});if(x.selectize||x.highlight.dynamic&&!instance.plotly){var flex=document.createElement("div");flex.class="plotly-crosstalk-control-panel";flex.style="display: flex; flex-wrap: wrap";if(x.highlight.dynamic){var pickerDiv=document.createElement("div");var pickerInput=document.createElement("input");pickerInput.id=el.id+"-colourpicker";pickerInput.placeholder="asdasd";var pickerLabel=document.createElement("label");pickerLabel.for=pickerInput.id;pickerLabel.innerHTML="Brush color&nbsp;&nbsp;";pickerDiv.appendChild(pickerLabel);pickerDiv.appendChild(pickerInput);flex.appendChild(pickerDiv);}
if(x.selectize){var ids=Object.keys(x.selectize);for(var i=0;i<ids.length;i++){var container=document.createElement("div");container.id=ids[i];container.style="width: 80%; height: 10%";container.class="form-group crosstalk-input-plotly-highlight";var label=document.createElement("label");label.for=ids[i];label.innerHTML=x.selectize[ids[i]].group;label.class="control-label";var selectDiv=document.createElement("div");var select=document.createElement("select");select.multiple=true;selectDiv.appendChild(select);container.appendChild(label);container.appendChild(selectDiv);flex.appendChild(container);}}
graphDiv.parentElement.insertBefore(flex,graphDiv);if(x.highlight.dynamic){var picker=$("#"+pickerInput.id);var colors=x.highlight.color||[];var opts={value:colors[0],showColour:"both",palette:"limited",allowedCols:colors.join(" "),width:"20%",height:"10%"};picker.colourpicker({changeDelay:0});picker.colourpicker("settings",opts);picker.colourpicker("value",opts.value);var grps=x.highlight.ctGroups||[];for(var i=0;i<grps.length;i++){crosstalk.group(grps[i]).var('plotlySelectionColour').set(picker.colourpicker('value'));}
picker.on("change",function(){for(var i=0;i<grps.length;i++){crosstalk.group(grps[i]).var('plotlySelectionColour').set(picker.colourpicker('value'));}});}}
if(!instance.plotly){var plot=Plotly.plot(graphDiv,x);instance.plotly=true;}else{Plotly.purge(graphDiv);graphDiv.data=undefined;graphDiv.layout=undefined;var plot=Plotly.plot(graphDiv,x);}
plot.then(function(){if(HTMLWidgets.shinyMode){Shiny.addCustomMessageHandler("plotly-calls",function(msg){var gd=document.getElementById(msg.id);if(!gd){throw new Error("Couldn't find plotly graph with id: "+msg.id);}
if(msg.method=="reconfig"){Plotly.react(gd,gd.data,gd.layout,msg.args);return;}
if(!Plotly[msg.method]){throw new Error("Unknown method "+msg.method);}
var args=[gd].concat(msg.args);Plotly[msg.method].apply(null,args);});}
var mapboxIDs=graphDiv._fullLayout._subplots.mapbox||[];for(var i=0;i<mapboxIDs.length;i++){var id=mapboxIDs[i];var mapOpts=x.layout[id]||{};var args=mapOpts._fitBounds||{};if(!args){continue;}
var mapObj=graphDiv._fullLayout[id]._subplot.map;mapObj.fitBounds(args.bounds,args.options);}});function eventDataWithKey(eventData){if(eventData===undefined||!eventData.hasOwnProperty("points")){return null;}
return eventData.points.map(function(pt){var obj={curveNumber:pt.curveNumber,pointNumber:pt.pointNumber,x:pt.x,y:pt.y};if(pt.hasOwnProperty("z")){obj.z=pt.z;}
if(pt.hasOwnProperty("customdata")){obj.customdata=pt.customdata;}
var gd=document.getElementById(el.id);var trace=gd.data[pt.curveNumber];if(!trace._isSimpleKey){var attrsToAttach=["key"];}else{obj.key=trace.key;var attrsToAttach=[];}
for(var i=0;i<attrsToAttach.length;i++){var attr=trace[attrsToAttach[i]];if(Array.isArray(attr)){if(typeof pt.pointNumber==="number"){obj[attrsToAttach[i]]=attr[pt.pointNumber];}else if(Array.isArray(pt.pointNumber)){obj[attrsToAttach[i]]=attr[pt.pointNumber[0]][pt.pointNumber[1]];}else if(Array.isArray(pt.pointNumbers)){obj[attrsToAttach[i]]=pt.pointNumbers.map(function(idx){return attr[idx];});}}}
return obj;});}
var legendEventData=function(d){var trace=d.data[d.curveNumber];if(!trace.legendgroup)return trace;var legendgrps=d.data.map(function(trace){return trace.legendgroup;});var traces=[];for(i=0;i<legendgrps.length;i++){if(legendgrps[i]==trace.legendgroup){traces.push(d.data[i]);}}
return traces;};if(HTMLWidgets.shinyMode&&Shiny.setInputValue){var eventClearMap={plotly_deselect:["plotly_selected","plotly_selecting","plotly_brushed","plotly_brushing","plotly_click"],plotly_unhover:["plotly_hover"],plotly_doubleclick:["plotly_click"]};Object.keys(eventClearMap).map(function(evt){graphDiv.on(evt,function(){var inputsToClear=eventClearMap[evt];inputsToClear.map(function(input){Shiny.setInputValue(input+"-"+x.source,null,{priority:"event"});});});});var eventDataFunctionMap={plotly_click:eventDataWithKey,plotly_sunburstclick:eventDataWithKey,plotly_hover:eventDataWithKey,plotly_unhover:eventDataWithKey,plotly_selected:function(d){if(d){return eventDataWithKey(d);}},plotly_selecting:function(d){if(d){return eventDataWithKey(d);}},plotly_brushed:function(d){if(d){return d.range?d.range:d.lassoPoints;}},plotly_brushing:function(d){if(d){return d.range?d.range:d.lassoPoints;}},plotly_legendclick:legendEventData,plotly_legenddoubleclick:legendEventData,plotly_clickannotation:function(d){return d.fullAnnotation}};var registerShinyValue=function(event){var eventDataPreProcessor=eventDataFunctionMap[event]||function(d){return d?d:el.id};var plotlyJSevent=(event=="plotly_brushed")?"plotly_selected":(event=="plotly_brushing")?"plotly_selecting":event;graphDiv.on(plotlyJSevent,function(d){Shiny.setInputValue(event+"-"+x.source,JSON.stringify(eventDataPreProcessor(d)),{priority:"event"});});}
var shinyEvents=x.shinyEvents||[];shinyEvents.map(registerShinyValue);}
function pointsToKeys(points){var keysBySet={};for(var i=0;i<points.length;i++){var trace=graphDiv.data[points[i].curveNumber];if(!trace.key||!trace.set){continue;}
keysBySet[trace.set]=keysBySet[trace.set]||{value:[],_isSimpleKey:trace._isSimpleKey};var ptNum=points[i].pointNumber;var hasPtNum=typeof ptNum==="number";var ptNum=hasPtNum?ptNum:points[i].pointNumbers;var key=trace._isSimpleKey?trace.key:Array.isArray(ptNum)?ptNum.map(function(idx){return trace.key[idx];}):trace.key[ptNum];var keyFlat=trace._isNestedKey?[].concat.apply([],key):key;keysBySet[trace.set].value=keysBySet[trace.set].value.concat(keyFlat);}
return keysBySet;}
x.highlight.color=x.highlight.color||[];if(!Array.isArray(x.highlight.color)){x.highlight.color=[x.highlight.color];}
var traceManager=new TraceManager(graphDiv,x.highlight);var allSets=[];for(var curveIdx=0;curveIdx<x.data.length;curveIdx++){var newSet=x.data[curveIdx].set;if(newSet){if(allSets.indexOf(newSet)===-1){allSets.push(newSet);}}}
for(var i=0;i<allSets.length;i++){var set=allSets[i];var selection=new crosstalk.SelectionHandle(set);var filter=new crosstalk.FilterHandle(set);var filterChange=function(e){removeBrush(el);traceManager.updateFilter(set,e.value);};filter.on("change",filterChange);var selectionChange=function(e){if(x.highlight.on==="plotly_selected"&&x.highlight.persistentShift){Array.prototype.diff=function(a){return this.filter(function(i){return a.indexOf(i)<0;});};e.value=e.value.diff(e.oldValue);}
var selectionHistory=crosstalk.var("plotlySelectionHistory").get()||[];var event={receiverID:traceManager.gd.id,plotlySelectionColour:crosstalk.group(set).var("plotlySelectionColour").get()};event[set]=e.value;if(selectionHistory.length>0){var ev=JSON.stringify(event);for(var i=0;i<selectionHistory.length;i++){var sel=JSON.stringify(selectionHistory[i]);if(sel==ev){return;}}}
if(!x.highlight.persistent){selectionHistory=[event];}else{selectionHistory.push(event);}
crosstalk.var("plotlySelectionHistory").set(selectionHistory);traceManager.updateSelection(set,e.value);if(x.selectize){if(!x.highlight.persistent||e.value===null){selectize.clear(true);}
selectize.addItems(e.value,true);selectize.close();}}
selection.on("change",selectionChange);var turnOn=function(e){if(e){var selectedKeys=pointsToKeys(e.points);for(var set in selectedKeys){if(selectedKeys.hasOwnProperty(set)){selection.set(selectedKeys[set].value,{sender:el});}}}};if(x.highlight.debounce>0){turnOn=debounce(turnOn,x.highlight.debounce);}
graphDiv.on(x.highlight.on,turnOn);graphDiv.on(x.highlight.off,function turnOff(e){removeBrush(el);crosstalk.var("plotlySelectionHistory").set(null);selection.set(null,{sender:el});});if(x.selectize){var selectizeID=Object.keys(x.selectize)[i];var items=x.selectize[selectizeID].items;var first=[{value:"",label:"(All)"}];var opts={options:first.concat(items),searchField:"label",valueField:"value",labelField:"label",maxItems:50};var select=$("#"+selectizeID).find("select")[0];var selectize=$(select).selectize(opts)[0].selectize;selectize.on("change",function(){var currentItems=traceManager.groupSelections[set]||[];if(!x.highlight.persistent){removeBrush(el);for(var i=0;i<currentItems.length;i++){selectize.removeItem(currentItems[i],true);}}
var newItems=selectize.items.filter(function(idx){return currentItems.indexOf(idx)<0;});if(newItems.length>0){traceManager.updateSelection(set,newItems);}else{traceManager.updateSelection(set,null);traceManager.updateSelection(set,selectize.items);}});}}}});function TraceManager(graphDiv,highlight){this.gd=graphDiv;this.origData=JSON.parse(JSON.stringify(graphDiv.data));this.origOpacity=[];for(var i=0;i<this.origData.length;i++){this.origOpacity[i]=this.origData[i].opacity===0?0:(this.origData[i].opacity||1);}
this.groupSelections={};this.highlight=highlight;}
TraceManager.prototype.close=function(){};TraceManager.prototype.updateFilter=function(group,keys){if(typeof(keys)==="undefined"||keys===null){this.gd.data=JSON.parse(JSON.stringify(this.origData));}else{var traces=[];for(var i=0;i<this.origData.length;i++){var trace=this.origData[i];if(!trace.key||trace.set!==group){continue;}
var matchFunc=getMatchFunc(trace);var matches=matchFunc(trace.key,keys);if(matches.length>0){if(!trace._isSimpleKey){trace=subsetArrayAttrs(trace,matches);}
traces.push(trace);}}}
this.gd.data=traces;Plotly.redraw(this.gd);};TraceManager.prototype.updateSelection=function(group,keys){if(keys!==null&&!Array.isArray(keys)){throw new Error("Invalid keys argument; null or array expected");}
var nNewTraces=this.gd.data.length-this.origData.length;if(keys===null||!this.highlight.persistent&&nNewTraces>0){var tracesToRemove=[];for(var i=0;i<this.gd.data.length;i++){if(this.gd.data[i]._isCrosstalkTrace)tracesToRemove.push(i);}
Plotly.deleteTraces(this.gd,tracesToRemove);this.groupSelections[group]=keys;}else{this.groupSelections[group]=this.groupSelections[group]||[];for(var i=0;i<keys.length;i++){var k=keys[i];if(this.groupSelections[group].indexOf(k)<0){this.groupSelections[group].push(k);}}}
if(keys===null){Plotly.restyle(this.gd,{"opacity":this.origOpacity});}else if(keys.length>=1){var traces=[];var selectionColour=crosstalk.group(group).var("plotlySelectionColour").get()||this.highlight.color[0];for(var i=0;i<this.origData.length;i++){var trace=JSON.parse(JSON.stringify(this.gd.data[i]));if(!trace.key||trace.set!==group){continue;}
var matchFunc=getMatchFunc(trace);var matches=matchFunc(trace.key,keys);if(matches.length>0){if(!trace._isSimpleKey){trace=subsetArrayAttrs(trace,matches);}
var d=this.gd._fullData[i];$.extend(true,trace,this.highlight.selected);if(d.marker){trace.marker=trace.marker||{};trace.marker.color=selectionColour||trace.marker.color||d.marker.color;}
if(d.line){trace.line=trace.line||{};trace.line.color=selectionColour||trace.line.color||d.line.color;}
if(d.textfont){trace.textfont=trace.textfont||{};trace.textfont.color=selectionColour||trace.textfont.color||d.textfont.color;}
if(d.fillcolor){trace.fillcolor=selectionColour||trace.fillcolor||d.fillcolor;}
trace.name=trace.name||keys.join("<br />");trace.legendgroup=trace.legendgroup||keys.join("<br />");trace._originalIndex=i;trace._newIndex=this.gd._fullData.length+traces.length;trace._isCrosstalkTrace=true;traces.push(trace);}}
if(traces.length>0){Plotly.addTraces(this.gd,traces).then(function(gd){var _hash=gd._transitionData._frameHash;var _frames=gd._transitionData._frames||[];for(var i=0;i<_frames.length;i++){var newIndices=[];for(var j=0;j<traces.length;j++){var tr=traces[j];if(_frames[i].traces.indexOf(tr._originalIndex)>-1){newIndices.push(tr._newIndex);_frames[i].traces.push(tr._newIndex);}}
if(newIndices.length===0){continue;}
var ctr=0;var nFrameTraces=_frames[i].data.length;for(var j=0;j<nFrameTraces;j++){var frameTrace=_frames[i].data[j];if(!frameTrace.key||frameTrace.set!==group){continue;}
var matchFunc=getMatchFunc(frameTrace);var matches=matchFunc(frameTrace.key,keys);if(matches.length>0){if(!trace._isSimpleKey){frameTrace=subsetArrayAttrs(frameTrace,matches);}
var d=gd._fullData[newIndices[ctr]];if(d.marker){frameTrace.marker=d.marker;}
if(d.line){frameTrace.line=d.line;}
if(d.textfont){frameTrace.textfont=d.textfont;}
ctr=ctr+1;_frames[i].data.push(frameTrace);}}
_hash[_frames[i].name]=_frames[i];}});var tracesToDim=[],opacities=[],sets=Object.keys(this.groupSelections),n=this.origData.length;for(var i=0;i<n;i++){var opacity=this.origOpacity[i]||1;if(opacity!==this.gd._fullData[i].opacity||this.highlight.opacityDim===1){continue;}
var matches=findMatches(sets,[this.gd.data[i].set]);if(matches.length){tracesToDim.push(i);opacities.push(opacity*this.highlight.opacityDim);}}
if(tracesToDim.length>0){Plotly.restyle(this.gd,{"opacity":opacities},tracesToDim);Plotly.restyle(this.gd,{"selectedpoints":null});}}}};function getMatchFunc(trace){return(trace._isNestedKey)?findNestedMatches:(trace._isSimpleKey)?findSimpleMatches:findMatches;}
function findMatches(haystack,needleSet){var matches=[];haystack.forEach(function(obj,i){if(obj===null||needleSet.indexOf(obj)>=0){matches.push(i);}});return matches;}
function findSimpleMatches(haystack,needleSet){var match=haystack.every(function(val){return val===null||needleSet.indexOf(val)>=0;});return(match)?[0]:[]}
function findNestedMatches(haystack,needleSet){var matches=[];for(var i=0;i<haystack.length;i++){var hay=haystack[i];var match=hay.every(function(val){return val===null||needleSet.indexOf(val)>=0;});if(match){matches.push(i);}}
return matches;}
function isPlainObject(obj){return(Object.prototype.toString.call(obj)==='[object Object]'&&Object.getPrototypeOf(obj)===Object.prototype);}
function subsetArrayAttrs(obj,indices){var newObj={};Object.keys(obj).forEach(function(k){var val=obj[k];if(k.charAt(0)==="_"){newObj[k]=val;}else if(k==="transforms"&&Array.isArray(val)){newObj[k]=val.map(function(transform){return subsetArrayAttrs(transform,indices);});}else if(k==="colorscale"&&Array.isArray(val)){newObj[k]=val;}else if(isPlainObject(val)){newObj[k]=subsetArrayAttrs(val,indices);}else if(Array.isArray(val)){newObj[k]=subsetArray(val,indices);}else{newObj[k]=val;}});return newObj;}
function subsetArray(arr,indices){var result=[];for(var i=0;i<indices.length;i++){result.push(arr[indices[i]]);}
return result;}
function removeBrush(el){var outlines=el.querySelectorAll(".select-outline");for(var i=0;i<outlines.length;i++){outlines[i].remove();}}
function debounce(func,wait,immediate){var timeout;return function(){var context=this,args=arguments;var later=function(){timeout=null;if(!immediate)func.apply(context,args);};var callNow=immediate&&!timeout;clearTimeout(timeout);timeout=setTimeout(later,wait);if(callNow)func.apply(context,args);};};