2023-10-13 21:19:50,427:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 21:19:50,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 21:19:50,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 21:19:50,428:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 21:20:25,021:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_14620\1152755250.py:2: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  corr = round(df.corr(),4)

2023-10-13 21:20:29,328:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_14620\1260000182.py:1: FutureWarning:

The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.


2023-10-13 21:20:32,799:INFO:PyCaret ClassificationExperiment
2023-10-13 21:20:32,799:INFO:Logging name: clf-default-name
2023-10-13 21:20:32,800:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-10-13 21:20:32,800:INFO:version 3.1.0
2023-10-13 21:20:32,800:INFO:Initializing setup()
2023-10-13 21:20:32,801:INFO:self.USI: 7183
2023-10-13 21:20:32,801:INFO:self._variable_keys: {'logging_param', 'memory', 'html_param', 'pipeline', 'target_param', 'X_test', 'log_plots_param', 'data', 'y_train', 'X_train', '_ml_usecase', 'gpu_n_jobs_param', 'y', 'fix_imbalance', 'n_jobs_param', 'fold_generator', 'seed', 'USI', 'exp_id', 'exp_name_log', 'gpu_param', 'is_multiclass', 'fold_shuffle_param', 'idx', 'y_test', 'X', '_available_plots', 'fold_groups_param'}
2023-10-13 21:20:32,801:INFO:Checking environment
2023-10-13 21:20:32,802:INFO:python_version: 3.10.11
2023-10-13 21:20:32,802:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2023-10-13 21:20:32,802:INFO:machine: AMD64
2023-10-13 21:20:32,802:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-13 21:20:32,809:INFO:Memory: svmem(total=8514203648, available=2442878976, percent=71.3, used=6071324672, free=2442878976)
2023-10-13 21:20:32,809:INFO:Physical Core: 2
2023-10-13 21:20:32,811:INFO:Logical Core: 4
2023-10-13 21:20:32,811:INFO:Checking libraries
2023-10-13 21:20:32,811:INFO:System:
2023-10-13 21:20:32,811:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2023-10-13 21:20:32,811:INFO:executable: C:\Users\clabc\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\python.exe
2023-10-13 21:20:32,811:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-13 21:20:32,812:INFO:PyCaret required dependencies:
2023-10-13 21:20:33,083:INFO:                 pip: 23.0.1
2023-10-13 21:20:33,083:INFO:          setuptools: 65.5.0
2023-10-13 21:20:33,084:INFO:             pycaret: 3.1.0
2023-10-13 21:20:33,084:INFO:             IPython: 8.7.0
2023-10-13 21:20:33,084:INFO:          ipywidgets: 8.1.1
2023-10-13 21:20:33,084:INFO:                tqdm: 4.66.1
2023-10-13 21:20:33,085:INFO:               numpy: 1.23.5
2023-10-13 21:20:33,085:INFO:              pandas: 1.5.2
2023-10-13 21:20:33,085:INFO:              jinja2: 3.1.2
2023-10-13 21:20:33,085:INFO:               scipy: 1.10.1
2023-10-13 21:20:33,086:INFO:              joblib: 1.2.0
2023-10-13 21:20:33,086:INFO:             sklearn: 1.2.0
2023-10-13 21:20:33,086:INFO:                pyod: 1.1.0
2023-10-13 21:20:33,086:INFO:            imblearn: 0.11.0
2023-10-13 21:20:33,086:INFO:   category_encoders: 2.6.2
2023-10-13 21:20:33,086:INFO:            lightgbm: 4.1.0
2023-10-13 21:20:33,086:INFO:               numba: 0.58.0
2023-10-13 21:20:33,087:INFO:            requests: 2.31.0
2023-10-13 21:20:33,087:INFO:          matplotlib: 3.8.0
2023-10-13 21:20:33,087:INFO:          scikitplot: 0.3.7
2023-10-13 21:20:33,087:INFO:         yellowbrick: 1.5
2023-10-13 21:20:33,087:INFO:              plotly: 5.17.0
2023-10-13 21:20:33,087:INFO:    plotly-resampler: Not installed
2023-10-13 21:20:33,088:INFO:             kaleido: 0.2.1
2023-10-13 21:20:33,088:INFO:           schemdraw: 0.15
2023-10-13 21:20:33,088:INFO:         statsmodels: 0.14.0
2023-10-13 21:20:33,088:INFO:              sktime: 0.21.1
2023-10-13 21:20:33,088:INFO:               tbats: 1.1.3
2023-10-13 21:20:33,088:INFO:            pmdarima: 2.0.3
2023-10-13 21:20:33,088:INFO:              psutil: 5.9.4
2023-10-13 21:20:33,088:INFO:          markupsafe: 2.1.1
2023-10-13 21:20:33,088:INFO:             pickle5: Not installed
2023-10-13 21:20:33,089:INFO:         cloudpickle: 2.2.1
2023-10-13 21:20:33,089:INFO:         deprecation: 2.1.0
2023-10-13 21:20:33,089:INFO:              xxhash: 3.4.1
2023-10-13 21:20:33,089:INFO:           wurlitzer: Not installed
2023-10-13 21:20:33,089:INFO:PyCaret optional dependencies:
2023-10-13 21:20:33,179:INFO:                shap: Not installed
2023-10-13 21:20:33,179:INFO:           interpret: Not installed
2023-10-13 21:20:33,180:INFO:                umap: Not installed
2023-10-13 21:20:33,180:INFO:     ydata_profiling: Not installed
2023-10-13 21:20:33,180:INFO:  explainerdashboard: Not installed
2023-10-13 21:20:33,180:INFO:             autoviz: Not installed
2023-10-13 21:20:33,181:INFO:           fairlearn: Not installed
2023-10-13 21:20:33,181:INFO:          deepchecks: Not installed
2023-10-13 21:20:33,181:INFO:             xgboost: Not installed
2023-10-13 21:20:33,181:INFO:            catboost: Not installed
2023-10-13 21:20:33,181:INFO:              kmodes: Not installed
2023-10-13 21:20:33,182:INFO:             mlxtend: Not installed
2023-10-13 21:20:33,182:INFO:       statsforecast: Not installed
2023-10-13 21:20:33,182:INFO:        tune_sklearn: Not installed
2023-10-13 21:20:33,182:INFO:                 ray: Not installed
2023-10-13 21:20:33,182:INFO:            hyperopt: Not installed
2023-10-13 21:20:33,182:INFO:              optuna: Not installed
2023-10-13 21:20:33,182:INFO:               skopt: Not installed
2023-10-13 21:20:33,183:INFO:              mlflow: Not installed
2023-10-13 21:20:33,183:INFO:              gradio: Not installed
2023-10-13 21:20:33,183:INFO:             fastapi: Not installed
2023-10-13 21:20:33,183:INFO:             uvicorn: Not installed
2023-10-13 21:20:33,183:INFO:              m2cgen: Not installed
2023-10-13 21:20:33,183:INFO:           evidently: Not installed
2023-10-13 21:20:33,183:INFO:               fugue: Not installed
2023-10-13 21:20:33,184:INFO:           streamlit: Not installed
2023-10-13 21:20:33,184:INFO:             prophet: Not installed
2023-10-13 21:20:33,184:INFO:None
2023-10-13 21:20:33,184:INFO:Set up data.
2023-10-13 21:20:33,225:INFO:Set up folding strategy.
2023-10-13 21:20:33,225:INFO:Set up train/test split.
2023-10-13 21:20:33,264:INFO:Set up index.
2023-10-13 21:20:33,264:INFO:Assigning column types.
2023-10-13 21:20:33,277:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-10-13 21:20:33,564:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-13 21:20:33,590:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-10-13 21:20:34,306:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:34,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:35,096:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-13 21:20:35,100:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-10-13 21:20:35,662:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:35,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:35,666:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-10-13 21:20:36,185:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-10-13 21:20:36,367:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:36,368:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:36,912:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-10-13 21:20:37,254:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:37,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:37,257:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-10-13 21:20:37,755:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:37,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:38,253:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:38,255:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:38,268:INFO:Preparing preprocessing pipeline...
2023-10-13 21:20:38,276:INFO:Set up label encoding.
2023-10-13 21:20:38,277:INFO:Set up iterative imputation.
2023-10-13 21:20:38,277:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-13 21:20:38,309:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-13 21:20:38,328:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-13 21:20:38,656:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-13 21:20:38,913:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:38,913:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:39,482:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:39,483:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:39,570:INFO:Set up encoding of ordinal features.
2023-10-13 21:20:39,582:INFO:Set up encoding of categorical features.
2023-10-13 21:20:39,583:INFO:Set up column transformation.
2023-10-13 21:20:39,583:INFO:Set up feature normalization.
2023-10-13 21:20:40,763:INFO:Finished creating preprocessing pipeline.
2023-10-13 21:20:40,941:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\clabc\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbd...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-10-13 21:20:40,941:INFO:Creating final display dataframe.
2023-10-13 21:20:42,613:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\pipeline.py:278: UserWarning:

Persisting input arguments took 0.51s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.


2023-10-13 21:20:42,952:INFO:Setup _display_container:                         Description                   Value
0                        Session id                       0
1                            Target            Segmentation
2                       Target type              Multiclass
3                    Target mapping  A: 0, B: 1, C: 2, D: 3
4               Original data shape              (7261, 10)
5            Transformed data shape              (7261, 20)
6       Transformed train set shape              (5082, 20)
7        Transformed test set shape              (2179, 20)
8                  Ordinal features                       3
9                  Numeric features                       3
10             Categorical features                       6
11                       Preprocess                    True
12                  Imputation type               iterative
13  Iterative imputation iterations                       5
14        Numeric iterative imputer                lightgbm
15    Categorical iterative imputer                lightgbm
16         Maximum one-hot encoding                      25
17                  Encoding method                    None
18                   Transformation                    True
19            Transformation method             yeo-johnson
20                        Normalize                    True
21                 Normalize method                  zscore
22                   Fold Generator         StratifiedKFold
23                      Fold Number                      10
24                         CPU Jobs                      -1
25                          Use GPU                   False
26                   Log Experiment                   False
27                  Experiment Name        clf-default-name
28                              USI                    7183
2023-10-13 21:20:43,494:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:43,495:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:43,990:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:43,992:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-13 21:20:43,994:INFO:setup() successfully completed in 11.2s...............
2023-10-13 21:20:44,271:INFO:Initializing compare_models()
2023-10-13 21:20:44,272:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, include=None, fold=10, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, 'include': None, 'exclude': None, 'fold': 10, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-10-13 21:20:44,272:INFO:Checking exceptions
2023-10-13 21:20:44,288:INFO:Preparing display monitor
2023-10-13 21:20:44,396:INFO:Initializing Logistic Regression
2023-10-13 21:20:44,396:INFO:Total runtime is 0.0 minutes
2023-10-13 21:20:44,409:INFO:SubProcess create_model() called ==================================
2023-10-13 21:20:44,410:INFO:Initializing create_model()
2023-10-13 21:20:44,411:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D6276FABF0>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:20:44,411:INFO:Checking exceptions
2023-10-13 21:20:44,412:INFO:Importing libraries
2023-10-13 21:20:44,412:INFO:Copying training dataset
2023-10-13 21:20:44,446:INFO:Defining folds
2023-10-13 21:20:44,446:INFO:Declaring metric variables
2023-10-13 21:20:44,464:INFO:Importing untrained model
2023-10-13 21:20:44,481:INFO:Logistic Regression Imported successfully
2023-10-13 21:20:44,524:INFO:Starting cross validation
2023-10-13 21:20:44,535:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:21:10,950:INFO:Calculating mean and std
2023-10-13 21:21:10,955:INFO:Creating metrics dataframe
2023-10-13 21:21:10,969:INFO:Uploading results into container
2023-10-13 21:21:10,973:INFO:Uploading model into container now
2023-10-13 21:21:10,974:INFO:_master_model_container: 1
2023-10-13 21:21:10,974:INFO:_display_container: 2
2023-10-13 21:21:10,975:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-10-13 21:21:10,976:INFO:create_model() successfully completed......................................
2023-10-13 21:21:11,097:INFO:SubProcess create_model() end ==================================
2023-10-13 21:21:11,098:INFO:Creating metrics dataframe
2023-10-13 21:21:11,119:INFO:Initializing K Neighbors Classifier
2023-10-13 21:21:11,120:INFO:Total runtime is 0.44540099302927655 minutes
2023-10-13 21:21:11,129:INFO:SubProcess create_model() called ==================================
2023-10-13 21:21:11,130:INFO:Initializing create_model()
2023-10-13 21:21:11,130:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D6276FABF0>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:21:11,131:INFO:Checking exceptions
2023-10-13 21:21:11,131:INFO:Importing libraries
2023-10-13 21:21:11,131:INFO:Copying training dataset
2023-10-13 21:21:11,157:INFO:Defining folds
2023-10-13 21:21:11,158:INFO:Declaring metric variables
2023-10-13 21:21:11,173:INFO:Importing untrained model
2023-10-13 21:21:11,185:INFO:K Neighbors Classifier Imported successfully
2023-10-13 21:21:11,223:INFO:Starting cross validation
2023-10-13 21:21:11,240:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:21:17,490:INFO:Calculating mean and std
2023-10-13 21:21:17,495:INFO:Creating metrics dataframe
2023-10-13 21:21:17,507:INFO:Uploading results into container
2023-10-13 21:21:17,508:INFO:Uploading model into container now
2023-10-13 21:21:17,509:INFO:_master_model_container: 2
2023-10-13 21:21:17,509:INFO:_display_container: 2
2023-10-13 21:21:17,510:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-10-13 21:21:17,511:INFO:create_model() successfully completed......................................
2023-10-13 21:21:17,693:INFO:SubProcess create_model() end ==================================
2023-10-13 21:21:17,693:INFO:Creating metrics dataframe
2023-10-13 21:21:17,745:INFO:Initializing Naive Bayes
2023-10-13 21:21:17,745:INFO:Total runtime is 0.5558125138282776 minutes
2023-10-13 21:21:17,755:INFO:SubProcess create_model() called ==================================
2023-10-13 21:21:17,757:INFO:Initializing create_model()
2023-10-13 21:21:17,757:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D6276FABF0>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:21:17,758:INFO:Checking exceptions
2023-10-13 21:21:17,758:INFO:Importing libraries
2023-10-13 21:21:17,758:INFO:Copying training dataset
2023-10-13 21:21:17,785:INFO:Defining folds
2023-10-13 21:21:17,785:INFO:Declaring metric variables
2023-10-13 21:21:17,805:INFO:Importing untrained model
2023-10-13 21:21:17,827:INFO:Naive Bayes Imported successfully
2023-10-13 21:21:17,852:INFO:Starting cross validation
2023-10-13 21:21:17,879:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:21:23,221:INFO:Calculating mean and std
2023-10-13 21:21:23,226:INFO:Creating metrics dataframe
2023-10-13 21:21:23,237:INFO:Uploading results into container
2023-10-13 21:21:23,238:INFO:Uploading model into container now
2023-10-13 21:21:23,240:INFO:_master_model_container: 3
2023-10-13 21:21:23,241:INFO:_display_container: 2
2023-10-13 21:21:23,242:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-10-13 21:21:23,242:INFO:create_model() successfully completed......................................
2023-10-13 21:21:23,367:INFO:SubProcess create_model() end ==================================
2023-10-13 21:21:23,367:INFO:Creating metrics dataframe
2023-10-13 21:21:23,392:INFO:Initializing Decision Tree Classifier
2023-10-13 21:21:23,392:INFO:Total runtime is 0.6499338070551555 minutes
2023-10-13 21:21:23,401:INFO:SubProcess create_model() called ==================================
2023-10-13 21:21:23,401:INFO:Initializing create_model()
2023-10-13 21:21:23,402:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D6276FABF0>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:21:23,402:INFO:Checking exceptions
2023-10-13 21:21:23,402:INFO:Importing libraries
2023-10-13 21:21:23,402:INFO:Copying training dataset
2023-10-13 21:21:23,417:INFO:Defining folds
2023-10-13 21:21:23,418:INFO:Declaring metric variables
2023-10-13 21:21:23,429:INFO:Importing untrained model
2023-10-13 21:21:23,450:INFO:Decision Tree Classifier Imported successfully
2023-10-13 21:21:23,479:INFO:Starting cross validation
2023-10-13 21:21:23,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:21:28,782:INFO:Calculating mean and std
2023-10-13 21:21:28,785:INFO:Creating metrics dataframe
2023-10-13 21:21:28,802:INFO:Uploading results into container
2023-10-13 21:21:28,803:INFO:Uploading model into container now
2023-10-13 21:21:28,803:INFO:_master_model_container: 4
2023-10-13 21:21:28,804:INFO:_display_container: 2
2023-10-13 21:21:28,804:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=0, splitter='best')
2023-10-13 21:21:28,804:INFO:create_model() successfully completed......................................
2023-10-13 21:21:28,927:INFO:SubProcess create_model() end ==================================
2023-10-13 21:21:28,927:INFO:Creating metrics dataframe
2023-10-13 21:21:28,950:INFO:Initializing SVM - Linear Kernel
2023-10-13 21:21:28,951:INFO:Total runtime is 0.7425774931907654 minutes
2023-10-13 21:21:28,961:INFO:SubProcess create_model() called ==================================
2023-10-13 21:21:28,962:INFO:Initializing create_model()
2023-10-13 21:21:28,962:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D6276FABF0>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:21:28,962:INFO:Checking exceptions
2023-10-13 21:21:28,963:INFO:Importing libraries
2023-10-13 21:21:28,963:INFO:Copying training dataset
2023-10-13 21:21:28,987:INFO:Defining folds
2023-10-13 21:21:28,988:INFO:Declaring metric variables
2023-10-13 21:21:29,000:INFO:Importing untrained model
2023-10-13 21:21:29,016:INFO:SVM - Linear Kernel Imported successfully
2023-10-13 21:21:29,038:INFO:Starting cross validation
2023-10-13 21:21:29,049:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:21:31,864:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-13 21:21:31,865:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-13 21:21:31,867:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-13 21:21:31,897:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-13 21:21:34,148:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-13 21:21:34,351:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-13 21:21:34,629:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-13 21:21:34,641:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-13 21:21:36,502:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-13 21:21:36,654:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-13 21:21:36,688:INFO:Calculating mean and std
2023-10-13 21:21:36,693:INFO:Creating metrics dataframe
2023-10-13 21:21:36,713:INFO:Uploading results into container
2023-10-13 21:21:36,717:INFO:Uploading model into container now
2023-10-13 21:21:36,718:INFO:_master_model_container: 5
2023-10-13 21:21:36,718:INFO:_display_container: 2
2023-10-13 21:21:36,719:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=0, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-10-13 21:21:36,719:INFO:create_model() successfully completed......................................
2023-10-13 21:21:36,852:INFO:SubProcess create_model() end ==================================
2023-10-13 21:21:36,853:INFO:Creating metrics dataframe
2023-10-13 21:21:36,876:INFO:Initializing Ridge Classifier
2023-10-13 21:21:36,876:INFO:Total runtime is 0.8746643344561259 minutes
2023-10-13 21:21:36,890:INFO:SubProcess create_model() called ==================================
2023-10-13 21:21:36,891:INFO:Initializing create_model()
2023-10-13 21:21:36,891:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D6276FABF0>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:21:36,891:INFO:Checking exceptions
2023-10-13 21:21:36,892:INFO:Importing libraries
2023-10-13 21:21:36,892:INFO:Copying training dataset
2023-10-13 21:21:36,910:INFO:Defining folds
2023-10-13 21:21:36,910:INFO:Declaring metric variables
2023-10-13 21:21:36,924:INFO:Importing untrained model
2023-10-13 21:21:36,939:INFO:Ridge Classifier Imported successfully
2023-10-13 21:21:36,965:INFO:Starting cross validation
2023-10-13 21:21:36,976:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:21:38,831:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-13 21:21:38,899:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-13 21:21:38,906:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-13 21:21:38,923:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-13 21:21:40,446:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-13 21:21:40,623:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-13 21:21:40,655:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-13 21:21:40,663:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-13 21:21:41,784:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-13 21:21:41,832:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-13 21:21:41,852:INFO:Calculating mean and std
2023-10-13 21:21:41,854:INFO:Creating metrics dataframe
2023-10-13 21:21:41,862:INFO:Uploading results into container
2023-10-13 21:21:41,866:INFO:Uploading model into container now
2023-10-13 21:21:41,867:INFO:_master_model_container: 6
2023-10-13 21:21:41,867:INFO:_display_container: 2
2023-10-13 21:21:41,868:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=0, solver='auto',
                tol=0.0001)
2023-10-13 21:21:41,868:INFO:create_model() successfully completed......................................
2023-10-13 21:21:42,009:INFO:SubProcess create_model() end ==================================
2023-10-13 21:21:42,009:INFO:Creating metrics dataframe
2023-10-13 21:21:42,036:INFO:Initializing Random Forest Classifier
2023-10-13 21:21:42,036:INFO:Total runtime is 0.9606566309928894 minutes
2023-10-13 21:21:42,042:INFO:SubProcess create_model() called ==================================
2023-10-13 21:21:42,043:INFO:Initializing create_model()
2023-10-13 21:21:42,044:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D6276FABF0>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:21:42,045:INFO:Checking exceptions
2023-10-13 21:21:42,045:INFO:Importing libraries
2023-10-13 21:21:42,045:INFO:Copying training dataset
2023-10-13 21:21:42,061:INFO:Defining folds
2023-10-13 21:21:42,062:INFO:Declaring metric variables
2023-10-13 21:21:42,078:INFO:Importing untrained model
2023-10-13 21:21:42,093:INFO:Random Forest Classifier Imported successfully
2023-10-13 21:21:42,127:INFO:Starting cross validation
2023-10-13 21:21:42,141:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:21:58,577:INFO:Calculating mean and std
2023-10-13 21:21:58,583:INFO:Creating metrics dataframe
2023-10-13 21:21:58,592:INFO:Uploading results into container
2023-10-13 21:21:58,593:INFO:Uploading model into container now
2023-10-13 21:21:58,594:INFO:_master_model_container: 7
2023-10-13 21:21:58,594:INFO:_display_container: 2
2023-10-13 21:21:58,596:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=0, verbose=0, warm_start=False)
2023-10-13 21:21:58,597:INFO:create_model() successfully completed......................................
2023-10-13 21:21:58,718:INFO:SubProcess create_model() end ==================================
2023-10-13 21:21:58,718:INFO:Creating metrics dataframe
2023-10-13 21:21:58,744:INFO:Initializing Quadratic Discriminant Analysis
2023-10-13 21:21:58,744:INFO:Total runtime is 1.2391263842582703 minutes
2023-10-13 21:21:58,754:INFO:SubProcess create_model() called ==================================
2023-10-13 21:21:58,754:INFO:Initializing create_model()
2023-10-13 21:21:58,755:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D6276FABF0>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:21:58,755:INFO:Checking exceptions
2023-10-13 21:21:58,755:INFO:Importing libraries
2023-10-13 21:21:58,755:INFO:Copying training dataset
2023-10-13 21:21:58,774:INFO:Defining folds
2023-10-13 21:21:58,774:INFO:Declaring metric variables
2023-10-13 21:21:58,790:INFO:Importing untrained model
2023-10-13 21:21:58,806:INFO:Quadratic Discriminant Analysis Imported successfully
2023-10-13 21:21:58,829:INFO:Starting cross validation
2023-10-13 21:21:58,840:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:22:00,580:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-13 21:22:00,586:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-13 21:22:00,608:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-13 21:22:00,629:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-13 21:22:02,648:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-13 21:22:02,716:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-13 21:22:02,721:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-13 21:22:02,757:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-13 21:22:05,291:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-13 21:22:05,314:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-13 21:22:05,642:INFO:Calculating mean and std
2023-10-13 21:22:05,646:INFO:Creating metrics dataframe
2023-10-13 21:22:05,665:INFO:Uploading results into container
2023-10-13 21:22:05,668:INFO:Uploading model into container now
2023-10-13 21:22:05,669:INFO:_master_model_container: 8
2023-10-13 21:22:05,670:INFO:_display_container: 2
2023-10-13 21:22:05,671:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-10-13 21:22:05,672:INFO:create_model() successfully completed......................................
2023-10-13 21:22:05,857:INFO:SubProcess create_model() end ==================================
2023-10-13 21:22:05,857:INFO:Creating metrics dataframe
2023-10-13 21:22:05,913:INFO:Initializing Ada Boost Classifier
2023-10-13 21:22:05,913:INFO:Total runtime is 1.3586152950922648 minutes
2023-10-13 21:22:05,929:INFO:SubProcess create_model() called ==================================
2023-10-13 21:22:05,930:INFO:Initializing create_model()
2023-10-13 21:22:05,931:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D6276FABF0>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:22:05,931:INFO:Checking exceptions
2023-10-13 21:22:05,932:INFO:Importing libraries
2023-10-13 21:22:05,932:INFO:Copying training dataset
2023-10-13 21:22:05,956:INFO:Defining folds
2023-10-13 21:22:05,957:INFO:Declaring metric variables
2023-10-13 21:22:05,976:INFO:Importing untrained model
2023-10-13 21:22:05,989:INFO:Ada Boost Classifier Imported successfully
2023-10-13 21:22:06,023:INFO:Starting cross validation
2023-10-13 21:22:06,035:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:22:15,162:INFO:Calculating mean and std
2023-10-13 21:22:15,166:INFO:Creating metrics dataframe
2023-10-13 21:22:15,174:INFO:Uploading results into container
2023-10-13 21:22:15,175:INFO:Uploading model into container now
2023-10-13 21:22:15,176:INFO:_master_model_container: 9
2023-10-13 21:22:15,176:INFO:_display_container: 2
2023-10-13 21:22:15,178:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=0)
2023-10-13 21:22:15,178:INFO:create_model() successfully completed......................................
2023-10-13 21:22:15,312:INFO:SubProcess create_model() end ==================================
2023-10-13 21:22:15,312:INFO:Creating metrics dataframe
2023-10-13 21:22:15,341:INFO:Initializing Gradient Boosting Classifier
2023-10-13 21:22:15,341:INFO:Total runtime is 1.5157405177752177 minutes
2023-10-13 21:22:15,353:INFO:SubProcess create_model() called ==================================
2023-10-13 21:22:15,354:INFO:Initializing create_model()
2023-10-13 21:22:15,355:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D6276FABF0>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:22:15,355:INFO:Checking exceptions
2023-10-13 21:22:15,355:INFO:Importing libraries
2023-10-13 21:22:15,355:INFO:Copying training dataset
2023-10-13 21:22:15,374:INFO:Defining folds
2023-10-13 21:22:15,375:INFO:Declaring metric variables
2023-10-13 21:22:15,387:INFO:Importing untrained model
2023-10-13 21:22:15,403:INFO:Gradient Boosting Classifier Imported successfully
2023-10-13 21:22:15,424:INFO:Starting cross validation
2023-10-13 21:22:15,437:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:22:45,601:INFO:Calculating mean and std
2023-10-13 21:22:45,604:INFO:Creating metrics dataframe
2023-10-13 21:22:45,619:INFO:Uploading results into container
2023-10-13 21:22:45,621:INFO:Uploading model into container now
2023-10-13 21:22:45,622:INFO:_master_model_container: 10
2023-10-13 21:22:45,622:INFO:_display_container: 2
2023-10-13 21:22:45,623:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=0, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-10-13 21:22:45,627:INFO:create_model() successfully completed......................................
2023-10-13 21:22:45,782:INFO:SubProcess create_model() end ==================================
2023-10-13 21:22:45,782:INFO:Creating metrics dataframe
2023-10-13 21:22:45,814:INFO:Initializing Linear Discriminant Analysis
2023-10-13 21:22:45,814:INFO:Total runtime is 2.0236233552296956 minutes
2023-10-13 21:22:45,824:INFO:SubProcess create_model() called ==================================
2023-10-13 21:22:45,825:INFO:Initializing create_model()
2023-10-13 21:22:45,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D6276FABF0>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:22:45,829:INFO:Checking exceptions
2023-10-13 21:22:45,829:INFO:Importing libraries
2023-10-13 21:22:45,829:INFO:Copying training dataset
2023-10-13 21:22:45,872:INFO:Defining folds
2023-10-13 21:22:45,872:INFO:Declaring metric variables
2023-10-13 21:22:45,898:INFO:Importing untrained model
2023-10-13 21:22:45,914:INFO:Linear Discriminant Analysis Imported successfully
2023-10-13 21:22:45,937:INFO:Starting cross validation
2023-10-13 21:22:45,952:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:22:50,906:INFO:Calculating mean and std
2023-10-13 21:22:50,912:INFO:Creating metrics dataframe
2023-10-13 21:22:50,927:INFO:Uploading results into container
2023-10-13 21:22:50,929:INFO:Uploading model into container now
2023-10-13 21:22:50,930:INFO:_master_model_container: 11
2023-10-13 21:22:50,930:INFO:_display_container: 2
2023-10-13 21:22:50,931:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-10-13 21:22:50,932:INFO:create_model() successfully completed......................................
2023-10-13 21:22:51,061:INFO:SubProcess create_model() end ==================================
2023-10-13 21:22:51,061:INFO:Creating metrics dataframe
2023-10-13 21:22:51,090:INFO:Initializing Extra Trees Classifier
2023-10-13 21:22:51,090:INFO:Total runtime is 2.1115667780240375 minutes
2023-10-13 21:22:51,101:INFO:SubProcess create_model() called ==================================
2023-10-13 21:22:51,102:INFO:Initializing create_model()
2023-10-13 21:22:51,102:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D6276FABF0>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:22:51,102:INFO:Checking exceptions
2023-10-13 21:22:51,102:INFO:Importing libraries
2023-10-13 21:22:51,102:INFO:Copying training dataset
2023-10-13 21:22:51,133:INFO:Defining folds
2023-10-13 21:22:51,134:INFO:Declaring metric variables
2023-10-13 21:22:51,152:INFO:Importing untrained model
2023-10-13 21:22:51,182:INFO:Extra Trees Classifier Imported successfully
2023-10-13 21:22:51,218:INFO:Starting cross validation
2023-10-13 21:22:51,230:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:23:08,539:INFO:Calculating mean and std
2023-10-13 21:23:08,544:INFO:Creating metrics dataframe
2023-10-13 21:23:08,568:INFO:Uploading results into container
2023-10-13 21:23:08,569:INFO:Uploading model into container now
2023-10-13 21:23:08,570:INFO:_master_model_container: 12
2023-10-13 21:23:08,570:INFO:_display_container: 2
2023-10-13 21:23:08,571:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=0, verbose=0, warm_start=False)
2023-10-13 21:23:08,571:INFO:create_model() successfully completed......................................
2023-10-13 21:23:08,689:INFO:SubProcess create_model() end ==================================
2023-10-13 21:23:08,690:INFO:Creating metrics dataframe
2023-10-13 21:23:08,716:INFO:Initializing Light Gradient Boosting Machine
2023-10-13 21:23:08,716:INFO:Total runtime is 2.405335481961568 minutes
2023-10-13 21:23:08,724:INFO:SubProcess create_model() called ==================================
2023-10-13 21:23:08,726:INFO:Initializing create_model()
2023-10-13 21:23:08,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D6276FABF0>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:23:08,726:INFO:Checking exceptions
2023-10-13 21:23:08,727:INFO:Importing libraries
2023-10-13 21:23:08,727:INFO:Copying training dataset
2023-10-13 21:23:08,744:INFO:Defining folds
2023-10-13 21:23:08,747:INFO:Declaring metric variables
2023-10-13 21:23:08,765:INFO:Importing untrained model
2023-10-13 21:23:08,777:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-13 21:23:08,800:INFO:Starting cross validation
2023-10-13 21:23:08,808:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:23:26,537:INFO:Calculating mean and std
2023-10-13 21:23:26,544:INFO:Creating metrics dataframe
2023-10-13 21:23:26,564:INFO:Uploading results into container
2023-10-13 21:23:26,566:INFO:Uploading model into container now
2023-10-13 21:23:26,569:INFO:_master_model_container: 13
2023-10-13 21:23:26,569:INFO:_display_container: 2
2023-10-13 21:23:26,572:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-10-13 21:23:26,572:INFO:create_model() successfully completed......................................
2023-10-13 21:23:26,760:INFO:SubProcess create_model() end ==================================
2023-10-13 21:23:26,760:INFO:Creating metrics dataframe
2023-10-13 21:23:26,797:INFO:Initializing Dummy Classifier
2023-10-13 21:23:26,798:INFO:Total runtime is 2.7067007501920064 minutes
2023-10-13 21:23:26,812:INFO:SubProcess create_model() called ==================================
2023-10-13 21:23:26,813:INFO:Initializing create_model()
2023-10-13 21:23:26,814:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D6276FABF0>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:23:26,814:INFO:Checking exceptions
2023-10-13 21:23:26,814:INFO:Importing libraries
2023-10-13 21:23:26,815:INFO:Copying training dataset
2023-10-13 21:23:26,843:INFO:Defining folds
2023-10-13 21:23:26,844:INFO:Declaring metric variables
2023-10-13 21:23:26,864:INFO:Importing untrained model
2023-10-13 21:23:26,878:INFO:Dummy Classifier Imported successfully
2023-10-13 21:23:26,904:INFO:Starting cross validation
2023-10-13 21:23:26,916:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:23:29,117:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-13 21:23:29,120:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-13 21:23:29,168:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-13 21:23:29,150:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-13 21:23:30,761:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-13 21:23:30,872:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-13 21:23:30,875:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-13 21:23:30,955:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-13 21:23:32,046:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-13 21:23:32,098:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-13 21:23:32,110:INFO:Calculating mean and std
2023-10-13 21:23:32,112:INFO:Creating metrics dataframe
2023-10-13 21:23:32,128:INFO:Uploading results into container
2023-10-13 21:23:32,129:INFO:Uploading model into container now
2023-10-13 21:23:32,130:INFO:_master_model_container: 14
2023-10-13 21:23:32,130:INFO:_display_container: 2
2023-10-13 21:23:32,130:INFO:DummyClassifier(constant=None, random_state=0, strategy='prior')
2023-10-13 21:23:32,130:INFO:create_model() successfully completed......................................
2023-10-13 21:23:32,258:INFO:SubProcess create_model() end ==================================
2023-10-13 21:23:32,258:INFO:Creating metrics dataframe
2023-10-13 21:23:32,315:INFO:Initializing create_model()
2023-10-13 21:23:32,315:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=0, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:23:32,316:INFO:Checking exceptions
2023-10-13 21:23:32,332:INFO:Importing libraries
2023-10-13 21:23:32,332:INFO:Copying training dataset
2023-10-13 21:23:32,360:INFO:Defining folds
2023-10-13 21:23:32,360:INFO:Declaring metric variables
2023-10-13 21:23:32,360:INFO:Importing untrained model
2023-10-13 21:23:32,361:INFO:Declaring custom model
2023-10-13 21:23:32,363:INFO:Gradient Boosting Classifier Imported successfully
2023-10-13 21:23:32,378:INFO:Cross validation set to False
2023-10-13 21:23:32,379:INFO:Fitting Model
2023-10-13 21:23:39,502:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=0, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-10-13 21:23:39,502:INFO:create_model() successfully completed......................................
2023-10-13 21:23:39,745:INFO:Initializing create_model()
2023-10-13 21:23:39,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:23:39,745:INFO:Checking exceptions
2023-10-13 21:23:39,754:INFO:Importing libraries
2023-10-13 21:23:39,754:INFO:Copying training dataset
2023-10-13 21:23:39,796:INFO:Defining folds
2023-10-13 21:23:39,796:INFO:Declaring metric variables
2023-10-13 21:23:39,797:INFO:Importing untrained model
2023-10-13 21:23:39,797:INFO:Declaring custom model
2023-10-13 21:23:39,798:INFO:Ada Boost Classifier Imported successfully
2023-10-13 21:23:39,803:INFO:Cross validation set to False
2023-10-13 21:23:39,804:INFO:Fitting Model
2023-10-13 21:23:41,085:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=0)
2023-10-13 21:23:41,086:INFO:create_model() successfully completed......................................
2023-10-13 21:23:41,346:INFO:Initializing create_model()
2023-10-13 21:23:41,349:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:23:41,349:INFO:Checking exceptions
2023-10-13 21:23:41,356:INFO:Importing libraries
2023-10-13 21:23:41,356:INFO:Copying training dataset
2023-10-13 21:23:41,372:INFO:Defining folds
2023-10-13 21:23:41,373:INFO:Declaring metric variables
2023-10-13 21:23:41,373:INFO:Importing untrained model
2023-10-13 21:23:41,374:INFO:Declaring custom model
2023-10-13 21:23:41,376:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-13 21:23:41,384:INFO:Cross validation set to False
2023-10-13 21:23:41,384:INFO:Fitting Model
2023-10-13 21:23:41,959:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000777 seconds.
2023-10-13 21:23:41,960:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-10-13 21:23:41,960:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-10-13 21:23:41,961:INFO:[LightGBM] [Info] Total Bins 142
2023-10-13 21:23:41,961:INFO:[LightGBM] [Info] Number of data points in the train set: 5082, number of used features: 19
2023-10-13 21:23:41,963:INFO:[LightGBM] [Info] Start training from score -1.409787
2023-10-13 21:23:41,963:INFO:[LightGBM] [Info] Start training from score -1.479874
2023-10-13 21:23:41,964:INFO:[LightGBM] [Info] Start training from score -1.401762
2023-10-13 21:23:41,964:INFO:[LightGBM] [Info] Start training from score -1.265935
2023-10-13 21:23:43,483:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-10-13 21:23:43,483:INFO:create_model() successfully completed......................................
2023-10-13 21:23:43,827:INFO:_master_model_container: 14
2023-10-13 21:23:43,828:INFO:_display_container: 2
2023-10-13 21:23:43,830:INFO:[GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=0, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=0), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)]
2023-10-13 21:23:43,831:INFO:compare_models() successfully completed......................................
2023-10-13 21:23:44,012:INFO:Initializing create_model()
2023-10-13 21:23:44,012:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:23:44,013:INFO:Checking exceptions
2023-10-13 21:23:44,059:INFO:Importing libraries
2023-10-13 21:23:44,060:INFO:Copying training dataset
2023-10-13 21:23:44,093:INFO:Defining folds
2023-10-13 21:23:44,093:INFO:Declaring metric variables
2023-10-13 21:23:44,108:INFO:Importing untrained model
2023-10-13 21:23:44,123:INFO:Logistic Regression Imported successfully
2023-10-13 21:23:44,156:INFO:Starting cross validation
2023-10-13 21:23:44,164:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:23:51,376:INFO:Calculating mean and std
2023-10-13 21:23:51,382:INFO:Creating metrics dataframe
2023-10-13 21:23:51,406:INFO:Finalizing model
2023-10-13 21:23:52,289:INFO:Uploading results into container
2023-10-13 21:23:52,292:INFO:Uploading model into container now
2023-10-13 21:23:52,340:INFO:_master_model_container: 15
2023-10-13 21:23:52,340:INFO:_display_container: 3
2023-10-13 21:23:52,342:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-10-13 21:23:52,343:INFO:create_model() successfully completed......................................
2023-10-13 21:23:52,952:INFO:Initializing tune_model()
2023-10-13 21:23:52,952:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=10, round=4, n_iter=10, custom_grid=None, optimize=Precision, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>)
2023-10-13 21:23:52,952:INFO:Checking exceptions
2023-10-13 21:23:53,005:INFO:Copying training dataset
2023-10-13 21:23:53,022:INFO:Checking base model
2023-10-13 21:23:53,022:INFO:Base model : Logistic Regression
2023-10-13 21:23:53,032:INFO:Declaring metric variables
2023-10-13 21:23:53,042:INFO:Defining Hyperparameters
2023-10-13 21:23:53,236:INFO:Tuning with n_jobs=-1
2023-10-13 21:23:53,236:INFO:Initializing RandomizedSearchCV
2023-10-13 21:23:55,822:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:23:55,994:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:23:56,035:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:23:56,048:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:23:58,089:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:23:58,154:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:23:58,188:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:23:58,230:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:00,383:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:00,465:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:00,480:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:00,657:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:01,991:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:02,117:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:02,117:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:02,242:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:04,072:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:04,119:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:04,230:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:04,311:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:06,044:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:06,059:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:06,161:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:06,265:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:07,750:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:07,799:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:07,925:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:07,975:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:10,101:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:10,101:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:10,368:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:10,497:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:12,819:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:12,842:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:13,024:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:13,302:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:16,193:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:16,267:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:16,530:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:17,159:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:19,520:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:19,587:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:19,703:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:20,242:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:22,180:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:22,212:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:22,318:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:22,413:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:24,541:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:24,625:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:24,707:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:25,048:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:27,347:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:27,736:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:27,866:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:27,995:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:29,568:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:29,768:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:29,926:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:29,971:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:31,369:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:31,630:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:31,723:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:31,731:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:33,715:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:34,030:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:34,080:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:34,245:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:36,641:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:36,854:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:36,904:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:36,956:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:39,164:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:39,599:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:39,729:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:40,083:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:41,792:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:42,062:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:42,172:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:42,409:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:43,582:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:44,006:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:44,023:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:44,218:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:46,140:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:46,453:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:46,584:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:46,785:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:48,112:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:48,432:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:48,712:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:48,996:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:50,287:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:50,468:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:50,568:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:51,009:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:52,361:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:52,511:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:52,606:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:52,853:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-13 21:24:52,861:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 9.825}
2023-10-13 21:24:52,862:INFO:Hyperparameter search completed
2023-10-13 21:24:52,863:INFO:SubProcess create_model() called ==================================
2023-10-13 21:24:52,864:INFO:Initializing create_model()
2023-10-13 21:24:52,864:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D62538FF70>, model_only=True, return_train_score=False, kwargs={'class_weight': 'balanced', 'C': 9.825})
2023-10-13 21:24:52,865:INFO:Checking exceptions
2023-10-13 21:24:52,866:INFO:Importing libraries
2023-10-13 21:24:52,867:INFO:Copying training dataset
2023-10-13 21:24:52,890:INFO:Defining folds
2023-10-13 21:24:52,891:INFO:Declaring metric variables
2023-10-13 21:24:52,904:INFO:Importing untrained model
2023-10-13 21:24:52,904:INFO:Declaring custom model
2023-10-13 21:24:52,918:INFO:Logistic Regression Imported successfully
2023-10-13 21:24:52,955:INFO:Starting cross validation
2023-10-13 21:24:52,967:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:24:58,186:INFO:Calculating mean and std
2023-10-13 21:24:58,189:INFO:Creating metrics dataframe
2023-10-13 21:24:58,217:INFO:Finalizing model
2023-10-13 21:24:59,215:INFO:Uploading results into container
2023-10-13 21:24:59,219:INFO:Uploading model into container now
2023-10-13 21:24:59,221:INFO:_master_model_container: 16
2023-10-13 21:24:59,223:INFO:_display_container: 4
2023-10-13 21:24:59,225:INFO:LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-10-13 21:24:59,226:INFO:create_model() successfully completed......................................
2023-10-13 21:24:59,438:INFO:SubProcess create_model() end ==================================
2023-10-13 21:24:59,438:INFO:choose_better activated
2023-10-13 21:24:59,446:INFO:SubProcess create_model() called ==================================
2023-10-13 21:24:59,449:INFO:Initializing create_model()
2023-10-13 21:24:59,449:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:24:59,450:INFO:Checking exceptions
2023-10-13 21:24:59,454:INFO:Importing libraries
2023-10-13 21:24:59,454:INFO:Copying training dataset
2023-10-13 21:24:59,482:INFO:Defining folds
2023-10-13 21:24:59,482:INFO:Declaring metric variables
2023-10-13 21:24:59,483:INFO:Importing untrained model
2023-10-13 21:24:59,484:INFO:Declaring custom model
2023-10-13 21:24:59,489:INFO:Logistic Regression Imported successfully
2023-10-13 21:24:59,491:INFO:Starting cross validation
2023-10-13 21:24:59,506:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:25:04,623:INFO:Calculating mean and std
2023-10-13 21:25:04,624:INFO:Creating metrics dataframe
2023-10-13 21:25:04,628:INFO:Finalizing model
2023-10-13 21:25:05,475:INFO:Uploading results into container
2023-10-13 21:25:05,476:INFO:Uploading model into container now
2023-10-13 21:25:05,477:INFO:_master_model_container: 17
2023-10-13 21:25:05,477:INFO:_display_container: 5
2023-10-13 21:25:05,478:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-10-13 21:25:05,478:INFO:create_model() successfully completed......................................
2023-10-13 21:25:05,603:INFO:SubProcess create_model() end ==================================
2023-10-13 21:25:05,606:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Prec. is 0.489
2023-10-13 21:25:05,607:INFO:LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Prec. is 0.4959
2023-10-13 21:25:05,608:INFO:LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-10-13 21:25:05,609:INFO:choose_better completed
2023-10-13 21:25:05,656:INFO:_master_model_container: 17
2023-10-13 21:25:05,656:INFO:_display_container: 4
2023-10-13 21:25:05,658:INFO:LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-10-13 21:25:05,658:INFO:tune_model() successfully completed......................................
2023-10-13 21:25:06,559:INFO:Initializing ensemble_model()
2023-10-13 21:25:06,560:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-10-13 21:25:06,560:INFO:Checking exceptions
2023-10-13 21:25:06,614:INFO:Importing libraries
2023-10-13 21:25:06,614:INFO:Copying training dataset
2023-10-13 21:25:06,615:INFO:Checking base model
2023-10-13 21:25:06,615:INFO:Base model : Logistic Regression
2023-10-13 21:25:06,639:INFO:Importing untrained ensembler
2023-10-13 21:25:06,639:INFO:Ensemble method set to Bagging
2023-10-13 21:25:06,640:INFO:SubProcess create_model() called ==================================
2023-10-13 21:25:06,645:INFO:Initializing create_model()
2023-10-13 21:25:06,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=BaggingClassifier(base_estimator='deprecated', bootstrap=True,
                  bootstrap_features=False,
                  estimator=LogisticRegression(C=9.825, class_weight='balanced',
                                               dual=False, fit_intercept=True,
                                               intercept_scaling=1,
                                               l1_ratio=None, max_iter=1000,
                                               multi_class='auto', n_jobs=None,
                                               penalty='l2', random_state=0,
                                               solver='lbfgs', tol=0.0001,
                                               verbose=0, warm_start=False),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D6273A9510>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:25:06,646:INFO:Checking exceptions
2023-10-13 21:25:06,647:INFO:Importing libraries
2023-10-13 21:25:06,648:INFO:Copying training dataset
2023-10-13 21:25:06,676:INFO:Defining folds
2023-10-13 21:25:06,676:INFO:Declaring metric variables
2023-10-13 21:25:06,684:INFO:Importing untrained model
2023-10-13 21:25:06,685:INFO:Declaring custom model
2023-10-13 21:25:06,698:INFO:Bagging Classifier Imported successfully
2023-10-13 21:25:06,722:INFO:Starting cross validation
2023-10-13 21:25:06,733:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:25:16,427:INFO:Calculating mean and std
2023-10-13 21:25:16,431:INFO:Creating metrics dataframe
2023-10-13 21:25:16,461:INFO:Finalizing model
2023-10-13 21:25:19,326:INFO:Uploading results into container
2023-10-13 21:25:19,332:INFO:Uploading model into container now
2023-10-13 21:25:19,335:INFO:_master_model_container: 18
2023-10-13 21:25:19,336:INFO:_display_container: 5
2023-10-13 21:25:19,344:INFO:BaggingClassifier(base_estimator='deprecated', bootstrap=True,
                  bootstrap_features=False,
                  estimator=LogisticRegression(C=9.825, class_weight='balanced',
                                               dual=False, fit_intercept=True,
                                               intercept_scaling=1,
                                               l1_ratio=None, max_iter=1000,
                                               multi_class='auto', n_jobs=None,
                                               penalty='l2', random_state=0,
                                               solver='lbfgs', tol=0.0001,
                                               verbose=0, warm_start=False),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)
2023-10-13 21:25:19,345:INFO:create_model() successfully completed......................................
2023-10-13 21:25:19,679:INFO:SubProcess create_model() end ==================================
2023-10-13 21:25:19,752:INFO:_master_model_container: 18
2023-10-13 21:25:19,752:INFO:_display_container: 5
2023-10-13 21:25:19,757:INFO:BaggingClassifier(base_estimator='deprecated', bootstrap=True,
                  bootstrap_features=False,
                  estimator=LogisticRegression(C=9.825, class_weight='balanced',
                                               dual=False, fit_intercept=True,
                                               intercept_scaling=1,
                                               l1_ratio=None, max_iter=1000,
                                               multi_class='auto', n_jobs=None,
                                               penalty='l2', random_state=0,
                                               solver='lbfgs', tol=0.0001,
                                               verbose=0, warm_start=False),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)
2023-10-13 21:25:19,757:INFO:ensemble_model() successfully completed......................................
2023-10-13 21:25:20,803:INFO:Initializing ensemble_model()
2023-10-13 21:25:20,804:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=Boosting, fold=None, n_estimators=10, round=4, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-10-13 21:25:20,804:INFO:Checking exceptions
2023-10-13 21:25:22,050:INFO:Importing libraries
2023-10-13 21:25:22,052:INFO:Copying training dataset
2023-10-13 21:25:22,053:INFO:Checking base model
2023-10-13 21:25:22,054:INFO:Base model : Logistic Regression
2023-10-13 21:25:22,106:INFO:Importing untrained ensembler
2023-10-13 21:25:22,107:INFO:Ensemble method set to Boosting
2023-10-13 21:25:22,108:INFO:SubProcess create_model() called ==================================
2023-10-13 21:25:22,114:INFO:Initializing create_model()
2023-10-13 21:25:22,114:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=LogisticRegression(C=9.825,
                                                class_weight='balanced',
                                                dual=False, fit_intercept=True,
                                                intercept_scaling=1,
                                                l1_ratio=None, max_iter=1000,
                                                multi_class='auto', n_jobs=None,
                                                penalty='l2', random_state=0,
                                                solver='lbfgs', tol=0.0001,
                                                verbose=0, warm_start=False),
                   learning_rate=1.0, n_estimators=10, random_state=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D62774FBE0>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:25:22,115:INFO:Checking exceptions
2023-10-13 21:25:22,115:INFO:Importing libraries
2023-10-13 21:25:22,115:INFO:Copying training dataset
2023-10-13 21:25:22,149:INFO:Defining folds
2023-10-13 21:25:22,149:INFO:Declaring metric variables
2023-10-13 21:25:22,172:INFO:Importing untrained model
2023-10-13 21:25:22,173:INFO:Declaring custom model
2023-10-13 21:25:22,193:INFO:Ada Boost Classifier Imported successfully
2023-10-13 21:25:22,234:INFO:Starting cross validation
2023-10-13 21:25:22,247:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:25:29,655:INFO:Calculating mean and std
2023-10-13 21:25:29,658:INFO:Creating metrics dataframe
2023-10-13 21:25:29,674:INFO:Finalizing model
2023-10-13 21:25:30,676:INFO:Uploading results into container
2023-10-13 21:25:30,679:INFO:Uploading model into container now
2023-10-13 21:25:30,681:INFO:_master_model_container: 19
2023-10-13 21:25:30,681:INFO:_display_container: 6
2023-10-13 21:25:30,687:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=LogisticRegression(C=9.825,
                                                class_weight='balanced',
                                                dual=False, fit_intercept=True,
                                                intercept_scaling=1,
                                                l1_ratio=None, max_iter=1000,
                                                multi_class='auto', n_jobs=None,
                                                penalty='l2', random_state=0,
                                                solver='lbfgs', tol=0.0001,
                                                verbose=0, warm_start=False),
                   learning_rate=1.0, n_estimators=10, random_state=0)
2023-10-13 21:25:30,687:INFO:create_model() successfully completed......................................
2023-10-13 21:25:30,874:INFO:SubProcess create_model() end ==================================
2023-10-13 21:25:30,901:INFO:_master_model_container: 19
2023-10-13 21:25:30,902:INFO:_display_container: 6
2023-10-13 21:25:30,908:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=LogisticRegression(C=9.825,
                                                class_weight='balanced',
                                                dual=False, fit_intercept=True,
                                                intercept_scaling=1,
                                                l1_ratio=None, max_iter=1000,
                                                multi_class='auto', n_jobs=None,
                                                penalty='l2', random_state=0,
                                                solver='lbfgs', tol=0.0001,
                                                verbose=0, warm_start=False),
                   learning_rate=1.0, n_estimators=10, random_state=0)
2023-10-13 21:25:30,908:INFO:ensemble_model() successfully completed......................................
2023-10-13 21:25:31,358:INFO:Initializing blend_models()
2023-10-13 21:25:31,358:INFO:blend_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator_list=[LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)], fold=None, round=4, choose_better=False, optimize=Accuracy, method=soft, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-10-13 21:25:31,359:INFO:Checking exceptions
2023-10-13 21:25:31,424:INFO:Importing libraries
2023-10-13 21:25:31,424:INFO:Copying training dataset
2023-10-13 21:25:31,437:INFO:Getting model names
2023-10-13 21:25:31,450:INFO:SubProcess create_model() called ==================================
2023-10-13 21:25:31,455:INFO:Initializing create_model()
2023-10-13 21:25:31,456:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=9.825,
                                                 class_weight='balanced',
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=0, solver='lbfgs',
                                                 tol=0.0001, verbose=0,
                                                 warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D6276C8D90>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:25:31,457:INFO:Checking exceptions
2023-10-13 21:25:31,457:INFO:Importing libraries
2023-10-13 21:25:31,458:INFO:Copying training dataset
2023-10-13 21:25:31,479:INFO:Defining folds
2023-10-13 21:25:31,479:INFO:Declaring metric variables
2023-10-13 21:25:31,494:INFO:Importing untrained model
2023-10-13 21:25:31,494:INFO:Declaring custom model
2023-10-13 21:25:31,513:INFO:Voting Classifier Imported successfully
2023-10-13 21:25:31,538:INFO:Starting cross validation
2023-10-13 21:25:31,548:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:25:37,415:INFO:Calculating mean and std
2023-10-13 21:25:37,419:INFO:Creating metrics dataframe
2023-10-13 21:25:37,437:INFO:Finalizing model
2023-10-13 21:25:38,163:INFO:Uploading results into container
2023-10-13 21:25:38,165:INFO:Uploading model into container now
2023-10-13 21:25:38,167:INFO:_master_model_container: 20
2023-10-13 21:25:38,167:INFO:_display_container: 7
2023-10-13 21:25:38,177:INFO:VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=9.825,
                                                 class_weight='balanced',
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=0, solver='lbfgs',
                                                 tol=0.0001, verbose=0,
                                                 warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2023-10-13 21:25:38,177:INFO:create_model() successfully completed......................................
2023-10-13 21:25:38,481:INFO:SubProcess create_model() end ==================================
2023-10-13 21:25:38,514:INFO:_master_model_container: 20
2023-10-13 21:25:38,515:INFO:_display_container: 7
2023-10-13 21:25:38,527:INFO:VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=9.825,
                                                 class_weight='balanced',
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=0, solver='lbfgs',
                                                 tol=0.0001, verbose=0,
                                                 warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2023-10-13 21:25:38,527:INFO:blend_models() successfully completed......................................
2023-10-13 21:25:39,329:INFO:Initializing stack_models()
2023-10-13 21:25:39,330:INFO:stack_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator_list=[LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=True, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-10-13 21:25:39,330:INFO:Checking exceptions
2023-10-13 21:25:39,338:INFO:Defining meta model
2023-10-13 21:25:39,396:INFO:Getting model names
2023-10-13 21:25:39,397:INFO:[('Logistic Regression', LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False))]
2023-10-13 21:25:39,409:INFO:SubProcess create_model() called ==================================
2023-10-13 21:25:39,415:INFO:Initializing create_model()
2023-10-13 21:25:39,415:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002D6273A9360>, model_only=True, return_train_score=False, kwargs={})
2023-10-13 21:25:39,416:INFO:Checking exceptions
2023-10-13 21:25:39,417:INFO:Importing libraries
2023-10-13 21:25:39,417:INFO:Copying training dataset
2023-10-13 21:25:39,437:INFO:Defining folds
2023-10-13 21:25:39,437:INFO:Declaring metric variables
2023-10-13 21:25:39,446:INFO:Importing untrained model
2023-10-13 21:25:39,446:INFO:Declaring custom model
2023-10-13 21:25:39,459:INFO:Stacking Classifier Imported successfully
2023-10-13 21:25:39,491:INFO:Starting cross validation
2023-10-13 21:25:39,502:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-13 21:25:49,084:INFO:Calculating mean and std
2023-10-13 21:25:49,086:INFO:Creating metrics dataframe
2023-10-13 21:25:49,111:INFO:Finalizing model
2023-10-13 21:25:50,500:INFO:Uploading results into container
2023-10-13 21:25:50,503:INFO:Uploading model into container now
2023-10-13 21:25:50,504:INFO:_master_model_container: 21
2023-10-13 21:25:50,505:INFO:_display_container: 8
2023-10-13 21:25:50,520:INFO:StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-10-13 21:25:50,521:INFO:create_model() successfully completed......................................
2023-10-13 21:25:50,726:INFO:SubProcess create_model() end ==================================
2023-10-13 21:25:50,755:INFO:_master_model_container: 21
2023-10-13 21:25:50,755:INFO:_display_container: 8
2023-10-13 21:25:50,767:INFO:StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-10-13 21:25:50,767:INFO:stack_models() successfully completed......................................
2023-10-13 21:25:51,617:INFO:Initializing plot_model()
2023-10-13 21:25:51,617:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, system=True)
2023-10-13 21:25:51,618:INFO:Checking exceptions
2023-10-13 21:25:51,633:INFO:Preloading libraries
2023-10-13 21:25:51,635:INFO:Copying training dataset
2023-10-13 21:25:51,636:INFO:Plot type: auc
2023-10-13 21:25:51,952:INFO:Fitting Model
2023-10-13 21:25:51,953:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\base.py:409: UserWarning:

X does not have valid feature names, but LogisticRegression was fitted with feature names


2023-10-13 21:25:51,954:INFO:Scoring test/hold-out set
2023-10-13 21:25:53,347:INFO:Visual Rendered Successfully
2023-10-13 21:25:53,477:INFO:plot_model() successfully completed......................................
2023-10-13 21:25:53,722:INFO:Initializing plot_model()
2023-10-13 21:25:53,722:INFO:plot_model(plot=pr, fold=None, verbose=True, display=None, display_format=None, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, system=True)
2023-10-13 21:25:53,723:INFO:Checking exceptions
2023-10-13 21:25:53,737:INFO:Preloading libraries
2023-10-13 21:25:53,740:INFO:Copying training dataset
2023-10-13 21:25:53,740:INFO:Plot type: pr
2023-10-13 21:25:54,158:INFO:Fitting Model
2023-10-13 21:25:55,115:INFO:Scoring test/hold-out set
2023-10-13 21:25:55,887:INFO:Visual Rendered Successfully
2023-10-13 21:25:56,055:INFO:plot_model() successfully completed......................................
2023-10-13 21:25:56,212:INFO:Initializing plot_model()
2023-10-13 21:25:56,213:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, system=True)
2023-10-13 21:25:56,213:INFO:Checking exceptions
2023-10-13 21:25:56,232:INFO:Preloading libraries
2023-10-13 21:25:56,234:INFO:Copying training dataset
2023-10-13 21:25:56,234:INFO:Plot type: auc
2023-10-13 21:25:56,574:INFO:Fitting Model
2023-10-13 21:25:56,575:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\base.py:409: UserWarning:

X does not have valid feature names, but LogisticRegression was fitted with feature names


2023-10-13 21:25:56,577:INFO:Scoring test/hold-out set
2023-10-13 21:25:57,354:INFO:Visual Rendered Successfully
2023-10-13 21:25:57,506:INFO:plot_model() successfully completed......................................
2023-10-13 21:25:57,643:INFO:Initializing plot_model()
2023-10-13 21:25:57,643:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, system=True)
2023-10-13 21:25:57,644:INFO:Checking exceptions
2023-10-13 21:25:57,659:INFO:Preloading libraries
2023-10-13 21:25:57,661:INFO:Copying training dataset
2023-10-13 21:25:57,661:INFO:Plot type: confusion_matrix
2023-10-13 21:25:58,103:INFO:Fitting Model
2023-10-13 21:25:58,104:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\base.py:409: UserWarning:

X does not have valid feature names, but LogisticRegression was fitted with feature names


2023-10-13 21:25:58,105:INFO:Scoring test/hold-out set
2023-10-13 21:25:58,593:INFO:Visual Rendered Successfully
2023-10-13 21:25:58,733:INFO:plot_model() successfully completed......................................
2023-10-13 21:25:58,947:INFO:Initializing plot_model()
2023-10-13 21:25:58,948:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, system=True)
2023-10-13 21:25:58,948:INFO:Checking exceptions
2023-10-13 21:25:58,967:INFO:Preloading libraries
2023-10-13 21:25:58,972:INFO:Copying training dataset
2023-10-13 21:25:58,973:INFO:Plot type: learning
2023-10-13 21:25:59,897:INFO:Fitting Model
2023-10-13 21:26:16,384:INFO:Visual Rendered Successfully
2023-10-13 21:26:16,606:INFO:plot_model() successfully completed......................................
2023-10-13 21:26:16,888:INFO:Initializing plot_model()
2023-10-13 21:26:16,889:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, system=True)
2023-10-13 21:26:16,889:INFO:Checking exceptions
2023-10-13 21:26:16,904:INFO:Preloading libraries
2023-10-13 21:26:16,905:INFO:Copying training dataset
2023-10-13 21:26:16,905:INFO:Plot type: feature
2023-10-13 21:26:17,573:INFO:Visual Rendered Successfully
2023-10-13 21:26:17,865:INFO:plot_model() successfully completed......................................
2023-10-13 21:26:18,868:INFO:Initializing evaluate_model()
2023-10-13 21:26:18,869:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), fold=10, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-10-13 21:26:18,959:INFO:Initializing plot_model()
2023-10-13 21:26:18,959:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, system=True)
2023-10-13 21:26:18,960:INFO:Checking exceptions
2023-10-13 21:26:18,971:INFO:Preloading libraries
2023-10-13 21:26:18,973:INFO:Copying training dataset
2023-10-13 21:26:18,973:INFO:Plot type: pipeline
2023-10-13 21:26:20,392:INFO:Visual Rendered Successfully
2023-10-13 21:26:20,536:INFO:plot_model() successfully completed......................................
2023-10-13 21:26:21,040:INFO:Initializing finalize_model()
2023-10-13 21:26:21,040:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-10-13 21:26:21,050:INFO:Finalizing StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-10-13 21:26:21,077:INFO:Initializing create_model()
2023-10-13 21:26:21,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-10-13 21:26:21,078:INFO:Checking exceptions
2023-10-13 21:26:21,085:INFO:Importing libraries
2023-10-13 21:26:21,086:INFO:Copying training dataset
2023-10-13 21:26:21,088:INFO:Defining folds
2023-10-13 21:26:21,088:INFO:Declaring metric variables
2023-10-13 21:26:21,089:INFO:Importing untrained model
2023-10-13 21:26:21,090:INFO:Declaring custom model
2023-10-13 21:26:21,097:INFO:Stacking Classifier Imported successfully
2023-10-13 21:26:21,114:INFO:Cross validation set to False
2023-10-13 21:26:21,114:INFO:Fitting Model
2023-10-13 21:26:24,008:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbdt',
                                                                                              class_weight=None,
                                                                                              colsample_bytree=1....
                                                                    verbose=0,
                                                                    warm_start=False))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=0,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=True,
                                    stack_method='auto', verbose=0))],
         verbose=False)
2023-10-13 21:26:24,008:INFO:create_model() successfully completed......................................
2023-10-13 21:26:24,132:INFO:_master_model_container: 21
2023-10-13 21:26:24,132:INFO:_display_container: 8
2023-10-13 21:26:24,274:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbdt',
                                                                                              class_weight=None,
                                                                                              colsample_bytree=1....
                                                                    verbose=0,
                                                                    warm_start=False))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=0,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=True,
                                    stack_method='auto', verbose=0))],
         verbose=False)
2023-10-13 21:26:24,274:INFO:finalize_model() successfully completed......................................
2023-10-13 21:26:24,569:INFO:Initializing predict_model()
2023-10-13 21:26:24,570:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002D62804F7F0>)
2023-10-13 21:26:24,570:INFO:Checking exceptions
2023-10-13 21:26:24,570:INFO:Preloading libraries
2023-10-13 21:26:24,578:INFO:Set up data.
2023-10-13 21:26:24,602:INFO:Set up index.
2023-10-13 21:26:25,137:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning:

Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.


2023-10-13 21:26:25,147:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning:

Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.


2023-10-13 21:26:25,157:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning:

Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.


2023-10-13 21:26:28,874:INFO:Initializing save_model()
2023-10-13 21:26:28,874:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbdt',
                                                                                              class_weight=None,
                                                                                              colsample_bytree=1....
                                                                    verbose=0,
                                                                    warm_start=False))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=0,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=True,
                                    stack_method='auto', verbose=0))],
         verbose=False), model_name=Modelo_Segmentacion_Customer, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\clabc\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbd...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-10-13 21:26:28,874:INFO:Adding model into prep_pipe
2023-10-13 21:26:28,874:WARNING:Only Model saved as it was a pipeline.
2023-10-13 21:26:28,906:INFO:Modelo_Segmentacion_Customer.pkl saved in current working directory
2023-10-13 21:26:29,318:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbdt',
                                                                                              class_weight=None,
                                                                                              colsample_bytree=1....
                                                                    verbose=0,
                                                                    warm_start=False))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=0,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=True,
                                    stack_method='auto', verbose=0))],
         verbose=False)
2023-10-13 21:26:29,319:INFO:save_model() successfully completed......................................
2023-10-13 21:26:30,102:INFO:Initializing load_model()
2023-10-13 21:26:30,103:INFO:load_model(model_name=Modelo_Segmentacion_Customer, platform=None, authentication=None, verbose=True)
2023-10-13 21:26:31,464:INFO:Initializing predict_model()
2023-10-13 21:26:31,464:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002D6273AB910>, estimator=Pipeline(memory=FastMemory(location=C:\Users\clabc\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbd...
                                                                    verbose=0,
                                                                    warm_start=False))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=0,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=True,
                                    stack_method='auto', verbose=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002D623F9F520>)
2023-10-13 21:26:31,464:INFO:Checking exceptions
2023-10-13 21:26:31,465:INFO:Preloading libraries
2023-10-13 21:26:31,472:INFO:Set up data.
2023-10-13 21:26:31,491:INFO:Set up index.
2023-10-13 22:03:59,685:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 22:03:59,686:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 22:03:59,686:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 22:03:59,686:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 22:14:06,579:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 22:14:06,579:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 22:14:06,579:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 22:14:06,579:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 22:14:08,361:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_2224\1152755250.py:2: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  corr = round(df.corr(),4)

2023-10-13 22:14:09,872:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_2224\1260000182.py:1: FutureWarning:

The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.


2023-10-13 22:21:28,253:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 22:21:28,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 22:21:28,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-13 22:21:28,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 09:53:24,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 09:53:24,645:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 09:53:24,645:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 09:53:24,645:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 12:16:11,874:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 12:16:11,875:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 12:16:11,875:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 12:16:11,875:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 12:18:11,070:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_9116\4239145361.py:5: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Ever_Married'].fillna(method='ffill', inplace=True)

2023-10-14 12:18:11,078:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_9116\4239145361.py:7: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Graduated'].fillna(method='ffill', inplace=True)

2023-10-14 12:18:11,082:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_9116\4239145361.py:9: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Profession'].fillna(method='ffill', inplace=True)

2023-10-14 12:18:11,085:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_9116\4239145361.py:11: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Work_Experience'].fillna(method='ffill', inplace=True)

2023-10-14 12:18:11,090:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_9116\4239145361.py:13: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Family_Size'].fillna(method='ffill', inplace=True)

2023-10-14 12:18:11,091:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_9116\4239145361.py:15: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Var_1'].fillna(method='ffill', inplace=True)

2023-10-14 12:22:13,790:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 12:22:13,790:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 12:22:13,790:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 12:22:13,791:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 12:22:16,031:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_1184\4239145361.py:5: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Ever_Married'].fillna(method='ffill', inplace=True)

2023-10-14 12:22:16,035:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_1184\4239145361.py:7: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Graduated'].fillna(method='ffill', inplace=True)

2023-10-14 12:22:16,039:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_1184\4239145361.py:9: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Profession'].fillna(method='ffill', inplace=True)

2023-10-14 12:22:16,043:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_1184\4239145361.py:11: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Work_Experience'].fillna(method='ffill', inplace=True)

2023-10-14 12:22:16,045:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_1184\4239145361.py:13: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Family_Size'].fillna(method='ffill', inplace=True)

2023-10-14 12:22:16,047:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_1184\4239145361.py:15: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Var_1'].fillna(method='ffill', inplace=True)

2023-10-14 12:45:07,653:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_9116\4239145361.py:5: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Ever_Married'].fillna(method='ffill', inplace=True)

2023-10-14 12:45:07,658:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_9116\4239145361.py:7: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Graduated'].fillna(method='ffill', inplace=True)

2023-10-14 12:45:07,662:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_9116\4239145361.py:9: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Profession'].fillna(method='ffill', inplace=True)

2023-10-14 12:45:07,666:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_9116\4239145361.py:11: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Work_Experience'].fillna(method='ffill', inplace=True)

2023-10-14 12:45:07,668:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_9116\4239145361.py:13: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Family_Size'].fillna(method='ffill', inplace=True)

2023-10-14 12:45:07,670:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_9116\4239145361.py:15: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Var_1'].fillna(method='ffill', inplace=True)

2023-10-14 12:49:48,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 12:49:48,576:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 12:49:48,577:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 12:49:48,577:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-14 12:49:51,196:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_13996\4239145361.py:5: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Ever_Married'].fillna(method='ffill', inplace=True)

2023-10-14 12:49:51,201:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_13996\4239145361.py:7: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Graduated'].fillna(method='ffill', inplace=True)

2023-10-14 12:49:51,205:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_13996\4239145361.py:9: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Profession'].fillna(method='ffill', inplace=True)

2023-10-14 12:49:51,209:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_13996\4239145361.py:11: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Work_Experience'].fillna(method='ffill', inplace=True)

2023-10-14 12:49:51,213:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_13996\4239145361.py:13: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Family_Size'].fillna(method='ffill', inplace=True)

2023-10-14 12:49:51,215:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_13996\4239145361.py:15: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Var_1'].fillna(method='ffill', inplace=True)

2023-10-16 09:01:24,738:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 09:01:24,739:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 09:01:24,739:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 09:01:24,739:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 09:01:35,048:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_2772\4239145361.py:5: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Ever_Married'].fillna(method='ffill', inplace=True)

2023-10-16 09:01:35,056:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_2772\4239145361.py:7: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Graduated'].fillna(method='ffill', inplace=True)

2023-10-16 09:01:35,059:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_2772\4239145361.py:9: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Profession'].fillna(method='ffill', inplace=True)

2023-10-16 09:01:35,063:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_2772\4239145361.py:11: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Work_Experience'].fillna(method='ffill', inplace=True)

2023-10-16 09:01:35,067:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_2772\4239145361.py:13: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Family_Size'].fillna(method='ffill', inplace=True)

2023-10-16 09:01:35,069:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_2772\4239145361.py:15: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.
  data['Var_1'].fillna(method='ffill', inplace=True)

2023-10-16 09:22:21,817:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_2772\4239145361.py:5: FutureWarning:

Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.


2023-10-16 09:22:21,822:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_2772\4239145361.py:7: FutureWarning:

Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.


2023-10-16 09:22:21,826:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_2772\4239145361.py:9: FutureWarning:

Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.


2023-10-16 09:22:21,830:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_2772\4239145361.py:11: FutureWarning:

Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.


2023-10-16 09:22:21,832:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_2772\4239145361.py:13: FutureWarning:

Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.


2023-10-16 09:22:21,834:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_2772\4239145361.py:15: FutureWarning:

Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.


2023-10-16 09:26:51,032:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 09:26:51,032:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 09:26:51,032:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 09:26:51,032:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 09:27:08,623:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_12092\1260000182.py:1: FutureWarning:

The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.


2023-10-16 09:27:13,108:INFO:PyCaret ClassificationExperiment
2023-10-16 09:27:13,109:INFO:Logging name: clf-default-name
2023-10-16 09:27:13,109:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-10-16 09:27:13,109:INFO:version 3.1.0
2023-10-16 09:27:13,109:INFO:Initializing setup()
2023-10-16 09:27:13,109:INFO:self.USI: 6611
2023-10-16 09:27:13,109:INFO:self._variable_keys: {'_available_plots', 'X_test', 'gpu_param', 'y', 'pipeline', 'logging_param', 'fold_groups_param', 'idx', 'exp_name_log', 'is_multiclass', 'seed', 'fold_generator', 'X_train', 'X', 'gpu_n_jobs_param', 'data', 'n_jobs_param', 'y_train', 'y_test', 'html_param', 'target_param', 'memory', 'fold_shuffle_param', 'fix_imbalance', 'USI', 'log_plots_param', 'exp_id', '_ml_usecase'}
2023-10-16 09:27:13,109:INFO:Checking environment
2023-10-16 09:27:13,109:INFO:python_version: 3.10.11
2023-10-16 09:27:13,110:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2023-10-16 09:27:13,110:INFO:machine: AMD64
2023-10-16 09:27:13,110:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-16 09:27:13,118:INFO:Memory: svmem(total=8514203648, available=1117278208, percent=86.9, used=7396925440, free=1117278208)
2023-10-16 09:27:13,118:INFO:Physical Core: 2
2023-10-16 09:27:13,119:INFO:Logical Core: 4
2023-10-16 09:27:13,119:INFO:Checking libraries
2023-10-16 09:27:13,119:INFO:System:
2023-10-16 09:27:13,119:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2023-10-16 09:27:13,120:INFO:executable: C:\Users\clabc\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\python.exe
2023-10-16 09:27:13,120:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-16 09:27:13,121:INFO:PyCaret required dependencies:
2023-10-16 09:27:13,519:INFO:                 pip: 23.0.1
2023-10-16 09:27:13,520:INFO:          setuptools: 65.5.0
2023-10-16 09:27:13,520:INFO:             pycaret: 3.1.0
2023-10-16 09:27:13,520:INFO:             IPython: 8.7.0
2023-10-16 09:27:13,520:INFO:          ipywidgets: 8.1.1
2023-10-16 09:27:13,521:INFO:                tqdm: 4.66.1
2023-10-16 09:27:13,521:INFO:               numpy: 1.23.5
2023-10-16 09:27:13,522:INFO:              pandas: 1.5.3
2023-10-16 09:27:13,522:INFO:              jinja2: 3.1.2
2023-10-16 09:27:13,523:INFO:               scipy: 1.10.1
2023-10-16 09:27:13,523:INFO:              joblib: 1.2.0
2023-10-16 09:27:13,523:INFO:             sklearn: 1.2.0
2023-10-16 09:27:13,523:INFO:                pyod: 1.1.0
2023-10-16 09:27:13,523:INFO:            imblearn: 0.11.0
2023-10-16 09:27:13,525:INFO:   category_encoders: 2.6.2
2023-10-16 09:27:13,525:INFO:            lightgbm: 4.1.0
2023-10-16 09:27:13,525:INFO:               numba: 0.58.0
2023-10-16 09:27:13,525:INFO:            requests: 2.31.0
2023-10-16 09:27:13,525:INFO:          matplotlib: 3.8.0
2023-10-16 09:27:13,526:INFO:          scikitplot: 0.3.7
2023-10-16 09:27:13,526:INFO:         yellowbrick: 1.5
2023-10-16 09:27:13,526:INFO:              plotly: 5.17.0
2023-10-16 09:27:13,527:INFO:    plotly-resampler: Not installed
2023-10-16 09:27:13,527:INFO:             kaleido: 0.2.1
2023-10-16 09:27:13,527:INFO:           schemdraw: 0.15
2023-10-16 09:27:13,527:INFO:         statsmodels: 0.14.0
2023-10-16 09:27:13,527:INFO:              sktime: 0.21.1
2023-10-16 09:27:13,527:INFO:               tbats: 1.1.3
2023-10-16 09:27:13,527:INFO:            pmdarima: 2.0.3
2023-10-16 09:27:13,527:INFO:              psutil: 5.9.4
2023-10-16 09:27:13,527:INFO:          markupsafe: 2.1.1
2023-10-16 09:27:13,529:INFO:             pickle5: Not installed
2023-10-16 09:27:13,529:INFO:         cloudpickle: 2.2.1
2023-10-16 09:27:13,529:INFO:         deprecation: 2.1.0
2023-10-16 09:27:13,529:INFO:              xxhash: 3.4.1
2023-10-16 09:27:13,529:INFO:           wurlitzer: Not installed
2023-10-16 09:27:13,529:INFO:PyCaret optional dependencies:
2023-10-16 09:27:13,637:INFO:                shap: Not installed
2023-10-16 09:27:13,637:INFO:           interpret: Not installed
2023-10-16 09:27:13,638:INFO:                umap: Not installed
2023-10-16 09:27:13,639:INFO:     ydata_profiling: Not installed
2023-10-16 09:27:13,639:INFO:  explainerdashboard: Not installed
2023-10-16 09:27:13,639:INFO:             autoviz: Not installed
2023-10-16 09:27:13,640:INFO:           fairlearn: Not installed
2023-10-16 09:27:13,640:INFO:          deepchecks: Not installed
2023-10-16 09:27:13,640:INFO:             xgboost: Not installed
2023-10-16 09:27:13,640:INFO:            catboost: Not installed
2023-10-16 09:27:13,640:INFO:              kmodes: Not installed
2023-10-16 09:27:13,640:INFO:             mlxtend: Not installed
2023-10-16 09:27:13,640:INFO:       statsforecast: Not installed
2023-10-16 09:27:13,640:INFO:        tune_sklearn: Not installed
2023-10-16 09:27:13,640:INFO:                 ray: Not installed
2023-10-16 09:27:13,641:INFO:            hyperopt: Not installed
2023-10-16 09:27:13,641:INFO:              optuna: Not installed
2023-10-16 09:27:13,641:INFO:               skopt: Not installed
2023-10-16 09:27:13,641:INFO:              mlflow: Not installed
2023-10-16 09:27:13,641:INFO:              gradio: Not installed
2023-10-16 09:27:13,643:INFO:             fastapi: Not installed
2023-10-16 09:27:13,643:INFO:             uvicorn: Not installed
2023-10-16 09:27:13,643:INFO:              m2cgen: Not installed
2023-10-16 09:27:13,643:INFO:           evidently: Not installed
2023-10-16 09:27:13,643:INFO:               fugue: Not installed
2023-10-16 09:27:13,643:INFO:           streamlit: Not installed
2023-10-16 09:27:13,643:INFO:             prophet: Not installed
2023-10-16 09:27:13,643:INFO:None
2023-10-16 09:27:13,643:INFO:Set up data.
2023-10-16 09:27:13,745:INFO:Set up folding strategy.
2023-10-16 09:27:13,745:INFO:Set up train/test split.
2023-10-16 09:27:13,815:INFO:Set up index.
2023-10-16 09:27:13,815:INFO:Assigning column types.
2023-10-16 09:27:13,835:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-10-16 09:27:14,411:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-16 09:27:14,453:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-10-16 09:27:14,827:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:14,829:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:15,374:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-16 09:27:15,382:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-10-16 09:27:15,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:15,625:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:15,631:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-10-16 09:27:16,027:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-10-16 09:27:16,293:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:16,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:16,722:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-10-16 09:27:16,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:16,984:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:16,985:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-10-16 09:27:17,765:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:17,766:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:18,630:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:18,631:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:18,642:INFO:Preparing preprocessing pipeline...
2023-10-16 09:27:18,647:INFO:Set up label encoding.
2023-10-16 09:27:18,647:INFO:Set up iterative imputation.
2023-10-16 09:27:18,648:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-16 09:27:18,725:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-16 09:27:18,775:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-16 09:27:19,552:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-16 09:27:20,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:20,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:21,187:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:21,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:21,291:INFO:Set up encoding of ordinal features.
2023-10-16 09:27:21,310:INFO:Set up encoding of categorical features.
2023-10-16 09:27:21,310:INFO:Set up column transformation.
2023-10-16 09:27:21,310:INFO:Set up feature normalization.
2023-10-16 09:27:22,747:INFO:Finished creating preprocessing pipeline.
2023-10-16 09:27:23,065:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\clabc\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbd...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-10-16 09:27:23,066:INFO:Creating final display dataframe.
2023-10-16 09:27:25,604:INFO:Setup _display_container:                         Description                   Value
0                        Session id                       0
1                            Target            Segmentation
2                       Target type              Multiclass
3                    Target mapping  A: 0, B: 1, C: 2, D: 3
4               Original data shape              (7261, 10)
5            Transformed data shape              (7261, 20)
6       Transformed train set shape              (5082, 20)
7        Transformed test set shape              (2179, 20)
8                  Ordinal features                       3
9                  Numeric features                       3
10             Categorical features                       6
11                       Preprocess                    True
12                  Imputation type               iterative
13  Iterative imputation iterations                       5
14        Numeric iterative imputer                lightgbm
15    Categorical iterative imputer                lightgbm
16         Maximum one-hot encoding                      25
17                  Encoding method                    None
18                   Transformation                    True
19            Transformation method             yeo-johnson
20                        Normalize                    True
21                 Normalize method                  zscore
22                   Fold Generator         StratifiedKFold
23                      Fold Number                      10
24                         CPU Jobs                      -1
25                          Use GPU                   False
26                   Log Experiment                   False
27                  Experiment Name        clf-default-name
28                              USI                    6611
2023-10-16 09:27:26,306:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:26,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:26,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:26,991:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 09:27:26,993:INFO:setup() successfully completed in 13.91s...............
2023-10-16 09:27:27,303:INFO:Initializing compare_models()
2023-10-16 09:27:27,304:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, include=None, fold=10, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, 'include': None, 'exclude': None, 'fold': 10, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-10-16 09:27:27,304:INFO:Checking exceptions
2023-10-16 09:27:27,320:INFO:Preparing display monitor
2023-10-16 09:27:27,424:INFO:Initializing Logistic Regression
2023-10-16 09:27:27,425:INFO:Total runtime is 0.0 minutes
2023-10-16 09:27:27,437:INFO:SubProcess create_model() called ==================================
2023-10-16 09:27:27,438:INFO:Initializing create_model()
2023-10-16 09:27:27,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139DA036CE0>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:27:27,442:INFO:Checking exceptions
2023-10-16 09:27:27,442:INFO:Importing libraries
2023-10-16 09:27:27,443:INFO:Copying training dataset
2023-10-16 09:27:27,465:INFO:Defining folds
2023-10-16 09:27:27,465:INFO:Declaring metric variables
2023-10-16 09:27:27,479:INFO:Importing untrained model
2023-10-16 09:27:27,491:INFO:Logistic Regression Imported successfully
2023-10-16 09:27:27,521:INFO:Starting cross validation
2023-10-16 09:27:27,535:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:27:59,706:INFO:Calculating mean and std
2023-10-16 09:27:59,712:INFO:Creating metrics dataframe
2023-10-16 09:27:59,744:INFO:Uploading results into container
2023-10-16 09:27:59,746:INFO:Uploading model into container now
2023-10-16 09:27:59,749:INFO:_master_model_container: 1
2023-10-16 09:27:59,749:INFO:_display_container: 2
2023-10-16 09:27:59,751:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-10-16 09:27:59,752:INFO:create_model() successfully completed......................................
2023-10-16 09:27:59,973:INFO:SubProcess create_model() end ==================================
2023-10-16 09:27:59,990:INFO:Creating metrics dataframe
2023-10-16 09:28:00,048:INFO:Initializing K Neighbors Classifier
2023-10-16 09:28:00,050:INFO:Total runtime is 0.5437754154205322 minutes
2023-10-16 09:28:00,087:INFO:SubProcess create_model() called ==================================
2023-10-16 09:28:00,088:INFO:Initializing create_model()
2023-10-16 09:28:00,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139DA036CE0>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:28:00,089:INFO:Checking exceptions
2023-10-16 09:28:00,089:INFO:Importing libraries
2023-10-16 09:28:00,089:INFO:Copying training dataset
2023-10-16 09:28:00,113:INFO:Defining folds
2023-10-16 09:28:00,114:INFO:Declaring metric variables
2023-10-16 09:28:00,134:INFO:Importing untrained model
2023-10-16 09:28:00,151:INFO:K Neighbors Classifier Imported successfully
2023-10-16 09:28:00,176:INFO:Starting cross validation
2023-10-16 09:28:00,195:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:28:07,729:INFO:Calculating mean and std
2023-10-16 09:28:07,733:INFO:Creating metrics dataframe
2023-10-16 09:28:07,751:INFO:Uploading results into container
2023-10-16 09:28:07,752:INFO:Uploading model into container now
2023-10-16 09:28:07,753:INFO:_master_model_container: 2
2023-10-16 09:28:07,753:INFO:_display_container: 2
2023-10-16 09:28:07,754:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-10-16 09:28:07,755:INFO:create_model() successfully completed......................................
2023-10-16 09:28:07,903:INFO:SubProcess create_model() end ==================================
2023-10-16 09:28:07,903:INFO:Creating metrics dataframe
2023-10-16 09:28:07,943:INFO:Initializing Naive Bayes
2023-10-16 09:28:07,944:INFO:Total runtime is 0.6753340403238932 minutes
2023-10-16 09:28:07,954:INFO:SubProcess create_model() called ==================================
2023-10-16 09:28:07,957:INFO:Initializing create_model()
2023-10-16 09:28:07,958:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139DA036CE0>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:28:07,959:INFO:Checking exceptions
2023-10-16 09:28:07,959:INFO:Importing libraries
2023-10-16 09:28:07,959:INFO:Copying training dataset
2023-10-16 09:28:07,983:INFO:Defining folds
2023-10-16 09:28:07,984:INFO:Declaring metric variables
2023-10-16 09:28:08,000:INFO:Importing untrained model
2023-10-16 09:28:08,019:INFO:Naive Bayes Imported successfully
2023-10-16 09:28:08,044:INFO:Starting cross validation
2023-10-16 09:28:08,063:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:28:15,318:INFO:Calculating mean and std
2023-10-16 09:28:15,324:INFO:Creating metrics dataframe
2023-10-16 09:28:15,340:INFO:Uploading results into container
2023-10-16 09:28:15,343:INFO:Uploading model into container now
2023-10-16 09:28:15,345:INFO:_master_model_container: 3
2023-10-16 09:28:15,346:INFO:_display_container: 2
2023-10-16 09:28:15,347:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-10-16 09:28:15,347:INFO:create_model() successfully completed......................................
2023-10-16 09:28:15,644:INFO:SubProcess create_model() end ==================================
2023-10-16 09:28:15,644:INFO:Creating metrics dataframe
2023-10-16 09:28:15,735:INFO:Initializing Decision Tree Classifier
2023-10-16 09:28:15,737:INFO:Total runtime is 0.8052196462949117 minutes
2023-10-16 09:28:15,775:INFO:SubProcess create_model() called ==================================
2023-10-16 09:28:15,776:INFO:Initializing create_model()
2023-10-16 09:28:15,776:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139DA036CE0>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:28:15,777:INFO:Checking exceptions
2023-10-16 09:28:15,777:INFO:Importing libraries
2023-10-16 09:28:15,777:INFO:Copying training dataset
2023-10-16 09:28:15,828:INFO:Defining folds
2023-10-16 09:28:15,830:INFO:Declaring metric variables
2023-10-16 09:28:15,847:INFO:Importing untrained model
2023-10-16 09:28:15,883:INFO:Decision Tree Classifier Imported successfully
2023-10-16 09:28:15,937:INFO:Starting cross validation
2023-10-16 09:28:15,950:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:28:22,402:INFO:Calculating mean and std
2023-10-16 09:28:22,407:INFO:Creating metrics dataframe
2023-10-16 09:28:22,422:INFO:Uploading results into container
2023-10-16 09:28:22,424:INFO:Uploading model into container now
2023-10-16 09:28:22,425:INFO:_master_model_container: 4
2023-10-16 09:28:22,425:INFO:_display_container: 2
2023-10-16 09:28:22,426:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=0, splitter='best')
2023-10-16 09:28:22,427:INFO:create_model() successfully completed......................................
2023-10-16 09:28:22,576:INFO:SubProcess create_model() end ==================================
2023-10-16 09:28:22,576:INFO:Creating metrics dataframe
2023-10-16 09:28:22,614:INFO:Initializing SVM - Linear Kernel
2023-10-16 09:28:22,615:INFO:Total runtime is 0.9198529760042826 minutes
2023-10-16 09:28:22,628:INFO:SubProcess create_model() called ==================================
2023-10-16 09:28:22,629:INFO:Initializing create_model()
2023-10-16 09:28:22,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139DA036CE0>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:28:22,630:INFO:Checking exceptions
2023-10-16 09:28:22,630:INFO:Importing libraries
2023-10-16 09:28:22,630:INFO:Copying training dataset
2023-10-16 09:28:22,657:INFO:Defining folds
2023-10-16 09:28:22,657:INFO:Declaring metric variables
2023-10-16 09:28:22,671:INFO:Importing untrained model
2023-10-16 09:28:22,691:INFO:SVM - Linear Kernel Imported successfully
2023-10-16 09:28:22,716:INFO:Starting cross validation
2023-10-16 09:28:22,728:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:28:26,877:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 09:28:26,892:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 09:28:26,895:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 09:28:26,931:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 09:28:29,520:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 09:28:29,563:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 09:28:29,972:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 09:28:30,027:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 09:28:31,758:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 09:28:31,792:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 09:28:31,845:INFO:Calculating mean and std
2023-10-16 09:28:31,853:INFO:Creating metrics dataframe
2023-10-16 09:28:31,874:INFO:Uploading results into container
2023-10-16 09:28:31,876:INFO:Uploading model into container now
2023-10-16 09:28:31,878:INFO:_master_model_container: 5
2023-10-16 09:28:31,878:INFO:_display_container: 2
2023-10-16 09:28:31,881:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=0, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-10-16 09:28:31,881:INFO:create_model() successfully completed......................................
2023-10-16 09:28:32,103:INFO:SubProcess create_model() end ==================================
2023-10-16 09:28:32,103:INFO:Creating metrics dataframe
2023-10-16 09:28:32,153:INFO:Initializing Ridge Classifier
2023-10-16 09:28:32,154:INFO:Total runtime is 1.0788413206736247 minutes
2023-10-16 09:28:32,170:INFO:SubProcess create_model() called ==================================
2023-10-16 09:28:32,172:INFO:Initializing create_model()
2023-10-16 09:28:32,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139DA036CE0>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:28:32,172:INFO:Checking exceptions
2023-10-16 09:28:32,173:INFO:Importing libraries
2023-10-16 09:28:32,173:INFO:Copying training dataset
2023-10-16 09:28:32,200:INFO:Defining folds
2023-10-16 09:28:32,200:INFO:Declaring metric variables
2023-10-16 09:28:32,221:INFO:Importing untrained model
2023-10-16 09:28:32,236:INFO:Ridge Classifier Imported successfully
2023-10-16 09:28:32,273:INFO:Starting cross validation
2023-10-16 09:28:32,288:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:28:35,248:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 09:28:35,254:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 09:28:35,276:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 09:28:35,294:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 09:28:37,984:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 09:28:37,986:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 09:28:37,990:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 09:28:38,092:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 09:28:40,002:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 09:28:40,027:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 09:28:40,062:INFO:Calculating mean and std
2023-10-16 09:28:40,067:INFO:Creating metrics dataframe
2023-10-16 09:28:40,085:INFO:Uploading results into container
2023-10-16 09:28:40,089:INFO:Uploading model into container now
2023-10-16 09:28:40,090:INFO:_master_model_container: 6
2023-10-16 09:28:40,091:INFO:_display_container: 2
2023-10-16 09:28:40,092:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=0, solver='auto',
                tol=0.0001)
2023-10-16 09:28:40,093:INFO:create_model() successfully completed......................................
2023-10-16 09:28:40,331:INFO:SubProcess create_model() end ==================================
2023-10-16 09:28:40,331:INFO:Creating metrics dataframe
2023-10-16 09:28:40,370:INFO:Initializing Random Forest Classifier
2023-10-16 09:28:40,370:INFO:Total runtime is 1.2157612760861716 minutes
2023-10-16 09:28:40,383:INFO:SubProcess create_model() called ==================================
2023-10-16 09:28:40,384:INFO:Initializing create_model()
2023-10-16 09:28:40,384:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139DA036CE0>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:28:40,384:INFO:Checking exceptions
2023-10-16 09:28:40,385:INFO:Importing libraries
2023-10-16 09:28:40,385:INFO:Copying training dataset
2023-10-16 09:28:40,403:INFO:Defining folds
2023-10-16 09:28:40,404:INFO:Declaring metric variables
2023-10-16 09:28:40,417:INFO:Importing untrained model
2023-10-16 09:28:40,433:INFO:Random Forest Classifier Imported successfully
2023-10-16 09:28:40,459:INFO:Starting cross validation
2023-10-16 09:28:40,476:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:28:58,136:INFO:Calculating mean and std
2023-10-16 09:28:58,141:INFO:Creating metrics dataframe
2023-10-16 09:28:58,157:INFO:Uploading results into container
2023-10-16 09:28:58,160:INFO:Uploading model into container now
2023-10-16 09:28:58,163:INFO:_master_model_container: 7
2023-10-16 09:28:58,163:INFO:_display_container: 2
2023-10-16 09:28:58,165:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=0, verbose=0, warm_start=False)
2023-10-16 09:28:58,165:INFO:create_model() successfully completed......................................
2023-10-16 09:28:58,369:INFO:SubProcess create_model() end ==================================
2023-10-16 09:28:58,369:INFO:Creating metrics dataframe
2023-10-16 09:28:58,421:INFO:Initializing Quadratic Discriminant Analysis
2023-10-16 09:28:58,422:INFO:Total runtime is 1.516638771692912 minutes
2023-10-16 09:28:58,437:INFO:SubProcess create_model() called ==================================
2023-10-16 09:28:58,438:INFO:Initializing create_model()
2023-10-16 09:28:58,438:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139DA036CE0>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:28:58,439:INFO:Checking exceptions
2023-10-16 09:28:58,439:INFO:Importing libraries
2023-10-16 09:28:58,440:INFO:Copying training dataset
2023-10-16 09:28:58,472:INFO:Defining folds
2023-10-16 09:28:58,473:INFO:Declaring metric variables
2023-10-16 09:28:58,487:INFO:Importing untrained model
2023-10-16 09:28:58,502:INFO:Quadratic Discriminant Analysis Imported successfully
2023-10-16 09:28:58,526:INFO:Starting cross validation
2023-10-16 09:28:58,542:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:29:00,824:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 09:29:00,826:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 09:29:00,839:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 09:29:00,857:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 09:29:02,863:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 09:29:02,928:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 09:29:02,941:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 09:29:02,995:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 09:29:04,196:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 09:29:04,241:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 09:29:04,474:INFO:Calculating mean and std
2023-10-16 09:29:04,481:INFO:Creating metrics dataframe
2023-10-16 09:29:04,496:INFO:Uploading results into container
2023-10-16 09:29:04,498:INFO:Uploading model into container now
2023-10-16 09:29:04,500:INFO:_master_model_container: 8
2023-10-16 09:29:04,500:INFO:_display_container: 2
2023-10-16 09:29:04,501:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-10-16 09:29:04,502:INFO:create_model() successfully completed......................................
2023-10-16 09:29:04,681:INFO:SubProcess create_model() end ==================================
2023-10-16 09:29:04,681:INFO:Creating metrics dataframe
2023-10-16 09:29:04,716:INFO:Initializing Ada Boost Classifier
2023-10-16 09:29:04,716:INFO:Total runtime is 1.621538547674815 minutes
2023-10-16 09:29:04,731:INFO:SubProcess create_model() called ==================================
2023-10-16 09:29:04,732:INFO:Initializing create_model()
2023-10-16 09:29:04,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139DA036CE0>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:29:04,733:INFO:Checking exceptions
2023-10-16 09:29:04,733:INFO:Importing libraries
2023-10-16 09:29:04,733:INFO:Copying training dataset
2023-10-16 09:29:04,754:INFO:Defining folds
2023-10-16 09:29:04,755:INFO:Declaring metric variables
2023-10-16 09:29:04,770:INFO:Importing untrained model
2023-10-16 09:29:04,784:INFO:Ada Boost Classifier Imported successfully
2023-10-16 09:29:04,819:INFO:Starting cross validation
2023-10-16 09:29:04,833:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:29:14,293:INFO:Calculating mean and std
2023-10-16 09:29:14,297:INFO:Creating metrics dataframe
2023-10-16 09:29:14,311:INFO:Uploading results into container
2023-10-16 09:29:14,314:INFO:Uploading model into container now
2023-10-16 09:29:14,315:INFO:_master_model_container: 9
2023-10-16 09:29:14,316:INFO:_display_container: 2
2023-10-16 09:29:14,317:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=0)
2023-10-16 09:29:14,318:INFO:create_model() successfully completed......................................
2023-10-16 09:29:14,471:INFO:SubProcess create_model() end ==================================
2023-10-16 09:29:14,471:INFO:Creating metrics dataframe
2023-10-16 09:29:14,508:INFO:Initializing Gradient Boosting Classifier
2023-10-16 09:29:14,509:INFO:Total runtime is 1.784756664435069 minutes
2023-10-16 09:29:14,521:INFO:SubProcess create_model() called ==================================
2023-10-16 09:29:14,522:INFO:Initializing create_model()
2023-10-16 09:29:14,522:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139DA036CE0>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:29:14,522:INFO:Checking exceptions
2023-10-16 09:29:14,523:INFO:Importing libraries
2023-10-16 09:29:14,523:INFO:Copying training dataset
2023-10-16 09:29:14,555:INFO:Defining folds
2023-10-16 09:29:14,556:INFO:Declaring metric variables
2023-10-16 09:29:14,572:INFO:Importing untrained model
2023-10-16 09:29:14,588:INFO:Gradient Boosting Classifier Imported successfully
2023-10-16 09:29:14,626:INFO:Starting cross validation
2023-10-16 09:29:14,636:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:29:47,821:INFO:Calculating mean and std
2023-10-16 09:29:47,825:INFO:Creating metrics dataframe
2023-10-16 09:29:47,843:INFO:Uploading results into container
2023-10-16 09:29:47,846:INFO:Uploading model into container now
2023-10-16 09:29:47,848:INFO:_master_model_container: 10
2023-10-16 09:29:47,848:INFO:_display_container: 2
2023-10-16 09:29:47,850:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=0, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-10-16 09:29:47,850:INFO:create_model() successfully completed......................................
2023-10-16 09:29:48,009:INFO:SubProcess create_model() end ==================================
2023-10-16 09:29:48,010:INFO:Creating metrics dataframe
2023-10-16 09:29:48,061:INFO:Initializing Linear Discriminant Analysis
2023-10-16 09:29:48,061:INFO:Total runtime is 2.343949063618978 minutes
2023-10-16 09:29:48,077:INFO:SubProcess create_model() called ==================================
2023-10-16 09:29:48,078:INFO:Initializing create_model()
2023-10-16 09:29:48,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139DA036CE0>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:29:48,078:INFO:Checking exceptions
2023-10-16 09:29:48,078:INFO:Importing libraries
2023-10-16 09:29:48,082:INFO:Copying training dataset
2023-10-16 09:29:48,110:INFO:Defining folds
2023-10-16 09:29:48,110:INFO:Declaring metric variables
2023-10-16 09:29:48,127:INFO:Importing untrained model
2023-10-16 09:29:48,142:INFO:Linear Discriminant Analysis Imported successfully
2023-10-16 09:29:48,187:INFO:Starting cross validation
2023-10-16 09:29:48,201:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:29:54,271:INFO:Calculating mean and std
2023-10-16 09:29:54,276:INFO:Creating metrics dataframe
2023-10-16 09:29:54,293:INFO:Uploading results into container
2023-10-16 09:29:54,295:INFO:Uploading model into container now
2023-10-16 09:29:54,299:INFO:_master_model_container: 11
2023-10-16 09:29:54,299:INFO:_display_container: 2
2023-10-16 09:29:54,301:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-10-16 09:29:54,301:INFO:create_model() successfully completed......................................
2023-10-16 09:29:54,476:INFO:SubProcess create_model() end ==================================
2023-10-16 09:29:54,477:INFO:Creating metrics dataframe
2023-10-16 09:29:54,543:INFO:Initializing Extra Trees Classifier
2023-10-16 09:29:54,544:INFO:Total runtime is 2.4520049810409548 minutes
2023-10-16 09:29:54,560:INFO:SubProcess create_model() called ==================================
2023-10-16 09:29:54,562:INFO:Initializing create_model()
2023-10-16 09:29:54,562:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139DA036CE0>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:29:54,563:INFO:Checking exceptions
2023-10-16 09:29:54,563:INFO:Importing libraries
2023-10-16 09:29:54,563:INFO:Copying training dataset
2023-10-16 09:29:54,591:INFO:Defining folds
2023-10-16 09:29:54,591:INFO:Declaring metric variables
2023-10-16 09:29:54,605:INFO:Importing untrained model
2023-10-16 09:29:54,619:INFO:Extra Trees Classifier Imported successfully
2023-10-16 09:29:54,659:INFO:Starting cross validation
2023-10-16 09:29:54,672:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:30:13,195:INFO:Calculating mean and std
2023-10-16 09:30:13,202:INFO:Creating metrics dataframe
2023-10-16 09:30:13,227:INFO:Uploading results into container
2023-10-16 09:30:13,230:INFO:Uploading model into container now
2023-10-16 09:30:13,231:INFO:_master_model_container: 12
2023-10-16 09:30:13,232:INFO:_display_container: 2
2023-10-16 09:30:13,234:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=0, verbose=0, warm_start=False)
2023-10-16 09:30:13,244:INFO:create_model() successfully completed......................................
2023-10-16 09:30:13,469:INFO:SubProcess create_model() end ==================================
2023-10-16 09:30:13,469:INFO:Creating metrics dataframe
2023-10-16 09:30:13,534:INFO:Initializing Light Gradient Boosting Machine
2023-10-16 09:30:13,535:INFO:Total runtime is 2.768514919281006 minutes
2023-10-16 09:30:13,551:INFO:SubProcess create_model() called ==================================
2023-10-16 09:30:13,552:INFO:Initializing create_model()
2023-10-16 09:30:13,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139DA036CE0>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:30:13,553:INFO:Checking exceptions
2023-10-16 09:30:13,553:INFO:Importing libraries
2023-10-16 09:30:13,553:INFO:Copying training dataset
2023-10-16 09:30:13,580:INFO:Defining folds
2023-10-16 09:30:13,580:INFO:Declaring metric variables
2023-10-16 09:30:13,594:INFO:Importing untrained model
2023-10-16 09:30:13,610:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-16 09:30:13,639:INFO:Starting cross validation
2023-10-16 09:30:13,664:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:30:37,214:INFO:Calculating mean and std
2023-10-16 09:30:37,219:INFO:Creating metrics dataframe
2023-10-16 09:30:37,240:INFO:Uploading results into container
2023-10-16 09:30:37,243:INFO:Uploading model into container now
2023-10-16 09:30:37,245:INFO:_master_model_container: 13
2023-10-16 09:30:37,247:INFO:_display_container: 2
2023-10-16 09:30:37,250:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-10-16 09:30:37,250:INFO:create_model() successfully completed......................................
2023-10-16 09:30:37,436:INFO:SubProcess create_model() end ==================================
2023-10-16 09:30:37,437:INFO:Creating metrics dataframe
2023-10-16 09:30:37,496:INFO:Initializing Dummy Classifier
2023-10-16 09:30:37,497:INFO:Total runtime is 3.167881194750468 minutes
2023-10-16 09:30:37,517:INFO:SubProcess create_model() called ==================================
2023-10-16 09:30:37,518:INFO:Initializing create_model()
2023-10-16 09:30:37,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139DA036CE0>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:30:37,519:INFO:Checking exceptions
2023-10-16 09:30:37,519:INFO:Importing libraries
2023-10-16 09:30:37,519:INFO:Copying training dataset
2023-10-16 09:30:37,549:INFO:Defining folds
2023-10-16 09:30:37,549:INFO:Declaring metric variables
2023-10-16 09:30:37,564:INFO:Importing untrained model
2023-10-16 09:30:37,577:INFO:Dummy Classifier Imported successfully
2023-10-16 09:30:37,613:INFO:Starting cross validation
2023-10-16 09:30:37,637:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:30:40,250:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 09:30:40,253:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 09:30:40,260:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 09:30:40,261:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 09:30:42,316:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 09:30:42,339:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 09:30:42,358:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 09:30:42,377:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 09:30:43,789:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 09:30:43,825:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 09:30:43,845:INFO:Calculating mean and std
2023-10-16 09:30:43,850:INFO:Creating metrics dataframe
2023-10-16 09:30:43,871:INFO:Uploading results into container
2023-10-16 09:30:43,874:INFO:Uploading model into container now
2023-10-16 09:30:43,876:INFO:_master_model_container: 14
2023-10-16 09:30:43,876:INFO:_display_container: 2
2023-10-16 09:30:43,877:INFO:DummyClassifier(constant=None, random_state=0, strategy='prior')
2023-10-16 09:30:43,877:INFO:create_model() successfully completed......................................
2023-10-16 09:30:44,089:INFO:SubProcess create_model() end ==================================
2023-10-16 09:30:44,090:INFO:Creating metrics dataframe
2023-10-16 09:30:44,205:INFO:Initializing create_model()
2023-10-16 09:30:44,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=0, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:30:44,205:INFO:Checking exceptions
2023-10-16 09:30:44,211:INFO:Importing libraries
2023-10-16 09:30:44,212:INFO:Copying training dataset
2023-10-16 09:30:44,237:INFO:Defining folds
2023-10-16 09:30:44,237:INFO:Declaring metric variables
2023-10-16 09:30:44,237:INFO:Importing untrained model
2023-10-16 09:30:44,238:INFO:Declaring custom model
2023-10-16 09:30:44,240:INFO:Gradient Boosting Classifier Imported successfully
2023-10-16 09:30:44,255:INFO:Cross validation set to False
2023-10-16 09:30:44,255:INFO:Fitting Model
2023-10-16 09:30:53,317:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=0, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-10-16 09:30:53,318:INFO:create_model() successfully completed......................................
2023-10-16 09:30:53,468:INFO:Initializing create_model()
2023-10-16 09:30:53,469:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:30:53,469:INFO:Checking exceptions
2023-10-16 09:30:53,474:INFO:Importing libraries
2023-10-16 09:30:53,474:INFO:Copying training dataset
2023-10-16 09:30:53,514:INFO:Defining folds
2023-10-16 09:30:53,514:INFO:Declaring metric variables
2023-10-16 09:30:53,515:INFO:Importing untrained model
2023-10-16 09:30:53,515:INFO:Declaring custom model
2023-10-16 09:30:53,516:INFO:Ada Boost Classifier Imported successfully
2023-10-16 09:30:53,526:INFO:Cross validation set to False
2023-10-16 09:30:53,527:INFO:Fitting Model
2023-10-16 09:30:55,993:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=0)
2023-10-16 09:30:55,993:INFO:create_model() successfully completed......................................
2023-10-16 09:30:56,157:INFO:Initializing create_model()
2023-10-16 09:30:56,158:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:30:56,159:INFO:Checking exceptions
2023-10-16 09:30:56,175:INFO:Importing libraries
2023-10-16 09:30:56,176:INFO:Copying training dataset
2023-10-16 09:30:56,212:INFO:Defining folds
2023-10-16 09:30:56,212:INFO:Declaring metric variables
2023-10-16 09:30:56,213:INFO:Importing untrained model
2023-10-16 09:30:56,213:INFO:Declaring custom model
2023-10-16 09:30:56,220:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-16 09:30:56,236:INFO:Cross validation set to False
2023-10-16 09:30:56,236:INFO:Fitting Model
2023-10-16 09:30:57,246:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001692 seconds.
2023-10-16 09:30:57,247:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-10-16 09:30:57,247:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-10-16 09:30:57,248:INFO:[LightGBM] [Info] Total Bins 142
2023-10-16 09:30:57,249:INFO:[LightGBM] [Info] Number of data points in the train set: 5082, number of used features: 19
2023-10-16 09:30:57,251:INFO:[LightGBM] [Info] Start training from score -1.409787
2023-10-16 09:30:57,251:INFO:[LightGBM] [Info] Start training from score -1.479874
2023-10-16 09:30:57,251:INFO:[LightGBM] [Info] Start training from score -1.401762
2023-10-16 09:30:57,252:INFO:[LightGBM] [Info] Start training from score -1.265935
2023-10-16 09:30:58,595:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-10-16 09:30:58,596:INFO:create_model() successfully completed......................................
2023-10-16 09:30:58,919:INFO:_master_model_container: 14
2023-10-16 09:30:58,919:INFO:_display_container: 2
2023-10-16 09:30:58,925:INFO:[GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=0, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=0), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)]
2023-10-16 09:30:58,925:INFO:compare_models() successfully completed......................................
2023-10-16 09:30:59,396:INFO:Initializing create_model()
2023-10-16 09:30:59,396:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:30:59,396:INFO:Checking exceptions
2023-10-16 09:30:59,455:INFO:Importing libraries
2023-10-16 09:30:59,456:INFO:Copying training dataset
2023-10-16 09:30:59,487:INFO:Defining folds
2023-10-16 09:30:59,488:INFO:Declaring metric variables
2023-10-16 09:30:59,503:INFO:Importing untrained model
2023-10-16 09:30:59,519:INFO:Logistic Regression Imported successfully
2023-10-16 09:30:59,546:INFO:Starting cross validation
2023-10-16 09:30:59,556:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:31:05,834:INFO:Calculating mean and std
2023-10-16 09:31:05,840:INFO:Creating metrics dataframe
2023-10-16 09:31:05,860:INFO:Finalizing model
2023-10-16 09:31:06,664:INFO:Uploading results into container
2023-10-16 09:31:06,667:INFO:Uploading model into container now
2023-10-16 09:31:06,699:INFO:_master_model_container: 15
2023-10-16 09:31:06,700:INFO:_display_container: 3
2023-10-16 09:31:06,702:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-10-16 09:31:06,703:INFO:create_model() successfully completed......................................
2023-10-16 09:31:07,072:INFO:Initializing tune_model()
2023-10-16 09:31:07,072:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=10, round=4, n_iter=10, custom_grid=None, optimize=Precision, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>)
2023-10-16 09:31:07,072:INFO:Checking exceptions
2023-10-16 09:31:07,138:INFO:Copying training dataset
2023-10-16 09:31:07,158:INFO:Checking base model
2023-10-16 09:31:07,158:INFO:Base model : Logistic Regression
2023-10-16 09:31:07,172:INFO:Declaring metric variables
2023-10-16 09:31:07,186:INFO:Defining Hyperparameters
2023-10-16 09:31:07,371:INFO:Tuning with n_jobs=-1
2023-10-16 09:31:07,372:INFO:Initializing RandomizedSearchCV
2023-10-16 09:31:10,186:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:10,190:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:10,292:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:10,313:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:12,446:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:12,469:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:12,477:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:12,504:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:14,334:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:14,367:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:14,383:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:14,412:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:16,980:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:16,994:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:17,105:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:17,233:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:19,755:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:19,830:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:19,952:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:20,003:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:22,367:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:22,466:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:22,552:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:22,605:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:25,385:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:25,498:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:25,673:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:25,744:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:28,484:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:28,569:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:28,786:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:28,894:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:31,300:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:31,354:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:31,560:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:31,662:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:33,281:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:33,384:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:33,664:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:33,672:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:35,154:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:35,170:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:35,706:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:35,827:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:38,544:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:38,614:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:38,907:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:38,913:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:40,684:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:40,733:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:40,946:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:40,966:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:42,516:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:42,578:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:42,928:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:42,975:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:44,606:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:44,658:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:45,065:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:45,109:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:46,563:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:46,750:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:47,085:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:47,115:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:48,698:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:48,765:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:48,977:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:49,132:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:50,703:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:50,714:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:50,940:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:51,270:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:52,562:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:52,606:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:52,872:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:53,239:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:54,496:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:54,645:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:54,737:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:55,400:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:56,586:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:56,789:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:56,794:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:57,507:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:58,677:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:58,914:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:58,991:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:31:59,495:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:32:00,619:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:32:00,789:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:32:00,859:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:32:01,356:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:32:02,372:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:32:02,478:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:32:02,531:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:32:03,134:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:32:04,228:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:32:04,273:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:32:04,352:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:32:04,736:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 09:32:04,746:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 9.825}
2023-10-16 09:32:04,750:INFO:Hyperparameter search completed
2023-10-16 09:32:04,751:INFO:SubProcess create_model() called ==================================
2023-10-16 09:32:04,754:INFO:Initializing create_model()
2023-10-16 09:32:04,755:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139D95DDED0>, model_only=True, return_train_score=False, kwargs={'class_weight': 'balanced', 'C': 9.825})
2023-10-16 09:32:04,756:INFO:Checking exceptions
2023-10-16 09:32:04,756:INFO:Importing libraries
2023-10-16 09:32:04,756:INFO:Copying training dataset
2023-10-16 09:32:04,779:INFO:Defining folds
2023-10-16 09:32:04,779:INFO:Declaring metric variables
2023-10-16 09:32:04,795:INFO:Importing untrained model
2023-10-16 09:32:04,795:INFO:Declaring custom model
2023-10-16 09:32:04,807:INFO:Logistic Regression Imported successfully
2023-10-16 09:32:04,857:INFO:Starting cross validation
2023-10-16 09:32:04,870:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:32:10,279:INFO:Calculating mean and std
2023-10-16 09:32:10,283:INFO:Creating metrics dataframe
2023-10-16 09:32:10,308:INFO:Finalizing model
2023-10-16 09:32:11,078:INFO:Uploading results into container
2023-10-16 09:32:11,080:INFO:Uploading model into container now
2023-10-16 09:32:11,082:INFO:_master_model_container: 16
2023-10-16 09:32:11,082:INFO:_display_container: 4
2023-10-16 09:32:11,084:INFO:LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-10-16 09:32:11,084:INFO:create_model() successfully completed......................................
2023-10-16 09:32:11,456:INFO:SubProcess create_model() end ==================================
2023-10-16 09:32:11,457:INFO:choose_better activated
2023-10-16 09:32:11,470:INFO:SubProcess create_model() called ==================================
2023-10-16 09:32:11,474:INFO:Initializing create_model()
2023-10-16 09:32:11,474:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:32:11,474:INFO:Checking exceptions
2023-10-16 09:32:11,480:INFO:Importing libraries
2023-10-16 09:32:11,480:INFO:Copying training dataset
2023-10-16 09:32:11,541:INFO:Defining folds
2023-10-16 09:32:11,541:INFO:Declaring metric variables
2023-10-16 09:32:11,543:INFO:Importing untrained model
2023-10-16 09:32:11,543:INFO:Declaring custom model
2023-10-16 09:32:11,546:INFO:Logistic Regression Imported successfully
2023-10-16 09:32:11,547:INFO:Starting cross validation
2023-10-16 09:32:11,558:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:32:17,601:INFO:Calculating mean and std
2023-10-16 09:32:17,603:INFO:Creating metrics dataframe
2023-10-16 09:32:17,609:INFO:Finalizing model
2023-10-16 09:32:18,398:INFO:Uploading results into container
2023-10-16 09:32:18,401:INFO:Uploading model into container now
2023-10-16 09:32:18,401:INFO:_master_model_container: 17
2023-10-16 09:32:18,402:INFO:_display_container: 5
2023-10-16 09:32:18,402:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-10-16 09:32:18,403:INFO:create_model() successfully completed......................................
2023-10-16 09:32:18,536:INFO:SubProcess create_model() end ==================================
2023-10-16 09:32:18,538:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Prec. is 0.489
2023-10-16 09:32:18,540:INFO:LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Prec. is 0.4959
2023-10-16 09:32:18,544:INFO:LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-10-16 09:32:18,544:INFO:choose_better completed
2023-10-16 09:32:18,592:INFO:_master_model_container: 17
2023-10-16 09:32:18,593:INFO:_display_container: 4
2023-10-16 09:32:18,595:INFO:LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-10-16 09:32:18,595:INFO:tune_model() successfully completed......................................
2023-10-16 09:32:18,995:INFO:Initializing ensemble_model()
2023-10-16 09:32:18,996:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-10-16 09:32:18,996:INFO:Checking exceptions
2023-10-16 09:32:19,058:INFO:Importing libraries
2023-10-16 09:32:19,059:INFO:Copying training dataset
2023-10-16 09:32:19,060:INFO:Checking base model
2023-10-16 09:32:19,065:INFO:Base model : Logistic Regression
2023-10-16 09:32:19,100:INFO:Importing untrained ensembler
2023-10-16 09:32:19,101:INFO:Ensemble method set to Bagging
2023-10-16 09:32:19,102:INFO:SubProcess create_model() called ==================================
2023-10-16 09:32:19,107:INFO:Initializing create_model()
2023-10-16 09:32:19,107:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=BaggingClassifier(base_estimator='deprecated', bootstrap=True,
                  bootstrap_features=False,
                  estimator=LogisticRegression(C=9.825, class_weight='balanced',
                                               dual=False, fit_intercept=True,
                                               intercept_scaling=1,
                                               l1_ratio=None, max_iter=1000,
                                               multi_class='auto', n_jobs=None,
                                               penalty='l2', random_state=0,
                                               solver='lbfgs', tol=0.0001,
                                               verbose=0, warm_start=False),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139D9487DC0>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:32:19,108:INFO:Checking exceptions
2023-10-16 09:32:19,108:INFO:Importing libraries
2023-10-16 09:32:19,108:INFO:Copying training dataset
2023-10-16 09:32:19,148:INFO:Defining folds
2023-10-16 09:32:19,148:INFO:Declaring metric variables
2023-10-16 09:32:19,169:INFO:Importing untrained model
2023-10-16 09:32:19,170:INFO:Declaring custom model
2023-10-16 09:32:19,189:INFO:Bagging Classifier Imported successfully
2023-10-16 09:32:19,222:INFO:Starting cross validation
2023-10-16 09:32:19,235:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:32:30,175:INFO:Calculating mean and std
2023-10-16 09:32:30,182:INFO:Creating metrics dataframe
2023-10-16 09:32:30,218:INFO:Finalizing model
2023-10-16 09:32:32,172:INFO:Uploading results into container
2023-10-16 09:32:32,174:INFO:Uploading model into container now
2023-10-16 09:32:32,176:INFO:_master_model_container: 18
2023-10-16 09:32:32,177:INFO:_display_container: 5
2023-10-16 09:32:32,181:INFO:BaggingClassifier(base_estimator='deprecated', bootstrap=True,
                  bootstrap_features=False,
                  estimator=LogisticRegression(C=9.825, class_weight='balanced',
                                               dual=False, fit_intercept=True,
                                               intercept_scaling=1,
                                               l1_ratio=None, max_iter=1000,
                                               multi_class='auto', n_jobs=None,
                                               penalty='l2', random_state=0,
                                               solver='lbfgs', tol=0.0001,
                                               verbose=0, warm_start=False),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)
2023-10-16 09:32:32,181:INFO:create_model() successfully completed......................................
2023-10-16 09:32:32,356:INFO:SubProcess create_model() end ==================================
2023-10-16 09:32:32,404:INFO:_master_model_container: 18
2023-10-16 09:32:32,404:INFO:_display_container: 5
2023-10-16 09:32:32,408:INFO:BaggingClassifier(base_estimator='deprecated', bootstrap=True,
                  bootstrap_features=False,
                  estimator=LogisticRegression(C=9.825, class_weight='balanced',
                                               dual=False, fit_intercept=True,
                                               intercept_scaling=1,
                                               l1_ratio=None, max_iter=1000,
                                               multi_class='auto', n_jobs=None,
                                               penalty='l2', random_state=0,
                                               solver='lbfgs', tol=0.0001,
                                               verbose=0, warm_start=False),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)
2023-10-16 09:32:32,409:INFO:ensemble_model() successfully completed......................................
2023-10-16 09:32:32,762:INFO:Initializing ensemble_model()
2023-10-16 09:32:32,762:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=Boosting, fold=None, n_estimators=10, round=4, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-10-16 09:32:32,762:INFO:Checking exceptions
2023-10-16 09:32:33,547:INFO:Importing libraries
2023-10-16 09:32:33,548:INFO:Copying training dataset
2023-10-16 09:32:33,548:INFO:Checking base model
2023-10-16 09:32:33,549:INFO:Base model : Logistic Regression
2023-10-16 09:32:33,594:INFO:Importing untrained ensembler
2023-10-16 09:32:33,595:INFO:Ensemble method set to Boosting
2023-10-16 09:32:33,596:INFO:SubProcess create_model() called ==================================
2023-10-16 09:32:33,600:INFO:Initializing create_model()
2023-10-16 09:32:33,601:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=LogisticRegression(C=9.825,
                                                class_weight='balanced',
                                                dual=False, fit_intercept=True,
                                                intercept_scaling=1,
                                                l1_ratio=None, max_iter=1000,
                                                multi_class='auto', n_jobs=None,
                                                penalty='l2', random_state=0,
                                                solver='lbfgs', tol=0.0001,
                                                verbose=0, warm_start=False),
                   learning_rate=1.0, n_estimators=10, random_state=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139D95DD090>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:32:33,601:INFO:Checking exceptions
2023-10-16 09:32:33,601:INFO:Importing libraries
2023-10-16 09:32:33,602:INFO:Copying training dataset
2023-10-16 09:32:33,644:INFO:Defining folds
2023-10-16 09:32:33,645:INFO:Declaring metric variables
2023-10-16 09:32:33,666:INFO:Importing untrained model
2023-10-16 09:32:33,666:INFO:Declaring custom model
2023-10-16 09:32:33,690:INFO:Ada Boost Classifier Imported successfully
2023-10-16 09:32:33,726:INFO:Starting cross validation
2023-10-16 09:32:33,736:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:32:44,336:INFO:Calculating mean and std
2023-10-16 09:32:44,342:INFO:Creating metrics dataframe
2023-10-16 09:32:44,363:INFO:Finalizing model
2023-10-16 09:32:46,266:INFO:Uploading results into container
2023-10-16 09:32:46,268:INFO:Uploading model into container now
2023-10-16 09:32:46,270:INFO:_master_model_container: 19
2023-10-16 09:32:46,271:INFO:_display_container: 6
2023-10-16 09:32:46,280:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=LogisticRegression(C=9.825,
                                                class_weight='balanced',
                                                dual=False, fit_intercept=True,
                                                intercept_scaling=1,
                                                l1_ratio=None, max_iter=1000,
                                                multi_class='auto', n_jobs=None,
                                                penalty='l2', random_state=0,
                                                solver='lbfgs', tol=0.0001,
                                                verbose=0, warm_start=False),
                   learning_rate=1.0, n_estimators=10, random_state=0)
2023-10-16 09:32:46,280:INFO:create_model() successfully completed......................................
2023-10-16 09:32:46,657:INFO:SubProcess create_model() end ==================================
2023-10-16 09:32:46,721:INFO:_master_model_container: 19
2023-10-16 09:32:46,722:INFO:_display_container: 6
2023-10-16 09:32:46,726:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=LogisticRegression(C=9.825,
                                                class_weight='balanced',
                                                dual=False, fit_intercept=True,
                                                intercept_scaling=1,
                                                l1_ratio=None, max_iter=1000,
                                                multi_class='auto', n_jobs=None,
                                                penalty='l2', random_state=0,
                                                solver='lbfgs', tol=0.0001,
                                                verbose=0, warm_start=False),
                   learning_rate=1.0, n_estimators=10, random_state=0)
2023-10-16 09:32:46,727:INFO:ensemble_model() successfully completed......................................
2023-10-16 09:32:47,418:INFO:Initializing blend_models()
2023-10-16 09:32:47,418:INFO:blend_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator_list=[LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)], fold=None, round=4, choose_better=False, optimize=Accuracy, method=soft, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-10-16 09:32:47,418:INFO:Checking exceptions
2023-10-16 09:32:47,496:INFO:Importing libraries
2023-10-16 09:32:47,497:INFO:Copying training dataset
2023-10-16 09:32:47,513:INFO:Getting model names
2023-10-16 09:32:47,538:INFO:SubProcess create_model() called ==================================
2023-10-16 09:32:47,545:INFO:Initializing create_model()
2023-10-16 09:32:47,546:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=9.825,
                                                 class_weight='balanced',
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=0, solver='lbfgs',
                                                 tol=0.0001, verbose=0,
                                                 warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139D9515AB0>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:32:47,547:INFO:Checking exceptions
2023-10-16 09:32:47,547:INFO:Importing libraries
2023-10-16 09:32:47,547:INFO:Copying training dataset
2023-10-16 09:32:47,577:INFO:Defining folds
2023-10-16 09:32:47,577:INFO:Declaring metric variables
2023-10-16 09:32:47,601:INFO:Importing untrained model
2023-10-16 09:32:47,602:INFO:Declaring custom model
2023-10-16 09:32:47,620:INFO:Voting Classifier Imported successfully
2023-10-16 09:32:47,643:INFO:Starting cross validation
2023-10-16 09:32:47,652:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:32:56,419:INFO:Calculating mean and std
2023-10-16 09:32:56,422:INFO:Creating metrics dataframe
2023-10-16 09:32:56,463:INFO:Finalizing model
2023-10-16 09:32:57,865:INFO:Uploading results into container
2023-10-16 09:32:57,868:INFO:Uploading model into container now
2023-10-16 09:32:57,869:INFO:_master_model_container: 20
2023-10-16 09:32:57,870:INFO:_display_container: 7
2023-10-16 09:32:57,876:INFO:VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=9.825,
                                                 class_weight='balanced',
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=0, solver='lbfgs',
                                                 tol=0.0001, verbose=0,
                                                 warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2023-10-16 09:32:57,877:INFO:create_model() successfully completed......................................
2023-10-16 09:32:58,243:INFO:SubProcess create_model() end ==================================
2023-10-16 09:32:58,288:INFO:_master_model_container: 20
2023-10-16 09:32:58,289:INFO:_display_container: 7
2023-10-16 09:32:58,297:INFO:VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=9.825,
                                                 class_weight='balanced',
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=0, solver='lbfgs',
                                                 tol=0.0001, verbose=0,
                                                 warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2023-10-16 09:32:58,297:INFO:blend_models() successfully completed......................................
2023-10-16 09:32:59,026:INFO:Initializing stack_models()
2023-10-16 09:32:59,027:INFO:stack_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator_list=[LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=True, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-10-16 09:32:59,027:INFO:Checking exceptions
2023-10-16 09:32:59,037:INFO:Defining meta model
2023-10-16 09:32:59,103:INFO:Getting model names
2023-10-16 09:32:59,104:INFO:[('Logistic Regression', LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False))]
2023-10-16 09:32:59,121:INFO:SubProcess create_model() called ==================================
2023-10-16 09:32:59,135:INFO:Initializing create_model()
2023-10-16 09:32:59,140:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000139D952C970>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 09:32:59,140:INFO:Checking exceptions
2023-10-16 09:32:59,141:INFO:Importing libraries
2023-10-16 09:32:59,141:INFO:Copying training dataset
2023-10-16 09:32:59,166:INFO:Defining folds
2023-10-16 09:32:59,166:INFO:Declaring metric variables
2023-10-16 09:32:59,195:INFO:Importing untrained model
2023-10-16 09:32:59,195:INFO:Declaring custom model
2023-10-16 09:32:59,215:INFO:Stacking Classifier Imported successfully
2023-10-16 09:32:59,240:INFO:Starting cross validation
2023-10-16 09:32:59,251:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 09:33:10,987:INFO:Calculating mean and std
2023-10-16 09:33:10,994:INFO:Creating metrics dataframe
2023-10-16 09:33:11,024:INFO:Finalizing model
2023-10-16 09:33:13,132:INFO:Uploading results into container
2023-10-16 09:33:13,135:INFO:Uploading model into container now
2023-10-16 09:33:13,137:INFO:_master_model_container: 21
2023-10-16 09:33:13,137:INFO:_display_container: 8
2023-10-16 09:33:13,147:INFO:StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-10-16 09:33:13,147:INFO:create_model() successfully completed......................................
2023-10-16 09:33:13,283:INFO:SubProcess create_model() end ==================================
2023-10-16 09:33:13,311:INFO:_master_model_container: 21
2023-10-16 09:33:13,311:INFO:_display_container: 8
2023-10-16 09:33:13,320:INFO:StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-10-16 09:33:13,320:INFO:stack_models() successfully completed......................................
2023-10-16 09:33:14,607:INFO:Initializing plot_model()
2023-10-16 09:33:14,607:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, system=True)
2023-10-16 09:33:14,608:INFO:Checking exceptions
2023-10-16 09:33:14,623:INFO:Preloading libraries
2023-10-16 09:33:14,625:INFO:Copying training dataset
2023-10-16 09:33:14,625:INFO:Plot type: auc
2023-10-16 09:33:15,199:INFO:Fitting Model
2023-10-16 09:33:15,200:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\base.py:409: UserWarning:

X does not have valid feature names, but LogisticRegression was fitted with feature names


2023-10-16 09:33:15,202:INFO:Scoring test/hold-out set
2023-10-16 09:33:16,745:INFO:Visual Rendered Successfully
2023-10-16 09:33:17,016:INFO:plot_model() successfully completed......................................
2023-10-16 09:33:17,306:INFO:Initializing plot_model()
2023-10-16 09:33:17,306:INFO:plot_model(plot=pr, fold=None, verbose=True, display=None, display_format=None, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, system=True)
2023-10-16 09:33:17,307:INFO:Checking exceptions
2023-10-16 09:33:17,325:INFO:Preloading libraries
2023-10-16 09:33:17,327:INFO:Copying training dataset
2023-10-16 09:33:17,327:INFO:Plot type: pr
2023-10-16 09:33:17,870:INFO:Fitting Model
2023-10-16 09:33:19,515:INFO:Scoring test/hold-out set
2023-10-16 09:33:20,505:INFO:Visual Rendered Successfully
2023-10-16 09:33:20,686:INFO:plot_model() successfully completed......................................
2023-10-16 09:33:20,918:INFO:Initializing plot_model()
2023-10-16 09:33:20,918:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, system=True)
2023-10-16 09:33:20,918:INFO:Checking exceptions
2023-10-16 09:33:20,931:INFO:Preloading libraries
2023-10-16 09:33:20,935:INFO:Copying training dataset
2023-10-16 09:33:20,936:INFO:Plot type: auc
2023-10-16 09:33:21,481:INFO:Fitting Model
2023-10-16 09:33:21,482:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\base.py:409: UserWarning:

X does not have valid feature names, but LogisticRegression was fitted with feature names


2023-10-16 09:33:21,484:INFO:Scoring test/hold-out set
2023-10-16 09:33:22,513:INFO:Visual Rendered Successfully
2023-10-16 09:33:22,850:INFO:plot_model() successfully completed......................................
2023-10-16 09:33:23,158:INFO:Initializing plot_model()
2023-10-16 09:33:23,158:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, system=True)
2023-10-16 09:33:23,159:INFO:Checking exceptions
2023-10-16 09:33:23,175:INFO:Preloading libraries
2023-10-16 09:33:23,177:INFO:Copying training dataset
2023-10-16 09:33:23,177:INFO:Plot type: confusion_matrix
2023-10-16 09:33:23,591:INFO:Fitting Model
2023-10-16 09:33:23,592:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\base.py:409: UserWarning:

X does not have valid feature names, but LogisticRegression was fitted with feature names


2023-10-16 09:33:23,593:INFO:Scoring test/hold-out set
2023-10-16 09:33:24,157:INFO:Visual Rendered Successfully
2023-10-16 09:33:24,296:INFO:plot_model() successfully completed......................................
2023-10-16 09:33:24,493:INFO:Initializing plot_model()
2023-10-16 09:33:24,493:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, system=True)
2023-10-16 09:33:24,494:INFO:Checking exceptions
2023-10-16 09:33:24,509:INFO:Preloading libraries
2023-10-16 09:33:24,512:INFO:Copying training dataset
2023-10-16 09:33:24,513:INFO:Plot type: learning
2023-10-16 09:33:25,120:INFO:Fitting Model
2023-10-16 09:33:41,076:INFO:Visual Rendered Successfully
2023-10-16 09:33:41,236:INFO:plot_model() successfully completed......................................
2023-10-16 09:33:41,501:INFO:Initializing plot_model()
2023-10-16 09:33:41,502:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, system=True)
2023-10-16 09:33:41,502:INFO:Checking exceptions
2023-10-16 09:33:41,518:INFO:Preloading libraries
2023-10-16 09:33:41,519:INFO:Copying training dataset
2023-10-16 09:33:41,520:INFO:Plot type: feature
2023-10-16 09:33:42,591:INFO:Visual Rendered Successfully
2023-10-16 09:33:42,744:INFO:plot_model() successfully completed......................................
2023-10-16 09:33:43,514:INFO:Initializing evaluate_model()
2023-10-16 09:33:43,515:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), fold=10, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-10-16 09:33:43,603:INFO:Initializing plot_model()
2023-10-16 09:33:43,603:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, system=True)
2023-10-16 09:33:43,604:INFO:Checking exceptions
2023-10-16 09:33:43,612:INFO:Preloading libraries
2023-10-16 09:33:43,614:INFO:Copying training dataset
2023-10-16 09:33:43,614:INFO:Plot type: pipeline
2023-10-16 09:33:44,887:INFO:Visual Rendered Successfully
2023-10-16 09:33:45,145:INFO:plot_model() successfully completed......................................
2023-10-16 09:33:45,624:INFO:Initializing finalize_model()
2023-10-16 09:33:45,625:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-10-16 09:33:45,632:INFO:Finalizing StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-10-16 09:33:45,648:INFO:Initializing create_model()
2023-10-16 09:33:45,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-10-16 09:33:45,649:INFO:Checking exceptions
2023-10-16 09:33:45,654:INFO:Importing libraries
2023-10-16 09:33:45,655:INFO:Copying training dataset
2023-10-16 09:33:45,656:INFO:Defining folds
2023-10-16 09:33:45,656:INFO:Declaring metric variables
2023-10-16 09:33:45,657:INFO:Importing untrained model
2023-10-16 09:33:45,657:INFO:Declaring custom model
2023-10-16 09:33:45,662:INFO:Stacking Classifier Imported successfully
2023-10-16 09:33:45,673:INFO:Cross validation set to False
2023-10-16 09:33:45,674:INFO:Fitting Model
2023-10-16 09:33:50,340:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbdt',
                                                                                              class_weight=None,
                                                                                              colsample_bytree=1....
                                                                    verbose=0,
                                                                    warm_start=False))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=0,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=True,
                                    stack_method='auto', verbose=0))],
         verbose=False)
2023-10-16 09:33:50,340:INFO:create_model() successfully completed......................................
2023-10-16 09:33:50,481:INFO:_master_model_container: 21
2023-10-16 09:33:50,481:INFO:_display_container: 8
2023-10-16 09:33:50,956:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbdt',
                                                                                              class_weight=None,
                                                                                              colsample_bytree=1....
                                                                    verbose=0,
                                                                    warm_start=False))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=0,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=True,
                                    stack_method='auto', verbose=0))],
         verbose=False)
2023-10-16 09:33:50,957:INFO:finalize_model() successfully completed......................................
2023-10-16 09:33:51,608:INFO:Initializing predict_model()
2023-10-16 09:33:51,608:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000139D984ED40>)
2023-10-16 09:33:51,609:INFO:Checking exceptions
2023-10-16 09:33:51,609:INFO:Preloading libraries
2023-10-16 09:33:51,615:INFO:Set up data.
2023-10-16 09:33:51,648:INFO:Set up index.
2023-10-16 09:33:52,603:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\pipeline.py:278: UserWarning:

Persisting input arguments took 0.50s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.


2023-10-16 09:33:52,694:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning:

Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.


2023-10-16 09:33:52,710:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning:

Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.


2023-10-16 09:33:52,770:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning:

Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.


2023-10-16 09:33:58,735:INFO:Initializing save_model()
2023-10-16 09:33:58,735:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbdt',
                                                                                              class_weight=None,
                                                                                              colsample_bytree=1....
                                                                    verbose=0,
                                                                    warm_start=False))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=0,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=True,
                                    stack_method='auto', verbose=0))],
         verbose=False), model_name=Modelo_Segmentacion_Customer, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\clabc\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbd...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-10-16 09:33:58,737:INFO:Adding model into prep_pipe
2023-10-16 09:33:58,737:WARNING:Only Model saved as it was a pipeline.
2023-10-16 09:33:58,813:INFO:Modelo_Segmentacion_Customer.pkl saved in current working directory
2023-10-16 09:33:59,036:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbdt',
                                                                                              class_weight=None,
                                                                                              colsample_bytree=1....
                                                                    verbose=0,
                                                                    warm_start=False))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=0,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=True,
                                    stack_method='auto', verbose=0))],
         verbose=False)
2023-10-16 09:33:59,039:INFO:save_model() successfully completed......................................
2023-10-16 09:33:59,731:INFO:Initializing load_model()
2023-10-16 09:33:59,731:INFO:load_model(model_name=Modelo_Segmentacion_Customer, platform=None, authentication=None, verbose=True)
2023-10-16 09:34:01,195:INFO:Initializing predict_model()
2023-10-16 09:34:01,195:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000139D7603550>, estimator=Pipeline(memory=FastMemory(location=C:\Users\clabc\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbd...
                                                                    verbose=0,
                                                                    warm_start=False))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=0,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=True,
                                    stack_method='auto', verbose=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000139D94EEC20>)
2023-10-16 09:34:01,195:INFO:Checking exceptions
2023-10-16 09:34:01,196:INFO:Preloading libraries
2023-10-16 09:34:01,201:INFO:Set up data.
2023-10-16 09:34:01,216:INFO:Set up index.
2023-10-16 09:48:05,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 09:48:05,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 09:48:05,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 09:48:05,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 09:48:08,035:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_6796\1737440062.py:2: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  corr = round(df.corr(),4)

2023-10-16 09:48:09,502:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_6796\1260000182.py:1: FutureWarning:

The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.


2023-10-16 09:53:04,366:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_6796\1737440062.py:2: FutureWarning:

The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.


2023-10-16 09:54:01,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 09:54:01,970:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 09:54:01,970:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 09:54:01,970:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 09:54:04,201:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_14596\1737440062.py:2: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  corr = round(df.corr(),4)

2023-10-16 10:01:07,910:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 10:01:07,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 10:01:07,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 10:01:07,911:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-10-16 10:01:10,487:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_3580\1737440062.py:2: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  corr = round(df.corr(),4)

2023-10-16 10:01:11,912:WARNING:C:\Users\clabc\AppData\Local\Temp\ipykernel_3580\1260000182.py:1: FutureWarning:

The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.


2023-10-16 10:01:15,261:INFO:PyCaret ClassificationExperiment
2023-10-16 10:01:15,262:INFO:Logging name: clf-default-name
2023-10-16 10:01:15,262:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-10-16 10:01:15,263:INFO:version 3.1.0
2023-10-16 10:01:15,263:INFO:Initializing setup()
2023-10-16 10:01:15,264:INFO:self.USI: 7bb0
2023-10-16 10:01:15,264:INFO:self._variable_keys: {'y_train', 'gpu_n_jobs_param', 'memory', '_ml_usecase', 'n_jobs_param', 'gpu_param', '_available_plots', 'fold_shuffle_param', 'fold_generator', 'y', 'X_test', 'target_param', 'X', 'idx', 'data', 'is_multiclass', 'html_param', 'y_test', 'exp_id', 'seed', 'exp_name_log', 'pipeline', 'fix_imbalance', 'fold_groups_param', 'log_plots_param', 'USI', 'X_train', 'logging_param'}
2023-10-16 10:01:15,264:INFO:Checking environment
2023-10-16 10:01:15,265:INFO:python_version: 3.10.11
2023-10-16 10:01:15,265:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2023-10-16 10:01:15,265:INFO:machine: AMD64
2023-10-16 10:01:15,266:INFO:platform: Windows-10-10.0.19045-SP0
2023-10-16 10:01:15,273:INFO:Memory: svmem(total=8514203648, available=1939460096, percent=77.2, used=6574743552, free=1939460096)
2023-10-16 10:01:15,273:INFO:Physical Core: 2
2023-10-16 10:01:15,273:INFO:Logical Core: 4
2023-10-16 10:01:15,273:INFO:Checking libraries
2023-10-16 10:01:15,274:INFO:System:
2023-10-16 10:01:15,274:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2023-10-16 10:01:15,274:INFO:executable: C:\Users\clabc\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\python.exe
2023-10-16 10:01:15,274:INFO:   machine: Windows-10-10.0.19045-SP0
2023-10-16 10:01:15,275:INFO:PyCaret required dependencies:
2023-10-16 10:01:15,358:INFO:                 pip: 23.0.1
2023-10-16 10:01:15,358:INFO:          setuptools: 65.5.0
2023-10-16 10:01:15,358:INFO:             pycaret: 3.1.0
2023-10-16 10:01:15,359:INFO:             IPython: 8.7.0
2023-10-16 10:01:15,359:INFO:          ipywidgets: 8.1.1
2023-10-16 10:01:15,359:INFO:                tqdm: 4.66.1
2023-10-16 10:01:15,359:INFO:               numpy: 1.23.5
2023-10-16 10:01:15,359:INFO:              pandas: 1.5.3
2023-10-16 10:01:15,360:INFO:              jinja2: 3.1.2
2023-10-16 10:01:15,360:INFO:               scipy: 1.10.1
2023-10-16 10:01:15,360:INFO:              joblib: 1.2.0
2023-10-16 10:01:15,360:INFO:             sklearn: 1.2.0
2023-10-16 10:01:15,360:INFO:                pyod: 1.1.0
2023-10-16 10:01:15,360:INFO:            imblearn: 0.11.0
2023-10-16 10:01:15,360:INFO:   category_encoders: 2.6.2
2023-10-16 10:01:15,360:INFO:            lightgbm: 4.1.0
2023-10-16 10:01:15,361:INFO:               numba: 0.58.0
2023-10-16 10:01:15,361:INFO:            requests: 2.31.0
2023-10-16 10:01:15,361:INFO:          matplotlib: 3.8.0
2023-10-16 10:01:15,361:INFO:          scikitplot: 0.3.7
2023-10-16 10:01:15,361:INFO:         yellowbrick: 1.5
2023-10-16 10:01:15,361:INFO:              plotly: 5.17.0
2023-10-16 10:01:15,361:INFO:    plotly-resampler: Not installed
2023-10-16 10:01:15,361:INFO:             kaleido: 0.2.1
2023-10-16 10:01:15,362:INFO:           schemdraw: 0.15
2023-10-16 10:01:15,362:INFO:         statsmodels: 0.14.0
2023-10-16 10:01:15,362:INFO:              sktime: 0.21.1
2023-10-16 10:01:15,362:INFO:               tbats: 1.1.3
2023-10-16 10:01:15,363:INFO:            pmdarima: 2.0.3
2023-10-16 10:01:15,363:INFO:              psutil: 5.9.4
2023-10-16 10:01:15,363:INFO:          markupsafe: 2.1.1
2023-10-16 10:01:15,363:INFO:             pickle5: Not installed
2023-10-16 10:01:15,364:INFO:         cloudpickle: 2.2.1
2023-10-16 10:01:15,364:INFO:         deprecation: 2.1.0
2023-10-16 10:01:15,364:INFO:              xxhash: 3.4.1
2023-10-16 10:01:15,365:INFO:           wurlitzer: Not installed
2023-10-16 10:01:15,365:INFO:PyCaret optional dependencies:
2023-10-16 10:01:15,490:INFO:                shap: Not installed
2023-10-16 10:01:15,491:INFO:           interpret: Not installed
2023-10-16 10:01:15,491:INFO:                umap: Not installed
2023-10-16 10:01:15,491:INFO:     ydata_profiling: Not installed
2023-10-16 10:01:15,491:INFO:  explainerdashboard: Not installed
2023-10-16 10:01:15,492:INFO:             autoviz: Not installed
2023-10-16 10:01:15,492:INFO:           fairlearn: Not installed
2023-10-16 10:01:15,492:INFO:          deepchecks: Not installed
2023-10-16 10:01:15,492:INFO:             xgboost: Not installed
2023-10-16 10:01:15,493:INFO:            catboost: Not installed
2023-10-16 10:01:15,493:INFO:              kmodes: Not installed
2023-10-16 10:01:15,493:INFO:             mlxtend: Not installed
2023-10-16 10:01:15,493:INFO:       statsforecast: Not installed
2023-10-16 10:01:15,494:INFO:        tune_sklearn: Not installed
2023-10-16 10:01:15,494:INFO:                 ray: Not installed
2023-10-16 10:01:15,494:INFO:            hyperopt: Not installed
2023-10-16 10:01:15,495:INFO:              optuna: Not installed
2023-10-16 10:01:15,495:INFO:               skopt: Not installed
2023-10-16 10:01:15,495:INFO:              mlflow: Not installed
2023-10-16 10:01:15,495:INFO:              gradio: Not installed
2023-10-16 10:01:15,496:INFO:             fastapi: Not installed
2023-10-16 10:01:15,496:INFO:             uvicorn: Not installed
2023-10-16 10:01:15,496:INFO:              m2cgen: Not installed
2023-10-16 10:01:15,496:INFO:           evidently: Not installed
2023-10-16 10:01:15,496:INFO:               fugue: Not installed
2023-10-16 10:01:15,497:INFO:           streamlit: Not installed
2023-10-16 10:01:15,497:INFO:             prophet: Not installed
2023-10-16 10:01:15,497:INFO:None
2023-10-16 10:01:15,497:INFO:Set up data.
2023-10-16 10:01:15,542:INFO:Set up folding strategy.
2023-10-16 10:01:15,542:INFO:Set up train/test split.
2023-10-16 10:01:15,583:INFO:Set up index.
2023-10-16 10:01:15,584:INFO:Assigning column types.
2023-10-16 10:01:15,600:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-10-16 10:01:16,099:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-16 10:01:16,114:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-10-16 10:01:16,488:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:16,494:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:17,133:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-10-16 10:01:17,138:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-10-16 10:01:17,426:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:17,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:17,430:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-10-16 10:01:17,999:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-10-16 10:01:18,455:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:18,456:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:18,969:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-10-16 10:01:19,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:19,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:19,291:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-10-16 10:01:20,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:20,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:20,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:20,920:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:20,928:INFO:Preparing preprocessing pipeline...
2023-10-16 10:01:20,934:INFO:Set up label encoding.
2023-10-16 10:01:20,935:INFO:Set up iterative imputation.
2023-10-16 10:01:20,938:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-10-16 10:01:21,001:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-10-16 10:01:21,070:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-10-16 10:01:21,787:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-10-16 10:01:22,282:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:22,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:23,032:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:23,034:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:23,095:INFO:Set up encoding of ordinal features.
2023-10-16 10:01:23,117:INFO:Set up encoding of categorical features.
2023-10-16 10:01:23,118:INFO:Set up column transformation.
2023-10-16 10:01:23,118:INFO:Set up feature normalization.
2023-10-16 10:01:24,052:INFO:Finished creating preprocessing pipeline.
2023-10-16 10:01:24,477:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\clabc\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbd...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2023-10-16 10:01:24,478:INFO:Creating final display dataframe.
2023-10-16 10:01:25,059:INFO:Setup _display_container:                         Description                   Value
0                        Session id                       0
1                            Target            Segmentation
2                       Target type              Multiclass
3                    Target mapping  A: 0, B: 1, C: 2, D: 3
4               Original data shape              (7261, 10)
5            Transformed data shape              (7261, 20)
6       Transformed train set shape              (5082, 20)
7        Transformed test set shape              (2179, 20)
8                  Ordinal features                       3
9                  Numeric features                       3
10             Categorical features                       6
11                       Preprocess                    True
12                  Imputation type               iterative
13  Iterative imputation iterations                       5
14        Numeric iterative imputer                lightgbm
15    Categorical iterative imputer                lightgbm
16         Maximum one-hot encoding                      25
17                  Encoding method                    None
18                   Transformation                    True
19            Transformation method             yeo-johnson
20                        Normalize                    True
21                 Normalize method                  zscore
22                   Fold Generator         StratifiedKFold
23                      Fold Number                      10
24                         CPU Jobs                      -1
25                          Use GPU                   False
26                   Log Experiment                   False
27                  Experiment Name        clf-default-name
28                              USI                    7bb0
2023-10-16 10:01:25,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:25,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:26,429:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:26,430:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-10-16 10:01:26,433:INFO:setup() successfully completed in 11.2s...............
2023-10-16 10:01:26,676:INFO:Initializing compare_models()
2023-10-16 10:01:26,676:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, include=None, fold=10, round=4, cross_validation=True, sort=Accuracy, n_select=3, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, 'include': None, 'exclude': None, 'fold': 10, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 3, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-10-16 10:01:26,677:INFO:Checking exceptions
2023-10-16 10:01:26,692:INFO:Preparing display monitor
2023-10-16 10:01:26,792:INFO:Initializing Logistic Regression
2023-10-16 10:01:26,792:INFO:Total runtime is 0.0 minutes
2023-10-16 10:01:26,808:INFO:SubProcess create_model() called ==================================
2023-10-16 10:01:26,809:INFO:Initializing create_model()
2023-10-16 10:01:26,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000245630D2740>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:01:26,810:INFO:Checking exceptions
2023-10-16 10:01:26,810:INFO:Importing libraries
2023-10-16 10:01:26,811:INFO:Copying training dataset
2023-10-16 10:01:26,840:INFO:Defining folds
2023-10-16 10:01:26,840:INFO:Declaring metric variables
2023-10-16 10:01:26,849:INFO:Importing untrained model
2023-10-16 10:01:26,865:INFO:Logistic Regression Imported successfully
2023-10-16 10:01:26,893:INFO:Starting cross validation
2023-10-16 10:01:26,901:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:01:56,329:INFO:Calculating mean and std
2023-10-16 10:01:56,336:INFO:Creating metrics dataframe
2023-10-16 10:01:56,352:INFO:Uploading results into container
2023-10-16 10:01:56,354:INFO:Uploading model into container now
2023-10-16 10:01:56,356:INFO:_master_model_container: 1
2023-10-16 10:01:56,356:INFO:_display_container: 2
2023-10-16 10:01:56,358:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-10-16 10:01:56,359:INFO:create_model() successfully completed......................................
2023-10-16 10:01:56,641:INFO:SubProcess create_model() end ==================================
2023-10-16 10:01:56,641:INFO:Creating metrics dataframe
2023-10-16 10:01:56,720:INFO:Initializing K Neighbors Classifier
2023-10-16 10:01:56,720:INFO:Total runtime is 0.4988030115763346 minutes
2023-10-16 10:01:56,735:INFO:SubProcess create_model() called ==================================
2023-10-16 10:01:56,737:INFO:Initializing create_model()
2023-10-16 10:01:56,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000245630D2740>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:01:56,737:INFO:Checking exceptions
2023-10-16 10:01:56,738:INFO:Importing libraries
2023-10-16 10:01:56,738:INFO:Copying training dataset
2023-10-16 10:01:56,772:INFO:Defining folds
2023-10-16 10:01:56,772:INFO:Declaring metric variables
2023-10-16 10:01:56,787:INFO:Importing untrained model
2023-10-16 10:01:56,808:INFO:K Neighbors Classifier Imported successfully
2023-10-16 10:01:56,852:INFO:Starting cross validation
2023-10-16 10:01:56,862:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:02:06,402:INFO:Calculating mean and std
2023-10-16 10:02:06,406:INFO:Creating metrics dataframe
2023-10-16 10:02:06,425:INFO:Uploading results into container
2023-10-16 10:02:06,428:INFO:Uploading model into container now
2023-10-16 10:02:06,429:INFO:_master_model_container: 2
2023-10-16 10:02:06,429:INFO:_display_container: 2
2023-10-16 10:02:06,429:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-10-16 10:02:06,430:INFO:create_model() successfully completed......................................
2023-10-16 10:02:06,575:INFO:SubProcess create_model() end ==================================
2023-10-16 10:02:06,575:INFO:Creating metrics dataframe
2023-10-16 10:02:06,605:INFO:Initializing Naive Bayes
2023-10-16 10:02:06,606:INFO:Total runtime is 0.6635720332463582 minutes
2023-10-16 10:02:06,620:INFO:SubProcess create_model() called ==================================
2023-10-16 10:02:06,621:INFO:Initializing create_model()
2023-10-16 10:02:06,622:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000245630D2740>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:02:06,622:INFO:Checking exceptions
2023-10-16 10:02:06,623:INFO:Importing libraries
2023-10-16 10:02:06,623:INFO:Copying training dataset
2023-10-16 10:02:06,642:INFO:Defining folds
2023-10-16 10:02:06,642:INFO:Declaring metric variables
2023-10-16 10:02:06,657:INFO:Importing untrained model
2023-10-16 10:02:06,670:INFO:Naive Bayes Imported successfully
2023-10-16 10:02:06,704:INFO:Starting cross validation
2023-10-16 10:02:06,716:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:02:12,384:INFO:Calculating mean and std
2023-10-16 10:02:12,387:INFO:Creating metrics dataframe
2023-10-16 10:02:12,405:INFO:Uploading results into container
2023-10-16 10:02:12,407:INFO:Uploading model into container now
2023-10-16 10:02:12,408:INFO:_master_model_container: 3
2023-10-16 10:02:12,409:INFO:_display_container: 2
2023-10-16 10:02:12,409:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-10-16 10:02:12,409:INFO:create_model() successfully completed......................................
2023-10-16 10:02:12,543:INFO:SubProcess create_model() end ==================================
2023-10-16 10:02:12,543:INFO:Creating metrics dataframe
2023-10-16 10:02:12,573:INFO:Initializing Decision Tree Classifier
2023-10-16 10:02:12,574:INFO:Total runtime is 0.7630449851353962 minutes
2023-10-16 10:02:12,589:INFO:SubProcess create_model() called ==================================
2023-10-16 10:02:12,590:INFO:Initializing create_model()
2023-10-16 10:02:12,591:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000245630D2740>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:02:12,591:INFO:Checking exceptions
2023-10-16 10:02:12,591:INFO:Importing libraries
2023-10-16 10:02:12,591:INFO:Copying training dataset
2023-10-16 10:02:12,610:INFO:Defining folds
2023-10-16 10:02:12,611:INFO:Declaring metric variables
2023-10-16 10:02:12,626:INFO:Importing untrained model
2023-10-16 10:02:12,642:INFO:Decision Tree Classifier Imported successfully
2023-10-16 10:02:12,669:INFO:Starting cross validation
2023-10-16 10:02:12,677:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:02:17,966:INFO:Calculating mean and std
2023-10-16 10:02:17,969:INFO:Creating metrics dataframe
2023-10-16 10:02:17,987:INFO:Uploading results into container
2023-10-16 10:02:17,990:INFO:Uploading model into container now
2023-10-16 10:02:17,991:INFO:_master_model_container: 4
2023-10-16 10:02:17,991:INFO:_display_container: 2
2023-10-16 10:02:17,993:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=0, splitter='best')
2023-10-16 10:02:17,993:INFO:create_model() successfully completed......................................
2023-10-16 10:02:18,221:INFO:SubProcess create_model() end ==================================
2023-10-16 10:02:18,221:INFO:Creating metrics dataframe
2023-10-16 10:02:18,280:INFO:Initializing SVM - Linear Kernel
2023-10-16 10:02:18,280:INFO:Total runtime is 0.85814604361852 minutes
2023-10-16 10:02:18,304:INFO:SubProcess create_model() called ==================================
2023-10-16 10:02:18,305:INFO:Initializing create_model()
2023-10-16 10:02:18,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000245630D2740>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:02:18,306:INFO:Checking exceptions
2023-10-16 10:02:18,306:INFO:Importing libraries
2023-10-16 10:02:18,306:INFO:Copying training dataset
2023-10-16 10:02:18,336:INFO:Defining folds
2023-10-16 10:02:18,338:INFO:Declaring metric variables
2023-10-16 10:02:18,360:INFO:Importing untrained model
2023-10-16 10:02:18,375:INFO:SVM - Linear Kernel Imported successfully
2023-10-16 10:02:18,404:INFO:Starting cross validation
2023-10-16 10:02:18,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:02:20,955:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 10:02:21,068:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 10:02:21,081:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 10:02:21,397:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 10:02:23,321:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 10:02:23,508:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 10:02:23,617:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 10:02:23,831:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 10:02:25,038:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 10:02:25,136:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1238, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-10-16 10:02:25,153:INFO:Calculating mean and std
2023-10-16 10:02:25,157:INFO:Creating metrics dataframe
2023-10-16 10:02:25,171:INFO:Uploading results into container
2023-10-16 10:02:25,173:INFO:Uploading model into container now
2023-10-16 10:02:25,174:INFO:_master_model_container: 5
2023-10-16 10:02:25,174:INFO:_display_container: 2
2023-10-16 10:02:25,176:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=0, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-10-16 10:02:25,176:INFO:create_model() successfully completed......................................
2023-10-16 10:02:25,310:INFO:SubProcess create_model() end ==================================
2023-10-16 10:02:25,310:INFO:Creating metrics dataframe
2023-10-16 10:02:25,341:INFO:Initializing Ridge Classifier
2023-10-16 10:02:25,341:INFO:Total runtime is 0.9758187651634215 minutes
2023-10-16 10:02:25,355:INFO:SubProcess create_model() called ==================================
2023-10-16 10:02:25,356:INFO:Initializing create_model()
2023-10-16 10:02:25,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000245630D2740>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:02:25,356:INFO:Checking exceptions
2023-10-16 10:02:25,357:INFO:Importing libraries
2023-10-16 10:02:25,357:INFO:Copying training dataset
2023-10-16 10:02:25,376:INFO:Defining folds
2023-10-16 10:02:25,376:INFO:Declaring metric variables
2023-10-16 10:02:25,391:INFO:Importing untrained model
2023-10-16 10:02:25,405:INFO:Ridge Classifier Imported successfully
2023-10-16 10:02:25,428:INFO:Starting cross validation
2023-10-16 10:02:25,440:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:02:27,584:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 10:02:27,586:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 10:02:27,606:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 10:02:27,713:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 10:02:29,254:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 10:02:29,282:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 10:02:29,393:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 10:02:29,426:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 10:02:30,420:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 10:02:30,465:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 75, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 302, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_scorer.py", line 77, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-10-16 10:02:30,484:INFO:Calculating mean and std
2023-10-16 10:02:30,487:INFO:Creating metrics dataframe
2023-10-16 10:02:30,500:INFO:Uploading results into container
2023-10-16 10:02:30,502:INFO:Uploading model into container now
2023-10-16 10:02:30,504:INFO:_master_model_container: 6
2023-10-16 10:02:30,504:INFO:_display_container: 2
2023-10-16 10:02:30,505:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=0, solver='auto',
                tol=0.0001)
2023-10-16 10:02:30,506:INFO:create_model() successfully completed......................................
2023-10-16 10:02:30,650:INFO:SubProcess create_model() end ==================================
2023-10-16 10:02:30,652:INFO:Creating metrics dataframe
2023-10-16 10:02:30,691:INFO:Initializing Random Forest Classifier
2023-10-16 10:02:30,691:INFO:Total runtime is 1.0649921456972757 minutes
2023-10-16 10:02:30,705:INFO:SubProcess create_model() called ==================================
2023-10-16 10:02:30,706:INFO:Initializing create_model()
2023-10-16 10:02:30,707:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000245630D2740>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:02:30,707:INFO:Checking exceptions
2023-10-16 10:02:30,707:INFO:Importing libraries
2023-10-16 10:02:30,708:INFO:Copying training dataset
2023-10-16 10:02:30,730:INFO:Defining folds
2023-10-16 10:02:30,730:INFO:Declaring metric variables
2023-10-16 10:02:30,747:INFO:Importing untrained model
2023-10-16 10:02:30,764:INFO:Random Forest Classifier Imported successfully
2023-10-16 10:02:30,791:INFO:Starting cross validation
2023-10-16 10:02:30,805:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:02:46,764:INFO:Calculating mean and std
2023-10-16 10:02:46,768:INFO:Creating metrics dataframe
2023-10-16 10:02:46,788:INFO:Uploading results into container
2023-10-16 10:02:46,790:INFO:Uploading model into container now
2023-10-16 10:02:46,790:INFO:_master_model_container: 7
2023-10-16 10:02:46,791:INFO:_display_container: 2
2023-10-16 10:02:46,791:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=0, verbose=0, warm_start=False)
2023-10-16 10:02:46,792:INFO:create_model() successfully completed......................................
2023-10-16 10:02:46,940:INFO:SubProcess create_model() end ==================================
2023-10-16 10:02:46,940:INFO:Creating metrics dataframe
2023-10-16 10:02:46,980:INFO:Initializing Quadratic Discriminant Analysis
2023-10-16 10:02:46,980:INFO:Total runtime is 1.336472471555074 minutes
2023-10-16 10:02:46,994:INFO:SubProcess create_model() called ==================================
2023-10-16 10:02:46,995:INFO:Initializing create_model()
2023-10-16 10:02:46,995:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000245630D2740>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:02:46,996:INFO:Checking exceptions
2023-10-16 10:02:46,996:INFO:Importing libraries
2023-10-16 10:02:46,997:INFO:Copying training dataset
2023-10-16 10:02:47,018:INFO:Defining folds
2023-10-16 10:02:47,018:INFO:Declaring metric variables
2023-10-16 10:02:47,034:INFO:Importing untrained model
2023-10-16 10:02:47,048:INFO:Quadratic Discriminant Analysis Imported successfully
2023-10-16 10:02:47,071:INFO:Starting cross validation
2023-10-16 10:02:47,081:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:02:49,134:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 10:02:49,236:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 10:02:49,318:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 10:02:49,319:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 10:02:52,142:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 10:02:52,175:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 10:02:52,211:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 10:02:52,241:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 10:02:54,717:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 10:02:54,720:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-10-16 10:02:55,007:INFO:Calculating mean and std
2023-10-16 10:02:55,014:INFO:Creating metrics dataframe
2023-10-16 10:02:55,027:INFO:Uploading results into container
2023-10-16 10:02:55,030:INFO:Uploading model into container now
2023-10-16 10:02:55,032:INFO:_master_model_container: 8
2023-10-16 10:02:55,032:INFO:_display_container: 2
2023-10-16 10:02:55,033:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-10-16 10:02:55,034:INFO:create_model() successfully completed......................................
2023-10-16 10:02:55,198:INFO:SubProcess create_model() end ==================================
2023-10-16 10:02:55,198:INFO:Creating metrics dataframe
2023-10-16 10:02:55,240:INFO:Initializing Ada Boost Classifier
2023-10-16 10:02:55,240:INFO:Total runtime is 1.4741445104281108 minutes
2023-10-16 10:02:55,255:INFO:SubProcess create_model() called ==================================
2023-10-16 10:02:55,256:INFO:Initializing create_model()
2023-10-16 10:02:55,257:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000245630D2740>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:02:55,257:INFO:Checking exceptions
2023-10-16 10:02:55,257:INFO:Importing libraries
2023-10-16 10:02:55,257:INFO:Copying training dataset
2023-10-16 10:02:55,282:INFO:Defining folds
2023-10-16 10:02:55,282:INFO:Declaring metric variables
2023-10-16 10:02:55,300:INFO:Importing untrained model
2023-10-16 10:02:55,315:INFO:Ada Boost Classifier Imported successfully
2023-10-16 10:02:55,338:INFO:Starting cross validation
2023-10-16 10:02:55,352:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:03:05,648:INFO:Calculating mean and std
2023-10-16 10:03:05,651:INFO:Creating metrics dataframe
2023-10-16 10:03:05,665:INFO:Uploading results into container
2023-10-16 10:03:05,669:INFO:Uploading model into container now
2023-10-16 10:03:05,671:INFO:_master_model_container: 9
2023-10-16 10:03:05,672:INFO:_display_container: 2
2023-10-16 10:03:05,673:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=0)
2023-10-16 10:03:05,673:INFO:create_model() successfully completed......................................
2023-10-16 10:03:05,816:INFO:SubProcess create_model() end ==================================
2023-10-16 10:03:05,817:INFO:Creating metrics dataframe
2023-10-16 10:03:05,892:INFO:Initializing Gradient Boosting Classifier
2023-10-16 10:03:05,892:INFO:Total runtime is 1.6516703406969706 minutes
2023-10-16 10:03:05,907:INFO:SubProcess create_model() called ==================================
2023-10-16 10:03:05,908:INFO:Initializing create_model()
2023-10-16 10:03:05,908:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000245630D2740>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:03:05,912:INFO:Checking exceptions
2023-10-16 10:03:05,913:INFO:Importing libraries
2023-10-16 10:03:05,913:INFO:Copying training dataset
2023-10-16 10:03:05,954:INFO:Defining folds
2023-10-16 10:03:05,955:INFO:Declaring metric variables
2023-10-16 10:03:05,971:INFO:Importing untrained model
2023-10-16 10:03:05,983:INFO:Gradient Boosting Classifier Imported successfully
2023-10-16 10:03:06,021:INFO:Starting cross validation
2023-10-16 10:03:06,033:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:03:47,645:INFO:Calculating mean and std
2023-10-16 10:03:47,649:INFO:Creating metrics dataframe
2023-10-16 10:03:47,668:INFO:Uploading results into container
2023-10-16 10:03:47,670:INFO:Uploading model into container now
2023-10-16 10:03:47,673:INFO:_master_model_container: 10
2023-10-16 10:03:47,673:INFO:_display_container: 2
2023-10-16 10:03:47,675:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=0, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-10-16 10:03:47,675:INFO:create_model() successfully completed......................................
2023-10-16 10:03:47,847:INFO:SubProcess create_model() end ==================================
2023-10-16 10:03:47,848:INFO:Creating metrics dataframe
2023-10-16 10:03:47,902:INFO:Initializing Linear Discriminant Analysis
2023-10-16 10:03:47,903:INFO:Total runtime is 2.351852341492971 minutes
2023-10-16 10:03:47,918:INFO:SubProcess create_model() called ==================================
2023-10-16 10:03:47,919:INFO:Initializing create_model()
2023-10-16 10:03:47,920:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000245630D2740>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:03:47,920:INFO:Checking exceptions
2023-10-16 10:03:47,920:INFO:Importing libraries
2023-10-16 10:03:47,920:INFO:Copying training dataset
2023-10-16 10:03:47,944:INFO:Defining folds
2023-10-16 10:03:47,945:INFO:Declaring metric variables
2023-10-16 10:03:47,954:INFO:Importing untrained model
2023-10-16 10:03:47,966:INFO:Linear Discriminant Analysis Imported successfully
2023-10-16 10:03:47,995:INFO:Starting cross validation
2023-10-16 10:03:48,007:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:03:54,853:INFO:Calculating mean and std
2023-10-16 10:03:54,863:INFO:Creating metrics dataframe
2023-10-16 10:03:54,880:INFO:Uploading results into container
2023-10-16 10:03:54,883:INFO:Uploading model into container now
2023-10-16 10:03:54,884:INFO:_master_model_container: 11
2023-10-16 10:03:54,885:INFO:_display_container: 2
2023-10-16 10:03:54,886:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-10-16 10:03:54,886:INFO:create_model() successfully completed......................................
2023-10-16 10:03:55,104:INFO:SubProcess create_model() end ==================================
2023-10-16 10:03:55,105:INFO:Creating metrics dataframe
2023-10-16 10:03:55,165:INFO:Initializing Extra Trees Classifier
2023-10-16 10:03:55,166:INFO:Total runtime is 2.472883951663971 minutes
2023-10-16 10:03:55,182:INFO:SubProcess create_model() called ==================================
2023-10-16 10:03:55,183:INFO:Initializing create_model()
2023-10-16 10:03:55,183:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000245630D2740>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:03:55,184:INFO:Checking exceptions
2023-10-16 10:03:55,184:INFO:Importing libraries
2023-10-16 10:03:55,184:INFO:Copying training dataset
2023-10-16 10:03:55,216:INFO:Defining folds
2023-10-16 10:03:55,217:INFO:Declaring metric variables
2023-10-16 10:03:55,234:INFO:Importing untrained model
2023-10-16 10:03:55,251:INFO:Extra Trees Classifier Imported successfully
2023-10-16 10:03:55,301:INFO:Starting cross validation
2023-10-16 10:03:55,319:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:04:11,598:INFO:Calculating mean and std
2023-10-16 10:04:11,602:INFO:Creating metrics dataframe
2023-10-16 10:04:11,617:INFO:Uploading results into container
2023-10-16 10:04:11,620:INFO:Uploading model into container now
2023-10-16 10:04:11,621:INFO:_master_model_container: 12
2023-10-16 10:04:11,621:INFO:_display_container: 2
2023-10-16 10:04:11,623:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=0, verbose=0, warm_start=False)
2023-10-16 10:04:11,624:INFO:create_model() successfully completed......................................
2023-10-16 10:04:11,839:INFO:SubProcess create_model() end ==================================
2023-10-16 10:04:11,840:INFO:Creating metrics dataframe
2023-10-16 10:04:11,908:INFO:Initializing Light Gradient Boosting Machine
2023-10-16 10:04:11,909:INFO:Total runtime is 2.751958513259888 minutes
2023-10-16 10:04:11,924:INFO:SubProcess create_model() called ==================================
2023-10-16 10:04:11,926:INFO:Initializing create_model()
2023-10-16 10:04:11,926:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000245630D2740>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:04:11,927:INFO:Checking exceptions
2023-10-16 10:04:11,927:INFO:Importing libraries
2023-10-16 10:04:11,927:INFO:Copying training dataset
2023-10-16 10:04:11,963:INFO:Defining folds
2023-10-16 10:04:11,963:INFO:Declaring metric variables
2023-10-16 10:04:11,979:INFO:Importing untrained model
2023-10-16 10:04:12,010:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-16 10:04:12,057:INFO:Starting cross validation
2023-10-16 10:04:12,068:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:04:31,216:INFO:Calculating mean and std
2023-10-16 10:04:31,223:INFO:Creating metrics dataframe
2023-10-16 10:04:31,242:INFO:Uploading results into container
2023-10-16 10:04:31,245:INFO:Uploading model into container now
2023-10-16 10:04:31,247:INFO:_master_model_container: 13
2023-10-16 10:04:31,247:INFO:_display_container: 2
2023-10-16 10:04:31,249:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-10-16 10:04:31,250:INFO:create_model() successfully completed......................................
2023-10-16 10:04:31,437:INFO:SubProcess create_model() end ==================================
2023-10-16 10:04:31,437:INFO:Creating metrics dataframe
2023-10-16 10:04:31,499:INFO:Initializing Dummy Classifier
2023-10-16 10:04:31,500:INFO:Total runtime is 3.078473885854086 minutes
2023-10-16 10:04:31,516:INFO:SubProcess create_model() called ==================================
2023-10-16 10:04:31,517:INFO:Initializing create_model()
2023-10-16 10:04:31,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000245630D2740>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:04:31,518:INFO:Checking exceptions
2023-10-16 10:04:31,518:INFO:Importing libraries
2023-10-16 10:04:31,519:INFO:Copying training dataset
2023-10-16 10:04:31,546:INFO:Defining folds
2023-10-16 10:04:31,547:INFO:Declaring metric variables
2023-10-16 10:04:31,566:INFO:Importing untrained model
2023-10-16 10:04:31,581:INFO:Dummy Classifier Imported successfully
2023-10-16 10:04:31,623:INFO:Starting cross validation
2023-10-16 10:04:31,635:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:04:33,821:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 10:04:33,822:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 10:04:33,928:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 10:04:33,940:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 10:04:35,613:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 10:04:35,641:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 10:04:35,659:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 10:04:35,690:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 10:04:36,941:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 10:04:36,964:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-10-16 10:04:36,981:INFO:Calculating mean and std
2023-10-16 10:04:36,985:INFO:Creating metrics dataframe
2023-10-16 10:04:37,003:INFO:Uploading results into container
2023-10-16 10:04:37,008:INFO:Uploading model into container now
2023-10-16 10:04:37,010:INFO:_master_model_container: 14
2023-10-16 10:04:37,011:INFO:_display_container: 2
2023-10-16 10:04:37,012:INFO:DummyClassifier(constant=None, random_state=0, strategy='prior')
2023-10-16 10:04:37,013:INFO:create_model() successfully completed......................................
2023-10-16 10:04:37,197:INFO:SubProcess create_model() end ==================================
2023-10-16 10:04:37,197:INFO:Creating metrics dataframe
2023-10-16 10:04:37,305:INFO:Initializing create_model()
2023-10-16 10:04:37,305:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=0, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:04:37,305:INFO:Checking exceptions
2023-10-16 10:04:37,311:INFO:Importing libraries
2023-10-16 10:04:37,312:INFO:Copying training dataset
2023-10-16 10:04:37,335:INFO:Defining folds
2023-10-16 10:04:37,336:INFO:Declaring metric variables
2023-10-16 10:04:37,337:INFO:Importing untrained model
2023-10-16 10:04:37,338:INFO:Declaring custom model
2023-10-16 10:04:37,341:INFO:Gradient Boosting Classifier Imported successfully
2023-10-16 10:04:37,364:INFO:Cross validation set to False
2023-10-16 10:04:37,364:INFO:Fitting Model
2023-10-16 10:04:45,351:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=0, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-10-16 10:04:45,351:INFO:create_model() successfully completed......................................
2023-10-16 10:04:45,512:INFO:Initializing create_model()
2023-10-16 10:04:45,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:04:45,514:INFO:Checking exceptions
2023-10-16 10:04:45,521:INFO:Importing libraries
2023-10-16 10:04:45,522:INFO:Copying training dataset
2023-10-16 10:04:45,558:INFO:Defining folds
2023-10-16 10:04:45,558:INFO:Declaring metric variables
2023-10-16 10:04:45,559:INFO:Importing untrained model
2023-10-16 10:04:45,559:INFO:Declaring custom model
2023-10-16 10:04:45,560:INFO:Ada Boost Classifier Imported successfully
2023-10-16 10:04:45,571:INFO:Cross validation set to False
2023-10-16 10:04:45,571:INFO:Fitting Model
2023-10-16 10:04:46,883:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=0)
2023-10-16 10:04:46,883:INFO:create_model() successfully completed......................................
2023-10-16 10:04:47,048:INFO:Initializing create_model()
2023-10-16 10:04:47,049:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:04:47,050:INFO:Checking exceptions
2023-10-16 10:04:47,057:INFO:Importing libraries
2023-10-16 10:04:47,057:INFO:Copying training dataset
2023-10-16 10:04:47,079:INFO:Defining folds
2023-10-16 10:04:47,079:INFO:Declaring metric variables
2023-10-16 10:04:47,080:INFO:Importing untrained model
2023-10-16 10:04:47,080:INFO:Declaring custom model
2023-10-16 10:04:47,083:INFO:Light Gradient Boosting Machine Imported successfully
2023-10-16 10:04:47,093:INFO:Cross validation set to False
2023-10-16 10:04:47,094:INFO:Fitting Model
2023-10-16 10:04:47,811:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.001683 seconds.
2023-10-16 10:04:47,812:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-10-16 10:04:47,812:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-10-16 10:04:47,813:INFO:[LightGBM] [Info] Total Bins 142
2023-10-16 10:04:47,813:INFO:[LightGBM] [Info] Number of data points in the train set: 5082, number of used features: 19
2023-10-16 10:04:47,815:INFO:[LightGBM] [Info] Start training from score -1.409787
2023-10-16 10:04:47,815:INFO:[LightGBM] [Info] Start training from score -1.479874
2023-10-16 10:04:47,815:INFO:[LightGBM] [Info] Start training from score -1.401762
2023-10-16 10:04:47,816:INFO:[LightGBM] [Info] Start training from score -1.265935
2023-10-16 10:04:49,104:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-10-16 10:04:49,104:INFO:create_model() successfully completed......................................
2023-10-16 10:04:49,418:INFO:_master_model_container: 14
2023-10-16 10:04:49,419:INFO:_display_container: 2
2023-10-16 10:04:49,425:INFO:[GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=0, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=0), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=0, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)]
2023-10-16 10:04:49,425:INFO:compare_models() successfully completed......................................
2023-10-16 10:04:49,794:INFO:Initializing create_model()
2023-10-16 10:04:49,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:04:49,795:INFO:Checking exceptions
2023-10-16 10:04:49,845:INFO:Importing libraries
2023-10-16 10:04:49,846:INFO:Copying training dataset
2023-10-16 10:04:49,881:INFO:Defining folds
2023-10-16 10:04:49,881:INFO:Declaring metric variables
2023-10-16 10:04:49,899:INFO:Importing untrained model
2023-10-16 10:04:49,917:INFO:Logistic Regression Imported successfully
2023-10-16 10:04:49,948:INFO:Starting cross validation
2023-10-16 10:04:49,960:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:04:55,737:INFO:Calculating mean and std
2023-10-16 10:04:55,740:INFO:Creating metrics dataframe
2023-10-16 10:04:55,767:INFO:Finalizing model
2023-10-16 10:04:56,571:INFO:Uploading results into container
2023-10-16 10:04:56,573:INFO:Uploading model into container now
2023-10-16 10:04:56,622:INFO:_master_model_container: 15
2023-10-16 10:04:56,623:INFO:_display_container: 3
2023-10-16 10:04:56,624:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-10-16 10:04:56,624:INFO:create_model() successfully completed......................................
2023-10-16 10:04:57,086:INFO:Initializing tune_model()
2023-10-16 10:04:57,087:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=10, round=4, n_iter=10, custom_grid=None, optimize=Precision, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>)
2023-10-16 10:04:57,087:INFO:Checking exceptions
2023-10-16 10:04:57,155:INFO:Copying training dataset
2023-10-16 10:04:57,169:INFO:Checking base model
2023-10-16 10:04:57,170:INFO:Base model : Logistic Regression
2023-10-16 10:04:57,183:INFO:Declaring metric variables
2023-10-16 10:04:57,204:INFO:Defining Hyperparameters
2023-10-16 10:04:57,381:INFO:Tuning with n_jobs=-1
2023-10-16 10:04:57,382:INFO:Initializing RandomizedSearchCV
2023-10-16 10:04:59,664:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:04:59,739:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:04:59,785:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:04:59,808:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:01,394:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:01,506:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:01,544:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:01,601:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:03,141:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:03,253:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:03,357:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:03,361:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:04,943:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:04,962:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:05,099:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:05,124:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:06,789:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:06,789:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:06,873:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:06,913:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:08,568:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:08,578:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:08,702:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:08,719:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:10,298:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:10,361:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:10,365:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:10,436:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:13,370:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:13,379:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:13,431:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:13,685:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:16,505:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:16,535:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:16,671:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:16,903:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:19,470:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:19,532:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:19,686:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:19,977:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:21,770:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:21,842:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:21,930:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:22,038:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:24,242:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:24,296:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:24,310:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:24,529:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:26,771:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:26,846:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:26,847:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:27,022:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:29,072:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:29,080:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:29,100:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:29,296:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:31,270:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:31,327:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:31,418:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:31,447:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:33,437:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:33,534:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:33,555:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:33,651:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:35,942:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:36,053:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:36,063:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:36,064:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:38,813:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:38,868:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:38,878:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:38,973:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:41,692:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:41,739:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:41,783:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:41,794:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:44,023:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:44,086:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:44,147:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:44,171:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:45,793:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:45,832:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:45,875:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:45,973:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:47,584:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:47,656:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:47,732:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:47,744:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:49,415:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:49,416:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:49,486:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:49,538:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:51,160:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:51,188:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:51,221:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:51,287:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:52,863:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:52,901:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:52,953:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:52,996:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-10-16 10:05:53,010:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 9.825}
2023-10-16 10:05:53,013:INFO:Hyperparameter search completed
2023-10-16 10:05:53,014:INFO:SubProcess create_model() called ==================================
2023-10-16 10:05:53,016:INFO:Initializing create_model()
2023-10-16 10:05:53,017:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002456347FE50>, model_only=True, return_train_score=False, kwargs={'class_weight': 'balanced', 'C': 9.825})
2023-10-16 10:05:53,017:INFO:Checking exceptions
2023-10-16 10:05:53,019:INFO:Importing libraries
2023-10-16 10:05:53,019:INFO:Copying training dataset
2023-10-16 10:05:53,044:INFO:Defining folds
2023-10-16 10:05:53,044:INFO:Declaring metric variables
2023-10-16 10:05:53,058:INFO:Importing untrained model
2023-10-16 10:05:53,058:INFO:Declaring custom model
2023-10-16 10:05:53,074:INFO:Logistic Regression Imported successfully
2023-10-16 10:05:53,108:INFO:Starting cross validation
2023-10-16 10:05:53,120:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:05:57,966:INFO:Calculating mean and std
2023-10-16 10:05:57,971:INFO:Creating metrics dataframe
2023-10-16 10:05:57,996:INFO:Finalizing model
2023-10-16 10:05:59,034:INFO:Uploading results into container
2023-10-16 10:05:59,038:INFO:Uploading model into container now
2023-10-16 10:05:59,040:INFO:_master_model_container: 16
2023-10-16 10:05:59,040:INFO:_display_container: 4
2023-10-16 10:05:59,042:INFO:LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-10-16 10:05:59,042:INFO:create_model() successfully completed......................................
2023-10-16 10:05:59,230:INFO:SubProcess create_model() end ==================================
2023-10-16 10:05:59,230:INFO:choose_better activated
2023-10-16 10:05:59,238:INFO:SubProcess create_model() called ==================================
2023-10-16 10:05:59,239:INFO:Initializing create_model()
2023-10-16 10:05:59,240:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:05:59,240:INFO:Checking exceptions
2023-10-16 10:05:59,249:INFO:Importing libraries
2023-10-16 10:05:59,249:INFO:Copying training dataset
2023-10-16 10:05:59,268:INFO:Defining folds
2023-10-16 10:05:59,269:INFO:Declaring metric variables
2023-10-16 10:05:59,269:INFO:Importing untrained model
2023-10-16 10:05:59,270:INFO:Declaring custom model
2023-10-16 10:05:59,272:INFO:Logistic Regression Imported successfully
2023-10-16 10:05:59,273:INFO:Starting cross validation
2023-10-16 10:05:59,280:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:06:04,199:INFO:Calculating mean and std
2023-10-16 10:06:04,200:INFO:Creating metrics dataframe
2023-10-16 10:06:04,204:INFO:Finalizing model
2023-10-16 10:06:04,963:INFO:Uploading results into container
2023-10-16 10:06:04,964:INFO:Uploading model into container now
2023-10-16 10:06:04,965:INFO:_master_model_container: 17
2023-10-16 10:06:04,965:INFO:_display_container: 5
2023-10-16 10:06:04,966:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-10-16 10:06:04,966:INFO:create_model() successfully completed......................................
2023-10-16 10:06:05,104:INFO:SubProcess create_model() end ==================================
2023-10-16 10:06:05,105:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Prec. is 0.489
2023-10-16 10:06:05,106:INFO:LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Prec. is 0.4959
2023-10-16 10:06:05,107:INFO:LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-10-16 10:06:05,107:INFO:choose_better completed
2023-10-16 10:06:05,147:INFO:_master_model_container: 17
2023-10-16 10:06:05,147:INFO:_display_container: 4
2023-10-16 10:06:05,149:INFO:LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-10-16 10:06:05,149:INFO:tune_model() successfully completed......................................
2023-10-16 10:06:05,513:INFO:Initializing ensemble_model()
2023-10-16 10:06:05,513:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=Bagging, fold=None, n_estimators=10, round=4, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-10-16 10:06:05,514:INFO:Checking exceptions
2023-10-16 10:06:05,576:INFO:Importing libraries
2023-10-16 10:06:05,576:INFO:Copying training dataset
2023-10-16 10:06:05,577:INFO:Checking base model
2023-10-16 10:06:05,578:INFO:Base model : Logistic Regression
2023-10-16 10:06:05,602:INFO:Importing untrained ensembler
2023-10-16 10:06:05,603:INFO:Ensemble method set to Bagging
2023-10-16 10:06:05,604:INFO:SubProcess create_model() called ==================================
2023-10-16 10:06:05,609:INFO:Initializing create_model()
2023-10-16 10:06:05,610:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=BaggingClassifier(base_estimator='deprecated', bootstrap=True,
                  bootstrap_features=False,
                  estimator=LogisticRegression(C=9.825, class_weight='balanced',
                                               dual=False, fit_intercept=True,
                                               intercept_scaling=1,
                                               l1_ratio=None, max_iter=1000,
                                               multi_class='auto', n_jobs=None,
                                               penalty='l2', random_state=0,
                                               solver='lbfgs', tol=0.0001,
                                               verbose=0, warm_start=False),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000245613D0F10>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:06:05,611:INFO:Checking exceptions
2023-10-16 10:06:05,611:INFO:Importing libraries
2023-10-16 10:06:05,612:INFO:Copying training dataset
2023-10-16 10:06:05,634:INFO:Defining folds
2023-10-16 10:06:05,635:INFO:Declaring metric variables
2023-10-16 10:06:05,648:INFO:Importing untrained model
2023-10-16 10:06:05,649:INFO:Declaring custom model
2023-10-16 10:06:05,665:INFO:Bagging Classifier Imported successfully
2023-10-16 10:06:05,692:INFO:Starting cross validation
2023-10-16 10:06:05,702:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:06:18,378:INFO:Calculating mean and std
2023-10-16 10:06:18,381:INFO:Creating metrics dataframe
2023-10-16 10:06:18,403:INFO:Finalizing model
2023-10-16 10:06:19,921:INFO:Uploading results into container
2023-10-16 10:06:19,923:INFO:Uploading model into container now
2023-10-16 10:06:19,927:INFO:_master_model_container: 18
2023-10-16 10:06:19,927:INFO:_display_container: 5
2023-10-16 10:06:19,931:INFO:BaggingClassifier(base_estimator='deprecated', bootstrap=True,
                  bootstrap_features=False,
                  estimator=LogisticRegression(C=9.825, class_weight='balanced',
                                               dual=False, fit_intercept=True,
                                               intercept_scaling=1,
                                               l1_ratio=None, max_iter=1000,
                                               multi_class='auto', n_jobs=None,
                                               penalty='l2', random_state=0,
                                               solver='lbfgs', tol=0.0001,
                                               verbose=0, warm_start=False),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)
2023-10-16 10:06:19,931:INFO:create_model() successfully completed......................................
2023-10-16 10:06:20,091:INFO:SubProcess create_model() end ==================================
2023-10-16 10:06:20,120:INFO:_master_model_container: 18
2023-10-16 10:06:20,121:INFO:_display_container: 5
2023-10-16 10:06:20,128:INFO:BaggingClassifier(base_estimator='deprecated', bootstrap=True,
                  bootstrap_features=False,
                  estimator=LogisticRegression(C=9.825, class_weight='balanced',
                                               dual=False, fit_intercept=True,
                                               intercept_scaling=1,
                                               l1_ratio=None, max_iter=1000,
                                               multi_class='auto', n_jobs=None,
                                               penalty='l2', random_state=0,
                                               solver='lbfgs', tol=0.0001,
                                               verbose=0, warm_start=False),
                  max_features=1.0, max_samples=1.0, n_estimators=10,
                  n_jobs=None, oob_score=False, random_state=0, verbose=0,
                  warm_start=False)
2023-10-16 10:06:20,129:INFO:ensemble_model() successfully completed......................................
2023-10-16 10:06:20,463:INFO:Initializing ensemble_model()
2023-10-16 10:06:20,463:INFO:ensemble_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), method=Boosting, fold=None, n_estimators=10, round=4, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-10-16 10:06:20,463:INFO:Checking exceptions
2023-10-16 10:06:21,165:INFO:Importing libraries
2023-10-16 10:06:21,165:INFO:Copying training dataset
2023-10-16 10:06:21,166:INFO:Checking base model
2023-10-16 10:06:21,167:INFO:Base model : Logistic Regression
2023-10-16 10:06:21,202:INFO:Importing untrained ensembler
2023-10-16 10:06:21,203:INFO:Ensemble method set to Boosting
2023-10-16 10:06:21,203:INFO:SubProcess create_model() called ==================================
2023-10-16 10:06:21,209:INFO:Initializing create_model()
2023-10-16 10:06:21,210:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=LogisticRegression(C=9.825,
                                                class_weight='balanced',
                                                dual=False, fit_intercept=True,
                                                intercept_scaling=1,
                                                l1_ratio=None, max_iter=1000,
                                                multi_class='auto', n_jobs=None,
                                                penalty='l2', random_state=0,
                                                solver='lbfgs', tol=0.0001,
                                                verbose=0, warm_start=False),
                   learning_rate=1.0, n_estimators=10, random_state=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000245631933D0>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:06:21,211:INFO:Checking exceptions
2023-10-16 10:06:21,211:INFO:Importing libraries
2023-10-16 10:06:21,211:INFO:Copying training dataset
2023-10-16 10:06:21,242:INFO:Defining folds
2023-10-16 10:06:21,243:INFO:Declaring metric variables
2023-10-16 10:06:21,256:INFO:Importing untrained model
2023-10-16 10:06:21,257:INFO:Declaring custom model
2023-10-16 10:06:21,274:INFO:Ada Boost Classifier Imported successfully
2023-10-16 10:06:21,305:INFO:Starting cross validation
2023-10-16 10:06:21,322:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:06:28,027:INFO:Calculating mean and std
2023-10-16 10:06:28,032:INFO:Creating metrics dataframe
2023-10-16 10:06:28,055:INFO:Finalizing model
2023-10-16 10:06:29,335:INFO:Uploading results into container
2023-10-16 10:06:29,338:INFO:Uploading model into container now
2023-10-16 10:06:29,339:INFO:_master_model_container: 19
2023-10-16 10:06:29,340:INFO:_display_container: 6
2023-10-16 10:06:29,344:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=LogisticRegression(C=9.825,
                                                class_weight='balanced',
                                                dual=False, fit_intercept=True,
                                                intercept_scaling=1,
                                                l1_ratio=None, max_iter=1000,
                                                multi_class='auto', n_jobs=None,
                                                penalty='l2', random_state=0,
                                                solver='lbfgs', tol=0.0001,
                                                verbose=0, warm_start=False),
                   learning_rate=1.0, n_estimators=10, random_state=0)
2023-10-16 10:06:29,344:INFO:create_model() successfully completed......................................
2023-10-16 10:06:29,492:INFO:SubProcess create_model() end ==================================
2023-10-16 10:06:29,523:INFO:_master_model_container: 19
2023-10-16 10:06:29,523:INFO:_display_container: 6
2023-10-16 10:06:29,528:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=LogisticRegression(C=9.825,
                                                class_weight='balanced',
                                                dual=False, fit_intercept=True,
                                                intercept_scaling=1,
                                                l1_ratio=None, max_iter=1000,
                                                multi_class='auto', n_jobs=None,
                                                penalty='l2', random_state=0,
                                                solver='lbfgs', tol=0.0001,
                                                verbose=0, warm_start=False),
                   learning_rate=1.0, n_estimators=10, random_state=0)
2023-10-16 10:06:29,528:INFO:ensemble_model() successfully completed......................................
2023-10-16 10:06:29,905:INFO:Initializing blend_models()
2023-10-16 10:06:29,906:INFO:blend_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator_list=[LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)], fold=None, round=4, choose_better=False, optimize=Accuracy, method=soft, weights=None, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-10-16 10:06:29,907:INFO:Checking exceptions
2023-10-16 10:06:29,961:INFO:Importing libraries
2023-10-16 10:06:29,962:INFO:Copying training dataset
2023-10-16 10:06:29,980:INFO:Getting model names
2023-10-16 10:06:30,000:INFO:SubProcess create_model() called ==================================
2023-10-16 10:06:30,008:INFO:Initializing create_model()
2023-10-16 10:06:30,008:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=9.825,
                                                 class_weight='balanced',
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=0, solver='lbfgs',
                                                 tol=0.0001, verbose=0,
                                                 warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000245631933D0>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:06:30,009:INFO:Checking exceptions
2023-10-16 10:06:30,009:INFO:Importing libraries
2023-10-16 10:06:30,009:INFO:Copying training dataset
2023-10-16 10:06:30,029:INFO:Defining folds
2023-10-16 10:06:30,029:INFO:Declaring metric variables
2023-10-16 10:06:30,047:INFO:Importing untrained model
2023-10-16 10:06:30,048:INFO:Declaring custom model
2023-10-16 10:06:30,062:INFO:Voting Classifier Imported successfully
2023-10-16 10:06:30,085:INFO:Starting cross validation
2023-10-16 10:06:30,100:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:06:35,522:INFO:Calculating mean and std
2023-10-16 10:06:35,525:INFO:Creating metrics dataframe
2023-10-16 10:06:35,546:INFO:Finalizing model
2023-10-16 10:06:36,328:INFO:Uploading results into container
2023-10-16 10:06:36,331:INFO:Uploading model into container now
2023-10-16 10:06:36,333:INFO:_master_model_container: 20
2023-10-16 10:06:36,333:INFO:_display_container: 7
2023-10-16 10:06:36,340:INFO:VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=9.825,
                                                 class_weight='balanced',
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=0, solver='lbfgs',
                                                 tol=0.0001, verbose=0,
                                                 warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2023-10-16 10:06:36,341:INFO:create_model() successfully completed......................................
2023-10-16 10:06:36,469:INFO:SubProcess create_model() end ==================================
2023-10-16 10:06:36,499:INFO:_master_model_container: 20
2023-10-16 10:06:36,499:INFO:_display_container: 7
2023-10-16 10:06:36,507:INFO:VotingClassifier(estimators=[('Logistic Regression',
                              LogisticRegression(C=9.825,
                                                 class_weight='balanced',
                                                 dual=False, fit_intercept=True,
                                                 intercept_scaling=1,
                                                 l1_ratio=None, max_iter=1000,
                                                 multi_class='auto',
                                                 n_jobs=None, penalty='l2',
                                                 random_state=0, solver='lbfgs',
                                                 tol=0.0001, verbose=0,
                                                 warm_start=False))],
                 flatten_transform=True, n_jobs=-1, verbose=False,
                 voting='soft', weights=None)
2023-10-16 10:06:36,507:INFO:blend_models() successfully completed......................................
2023-10-16 10:06:37,195:INFO:Initializing stack_models()
2023-10-16 10:06:37,195:INFO:stack_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator_list=[LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)], meta_model=None, meta_model_fold=5, fold=None, round=4, method=auto, restack=True, choose_better=False, optimize=Accuracy, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2023-10-16 10:06:37,195:INFO:Checking exceptions
2023-10-16 10:06:37,204:INFO:Defining meta model
2023-10-16 10:06:37,271:INFO:Getting model names
2023-10-16 10:06:37,272:INFO:[('Logistic Regression', LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False))]
2023-10-16 10:06:37,284:INFO:SubProcess create_model() called ==================================
2023-10-16 10:06:37,293:INFO:Initializing create_model()
2023-10-16 10:06:37,294:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002455FF0B520>, model_only=True, return_train_score=False, kwargs={})
2023-10-16 10:06:37,294:INFO:Checking exceptions
2023-10-16 10:06:37,295:INFO:Importing libraries
2023-10-16 10:06:37,295:INFO:Copying training dataset
2023-10-16 10:06:37,321:INFO:Defining folds
2023-10-16 10:06:37,321:INFO:Declaring metric variables
2023-10-16 10:06:37,335:INFO:Importing untrained model
2023-10-16 10:06:37,336:INFO:Declaring custom model
2023-10-16 10:06:37,354:INFO:Stacking Classifier Imported successfully
2023-10-16 10:06:37,378:INFO:Starting cross validation
2023-10-16 10:06:37,388:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-10-16 10:06:47,029:INFO:Calculating mean and std
2023-10-16 10:06:47,034:INFO:Creating metrics dataframe
2023-10-16 10:06:47,060:INFO:Finalizing model
2023-10-16 10:06:48,837:INFO:Uploading results into container
2023-10-16 10:06:48,841:INFO:Uploading model into container now
2023-10-16 10:06:48,847:INFO:_master_model_container: 21
2023-10-16 10:06:48,847:INFO:_display_container: 8
2023-10-16 10:06:48,881:INFO:StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-10-16 10:06:48,881:INFO:create_model() successfully completed......................................
2023-10-16 10:06:49,136:INFO:SubProcess create_model() end ==================================
2023-10-16 10:06:49,172:INFO:_master_model_container: 21
2023-10-16 10:06:49,173:INFO:_display_container: 8
2023-10-16 10:06:49,191:INFO:StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-10-16 10:06:49,194:INFO:stack_models() successfully completed......................................
2023-10-16 10:06:50,519:INFO:Initializing plot_model()
2023-10-16 10:06:50,520:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, system=True)
2023-10-16 10:06:50,520:INFO:Checking exceptions
2023-10-16 10:06:50,534:INFO:Preloading libraries
2023-10-16 10:06:50,536:INFO:Copying training dataset
2023-10-16 10:06:50,537:INFO:Plot type: auc
2023-10-16 10:06:50,994:INFO:Fitting Model
2023-10-16 10:06:50,996:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\base.py:409: UserWarning:

X does not have valid feature names, but LogisticRegression was fitted with feature names


2023-10-16 10:06:50,997:INFO:Scoring test/hold-out set
2023-10-16 10:06:51,801:INFO:Visual Rendered Successfully
2023-10-16 10:06:51,952:INFO:plot_model() successfully completed......................................
2023-10-16 10:06:52,550:INFO:Initializing plot_model()
2023-10-16 10:06:52,550:INFO:plot_model(plot=pr, fold=None, verbose=True, display=None, display_format=None, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, system=True)
2023-10-16 10:06:52,550:INFO:Checking exceptions
2023-10-16 10:06:52,564:INFO:Preloading libraries
2023-10-16 10:06:52,566:INFO:Copying training dataset
2023-10-16 10:06:52,566:INFO:Plot type: pr
2023-10-16 10:06:52,998:INFO:Fitting Model
2023-10-16 10:06:54,150:INFO:Scoring test/hold-out set
2023-10-16 10:06:54,782:INFO:Visual Rendered Successfully
2023-10-16 10:06:54,937:INFO:plot_model() successfully completed......................................
2023-10-16 10:06:55,300:INFO:Initializing plot_model()
2023-10-16 10:06:55,301:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, system=True)
2023-10-16 10:06:55,301:INFO:Checking exceptions
2023-10-16 10:06:55,317:INFO:Preloading libraries
2023-10-16 10:06:55,319:INFO:Copying training dataset
2023-10-16 10:06:55,319:INFO:Plot type: auc
2023-10-16 10:06:55,879:INFO:Fitting Model
2023-10-16 10:06:55,880:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\base.py:409: UserWarning:

X does not have valid feature names, but LogisticRegression was fitted with feature names


2023-10-16 10:06:55,883:INFO:Scoring test/hold-out set
2023-10-16 10:06:57,151:INFO:Visual Rendered Successfully
2023-10-16 10:06:57,498:INFO:plot_model() successfully completed......................................
2023-10-16 10:06:57,867:INFO:Initializing plot_model()
2023-10-16 10:06:57,868:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, system=True)
2023-10-16 10:06:57,868:INFO:Checking exceptions
2023-10-16 10:06:57,885:INFO:Preloading libraries
2023-10-16 10:06:57,886:INFO:Copying training dataset
2023-10-16 10:06:57,887:INFO:Plot type: confusion_matrix
2023-10-16 10:06:58,643:INFO:Fitting Model
2023-10-16 10:06:58,645:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\base.py:409: UserWarning:

X does not have valid feature names, but LogisticRegression was fitted with feature names


2023-10-16 10:06:58,647:INFO:Scoring test/hold-out set
2023-10-16 10:06:59,673:INFO:Visual Rendered Successfully
2023-10-16 10:06:59,825:INFO:plot_model() successfully completed......................................
2023-10-16 10:07:00,351:INFO:Initializing plot_model()
2023-10-16 10:07:00,351:INFO:plot_model(plot=learning, fold=None, verbose=True, display=None, display_format=None, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, system=True)
2023-10-16 10:07:00,352:INFO:Checking exceptions
2023-10-16 10:07:00,368:INFO:Preloading libraries
2023-10-16 10:07:00,369:INFO:Copying training dataset
2023-10-16 10:07:00,370:INFO:Plot type: learning
2023-10-16 10:07:02,630:INFO:Fitting Model
2023-10-16 10:07:24,508:INFO:Visual Rendered Successfully
2023-10-16 10:07:24,734:INFO:plot_model() successfully completed......................................
2023-10-16 10:07:25,015:INFO:Initializing plot_model()
2023-10-16 10:07:25,015:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=9.825, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, system=True)
2023-10-16 10:07:25,016:INFO:Checking exceptions
2023-10-16 10:07:25,031:INFO:Preloading libraries
2023-10-16 10:07:25,032:INFO:Copying training dataset
2023-10-16 10:07:25,033:INFO:Plot type: feature
2023-10-16 10:07:26,225:INFO:Visual Rendered Successfully
2023-10-16 10:07:26,385:INFO:plot_model() successfully completed......................................
2023-10-16 10:07:27,069:INFO:Initializing evaluate_model()
2023-10-16 10:07:27,069:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), fold=10, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2023-10-16 10:07:27,130:INFO:Initializing plot_model()
2023-10-16 10:07:27,131:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, system=True)
2023-10-16 10:07:27,131:INFO:Checking exceptions
2023-10-16 10:07:27,142:INFO:Preloading libraries
2023-10-16 10:07:27,144:INFO:Copying training dataset
2023-10-16 10:07:27,144:INFO:Plot type: pipeline
2023-10-16 10:07:28,617:INFO:Visual Rendered Successfully
2023-10-16 10:07:28,974:INFO:plot_model() successfully completed......................................
2023-10-16 10:07:29,461:INFO:Initializing finalize_model()
2023-10-16 10:07:29,461:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-10-16 10:07:29,470:INFO:Finalizing StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0)
2023-10-16 10:07:29,491:INFO:Initializing create_model()
2023-10-16 10:07:29,491:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-10-16 10:07:29,492:INFO:Checking exceptions
2023-10-16 10:07:29,497:INFO:Importing libraries
2023-10-16 10:07:29,498:INFO:Copying training dataset
2023-10-16 10:07:29,499:INFO:Defining folds
2023-10-16 10:07:29,499:INFO:Declaring metric variables
2023-10-16 10:07:29,500:INFO:Importing untrained model
2023-10-16 10:07:29,500:INFO:Declaring custom model
2023-10-16 10:07:29,504:INFO:Stacking Classifier Imported successfully
2023-10-16 10:07:29,514:INFO:Cross validation set to False
2023-10-16 10:07:29,515:INFO:Fitting Model
2023-10-16 10:07:32,914:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbdt',
                                                                                              class_weight=None,
                                                                                              colsample_bytree=1....
                                                                    verbose=0,
                                                                    warm_start=False))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=0,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=True,
                                    stack_method='auto', verbose=0))],
         verbose=False)
2023-10-16 10:07:32,915:INFO:create_model() successfully completed......................................
2023-10-16 10:07:33,065:INFO:_master_model_container: 21
2023-10-16 10:07:33,065:INFO:_display_container: 8
2023-10-16 10:07:33,224:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbdt',
                                                                                              class_weight=None,
                                                                                              colsample_bytree=1....
                                                                    verbose=0,
                                                                    warm_start=False))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=0,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=True,
                                    stack_method='auto', verbose=0))],
         verbose=False)
2023-10-16 10:07:33,224:INFO:finalize_model() successfully completed......................................
2023-10-16 10:07:33,566:INFO:Initializing predict_model()
2023-10-16 10:07:33,566:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=StackingClassifier(cv=5,
                   estimators=[('Logistic Regression',
                                LogisticRegression(C=9.825,
                                                   class_weight='balanced',
                                                   dual=False,
                                                   fit_intercept=True,
                                                   intercept_scaling=1,
                                                   l1_ratio=None, max_iter=1000,
                                                   multi_class='auto',
                                                   n_jobs=None, penalty='l2',
                                                   random_state=0,
                                                   solver='lbfgs', tol=0.0001,
                                                   verbose=0,
                                                   warm_start=False))],
                   final_estimator=LogisticRegression(C=1.0, class_weight=None,
                                                      dual=False,
                                                      fit_intercept=True,
                                                      intercept_scaling=1,
                                                      l1_ratio=None,
                                                      max_iter=1000,
                                                      multi_class='auto',
                                                      n_jobs=None, penalty='l2',
                                                      random_state=0,
                                                      solver='lbfgs',
                                                      tol=0.0001, verbose=0,
                                                      warm_start=False),
                   n_jobs=-1, passthrough=True, stack_method='auto', verbose=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024563C17010>)
2023-10-16 10:07:33,567:INFO:Checking exceptions
2023-10-16 10:07:33,567:INFO:Preloading libraries
2023-10-16 10:07:33,574:INFO:Set up data.
2023-10-16 10:07:33,601:INFO:Set up index.
2023-10-16 10:07:33,769:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning:

Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.


2023-10-16 10:07:33,789:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning:

Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.


2023-10-16 10:07:33,828:WARNING:C:\Users\clabc\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.10_qbz5n2kfra8p0\LocalCache\local-packages\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning:

Note that pos_label (set to 'D') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.


2023-10-16 10:07:38,584:INFO:Initializing save_model()
2023-10-16 10:07:38,584:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbdt',
                                                                                              class_weight=None,
                                                                                              colsample_bytree=1....
                                                                    verbose=0,
                                                                    warm_start=False))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=0,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=True,
                                    stack_method='auto', verbose=0))],
         verbose=False), model_name=Modelo_Segmentacion_Customer, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\clabc\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbd...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('transformation',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=PowerTransformer(copy=True,
                                                                 method='yeo-johnson',
                                                                 standardize=False))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-10-16 10:07:38,585:INFO:Adding model into prep_pipe
2023-10-16 10:07:38,585:WARNING:Only Model saved as it was a pipeline.
2023-10-16 10:07:38,688:INFO:Modelo_Segmentacion_Customer.pkl saved in current working directory
2023-10-16 10:07:39,246:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbdt',
                                                                                              class_weight=None,
                                                                                              colsample_bytree=1....
                                                                    verbose=0,
                                                                    warm_start=False))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=0,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=True,
                                    stack_method='auto', verbose=0))],
         verbose=False)
2023-10-16 10:07:39,246:INFO:save_model() successfully completed......................................
2023-10-16 10:07:39,991:INFO:Initializing load_model()
2023-10-16 10:07:39,991:INFO:load_model(model_name=Modelo_Segmentacion_Customer, platform=None, authentication=None, verbose=True)
2023-10-16 10:07:41,216:INFO:Initializing predict_model()
2023-10-16 10:07:41,217:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002456131B850>, estimator=Pipeline(memory=FastMemory(location=C:\Users\clabc\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('iterative_imputer',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=IterativeImputer(add_indicator=False,
                                                                 cat_estimator=LGBMClassifier(boosting_type='gbd...
                                                                    verbose=0,
                                                                    warm_start=False))],
                                    final_estimator=LogisticRegression(C=1.0,
                                                                       class_weight=None,
                                                                       dual=False,
                                                                       fit_intercept=True,
                                                                       intercept_scaling=1,
                                                                       l1_ratio=None,
                                                                       max_iter=1000,
                                                                       multi_class='auto',
                                                                       n_jobs=None,
                                                                       penalty='l2',
                                                                       random_state=0,
                                                                       solver='lbfgs',
                                                                       tol=0.0001,
                                                                       verbose=0,
                                                                       warm_start=False),
                                    n_jobs=-1, passthrough=True,
                                    stack_method='auto', verbose=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024563433EB0>)
2023-10-16 10:07:41,217:INFO:Checking exceptions
2023-10-16 10:07:41,217:INFO:Preloading libraries
2023-10-16 10:07:41,223:INFO:Set up data.
2023-10-16 10:07:41,242:INFO:Set up index.
